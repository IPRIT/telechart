{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/core/misc/EventEmitter.js","webpack:///./src/utils/constants.js","webpack:///./src/utils/animation.js","webpack:///./src/utils/browser.js","webpack:///./src/utils/ripple.js","webpack:///./src/utils/base.js","webpack:///./src/utils/text.js","webpack:///./src/utils/dom.js","webpack:///./src/utils/events.js","webpack:///./src/utils/themes.js","webpack:///./src/utils/algorithms.js","webpack:///./src/core/animation/AnimationSource.js","webpack:///./src/core/SvgRenderer.js","webpack:///./src/core/series/SeriesTypes.js","webpack:///./src/core/point/Point.js","webpack:///./src/core/animation/Tween.js","webpack:///./src/core/chart/ChartTypes.js","webpack:///./src/core/series/Series.js","webpack:///./src/core/chart/events/ChartEvents.js","webpack:///./src/core/chart/Label.js","webpack:///./src/core/chart/axis/ChartAxis.js","webpack:///./src/core/chart/axis/ChartAxisY.js","webpack:///./src/core/chart/axis/ChartAxisX.js","webpack:///./src/core/chart/BaseChart.js","webpack:///./src/core/chart/Chart.js","webpack:///./src/core/misc/Clock.js","webpack:///./src/core/chart/events/NavigatorChartEvents.js","webpack:///./src/core/chart/NavigatorChart.js","webpack:///./src/core/chart/LabelButtons.js","webpack:///./src/Telechart.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EventEmitter","this","_eventListeners","_proto","emit","eventName","_len","arguments","length","args","Array","_key","_fireEvent","apply","concat","on","cb","context","addEventListener","once","addEventListenerOnce","_subscribeEvent","_this","listener","_len2","_key2","removeEventListener","listenerIndex","findIndex","_ref","splice","removeAllListeners","_allocateEvent","push","eventListeners","_len3","_key3","_eventListeners$i","TimeRanges","second","minute","hour","day","week","month","year","FRAMES_PER_SECOND","FRAMES_DELTA_SEC","FRAMES_DELTA_MS","warp","deltaTime","framesDeltaSec","warpRatio","animationTimeout","timeoutMs","Promise","resolve","fulfillmentCallback","requestAnimationFrame","setTimeout","_","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","isBrowserSafari","test","navigator","userAgent","isTouchEventsSupported","document","documentElement","passiveSupported","options","passive","window","err","isPassiveEventSupported","passiveIfSupported","passiveIfSupportedFn","isTransformAvailable","div","createElement","undefined","style","isTransformSupported","el","rippleAttribute","ripple","show","e","_temp","_ref$value","getAttribute","container","animation","appendChild","className","size","clientWidth","clientHeight","width","center","height","computed","getComputedStyle","position","offset","getBoundingClientRect","x","clientX","left","y","clientY","top","classList","add","dataset","activated","Date","now","remove","hide","ripples","getElementsByClassName","delay","Number","parentNode","removeChild","attachRipple","binding","setAttribute","detachRipple","objectEachKey","fn","keys","forEach","objectMapKey","map","clampNumber","min","max","Infinity","Math","ensureNumber","isNaN","isObject","isDate","valueOf","capitalize","text","String","toUpperCase","substr","cssText","styleObject","reduce","css","prop","camelToKebabCase","toLowerCase","replace","parseQueryString","href","queryString","split","slice","part","keyValue","result","obj","assign","tagName","children","element","createElementNS","attrs","useNS","setAttributesNS","attrsNS","setAttributes","isArray","node","innerHTML","textContent","resolveElement","elementOrSelector","querySelector","getElementOffset","rect","win","ownerDocument","defaultView","pageYOffset","pageXOffset","getElementRelativeOffset","targetElement","relativeElement","targetOffset","relativeOffset","scrollTop","scrollLeft","getDocumentHeight","body","scrollHeight","offsetHeight","getDocumentScrollTop","supportPageOffset","isCSS1Compat","compatMode","getWindowHeight","innerHeight","getElementHeight","getElementWidth","innerWidth","getElementScrollHeight","getElementScrollWidth","scrollWidth","offsetWidth","camelCaseAttrWhiteList","attr","includes","setAttributeNS","removeElement","hasClass","RegExp","addClass","classNames","trim","removeClass","existingClasses","classesToDelete","Set","has","ev","ROOT_CLASS_NAME","interpolateThemeClass","themeName","ChartThemes","default","dark","ChartThemesColors","arraysEqual","arrayA","arrayB","arrayMinIndex","array","startIndex","endIndex","minIndex","arrayMin","arrayMaxIndex","maxIndex","arrayMax","arrayMinMaxIndexes","arrayMinMax","_arrayMinMaxIndexes","arraySum","sum","arrayAvg","binarySearchIndexes","order","right","mid","binarySearchObjectIndexes","arrayDiff","dict","AnimationSourceEvents","AnimationSource","_EventEmitter","updatesPerSecond","timeScale","_timeElapsed","_timeScale","_updateInvokes","_updatesPerSecond","_updateEach","_lastUpdateAt","_paused","update","_callUpdate","dispose","set","telechartTitle","TELECHART_NAME","INTERNAL_AUTOINCREMENT","SvgRenderer","contextElement","_id","_parentContainer","_svgContainer","_minHeight","_minWidth","_width","_height","_isInitialized","_init","createGroup","parent","group","NS","createClipPath","clipPath","createMask","mask","createLinearGradient","stops","stopElements","stopAttrs","gradient","createDesc","createText","tspan","textElement","createDefs","createPath","pathText","pathElement","updatePath","createRect","rectElement","createCircle","cx","cy","radius","circleElement","selector","querySelectorAll","from","destroy","_detachEvents","_clearParentContainer","_updateDimensions","_createSvgContainer","_insertSvgContainer","_attachEvents","Error","xmlns","version","viewBox","class","_onResize","_attachResizeListener","_detachResizeListener","_resizeListener","join","SeriesTypes","POINT_AUTOINCREMENT","Point","_type","_x","_y","_svgX","_svgY","setType","pointType","setX","setY","setXY","addX","addY","addXY","setSvgX","svgX","setSvgY","svgY","setSvgXY","TWEEN_ID","TweenState","NOT_STARTED","RUNNING","PAUSED","COMPLETED","CANCELLED","TweenEvents","DEFAULT_PARAMS","duration","timingFunction","Tween","target","properties","targetValues","params","_params","_state","_duration","_timingFunctionName","_timingFunction","_target","_properties","_targetValues","_startValues","_initParams","_construct","isRunning","_updateAnimation","_checkDuration","start","isNotStarted","_getPropertyValues","pause","finish","_dispose","cancel","patchAnimation","setTimeScale","_this$_params","_getTimingFunction","progress","timingProgress","delta","values","_getPropertyValue","functionName","defaultFunctionName","timingFunctions","ChartTypes","chart","navigatorChart","SERIES_AUTOINCREMENT","OpacityAnimationType","Series","renderer","settings","_parent","_renderer","_chart","_isSimpleChart","_settings","_seriesOptions","_xAxis","_yAxis","_name","_label","_color","_strokeWidth","_visible","_group","_pathText","_pathElement","_pathUpdateNeeded","_marker","_markersGroup","_markerVisible","_markerAnimation","_markerRadius","_maxMarkerRadius","_markerPointIndex","_markerPositionUpdateNeeded","_points","_localMaxY","_localMinY","_opacity","_opacityAnimation","_opacityAnimationType","_parseSettings","initialize","_createPoints","_addEvents","pathUpdated","updateViewportPoints","updatePathOpacity","_updateMarkerPosition","markerAnimation","updateMarkerRadius","firstRender","_createGroup","_createPath","_createMarker","setChart","chartType","setVisible","_createShowAnimation","setInvisible","_createHideAnimation","toggleVisible","showMarker","_createMarkerShowAnimation","hideMarker","_createMarkerHideAnimation","toggleMarker","updateLocalExtremes","_this$_chart$_viewpor","_viewportRangeIndexes","rangeStartIndex","rangeEndIndex","_arrayMinMax","minValue","maxValue","_useViewportPointsInterval","updateViewportPointsByInterval","updateViewportPointsByArray","indexes","_viewportPointsIndexes","pointIndex","point","projectXToSvg","projectYToSvg","_this$_chart$_viewpor2","_updatePathText","requestPathUpdate","setMarkerPointIndex","index","_this$_settings","xAxis","yAxis","label","color","type","_this$_settings$optio","_options$strokeWidth","strokeWidth","id","fill","stroke","strokeLinejoin","strokeLinecap","_computePathTextByInterval","_computePathTextByArray","_markerGroup","_resolveMarkersGroup","markersGroup","svgContainer","transform","_seriesGroupTop","_this2","_onRendererResize","interval","_createOpacityAnimation","opacity","_this3","onFinished","_createMarkerAnimation","_this4","ChartEvents","LABEL_ID","Label","_container","_containerPosition","translateX","translateY","_dateElement","_tableElement","_dataArray","_yearVisible","_hasVisibleData","_createContainer","_createContent","_positionUpdateNeeded","updateDimensions","updatePosition","setData","data","_hasVisibleItems","_updateContent","showLabel","hideLabel","showYear","hideYear","_clampPosition","_setLabelPosition","requestUpdatePosition","parentContainer","_generateTable","items","dataItem","_createTableItem","_toPrecise","title","_getTableItemId","display","visible","_updateTitle","_updateTableItem","ms","date","dateMatch","toUTCString","match","getDate","getFullYear","titleElement","valueElement","precise","toFixed","chartWidth","labelWidth","labelHeight","_this$_getCursorOffse","_getCursorOffset","cursorLeft","cursorTop","labelTranslateX","labelLeft","labelTop","possibleLabelLeft1","possibleLabelLeft2","possibleLabelTop1","documentScrollTop","chartOffsetTop","chartOffsetY","minY","filter","item","AxisElementState","ChartAxis","valuesGroup","axesGroup","axesValues","valuesPool","valuesElementsSize","axesPool","axesElementsSize","maxPoolSize","initialPoolSize","elements","positionUpdateNeeded","animationsUpdateNeeded","createAxesGroup","createValuesGroup","initializePool","updateValues","initializeWrappers","_updateElementsAnimations","updateAnimations","updatePositions","requestUpdateAnimations","oldValues","valuesToDelete","valuesToCreate","indexOf","createNewElements","deleteOldElements","_getElementByValue","created","state","hiddenFromSearch","initializeWrapper","createShowingAnimation","createValueElement","initial","createAxisElement","initializeAxesPool","addAxesToPool","initializeValuesPool","addValuesToPool","getFromAxesPool","shift","restoreAxisElement","console","warn","getFromValuesPool","restoreValueElement","returnToValuesPool","returnToAxesPool","then","transitionDuration","transitionProperty","showing","createHidingAnimation","detachElement","axisElement","indexToDelete","_getElementIndexByValue","computeAxisValues","onChartResize","eachElement","_this$elements$i","elementValue","_this$elements$i$hidd","_updateElementAnimation","ChartAxisY","_ChartAxis","_updatePathElementPosition","_updateValueElementPosition","seriesGroupTop","chartMaskId","insertBefore","_seriesGroup","viewportMinY","localMinY","viewportMaxY","localMaxY","distance","deltaY","divider","pow","toString","floor","currentValue","unshift","_computePathText","dataValue","strokeOpacity","valueText","viewportPadding","textAnchor","_computeValuePosition","ChartAxisX","axesValuesMapping","_interval","chartHeight","pixelX","viewportPixelX","viewportMinX","viewportRange","viewportMaxX","maxAvailableLabels","intervalInPixels","minLabelWidth","foundByPrev","currentLastValue","prevValue","nextValue","dates","_toDateString","timestamp","lastValue","datePart","CHART_ID","BaseChart","_options","_chartHeight","_groupingPixels","_series","_defs","_chartMask","_chartMaskId","_chartMaskPadding","_viewportRange","_viewportDistance","_viewportPixelX","_viewportPixelY","_viewportPadding","_viewportLeftPaddingScale","_viewportRightPaddingScale","_viewportRangeUpdateNeeded","_viewportPointsGroupingNeeded","_currentLocalMinY","_currentLocalMaxY","_minMaxYAnimation","_minMaxYAnimationSign","_rangeAnimation","_rangeAnimationObject","_cursorInsideChart","_axisCursor","_axisCursorPositionX","_axisCursorPointIndex","_axisCursorUpdateNeeded","_yAxisView","_xAxisView","resolveDefs","createChartMask","createSeriesGroup","createSeries","addEvents","setInitialRange","approximateViewportPoints","isChart","initializeAxisCursor","initializeLabel","initializeAxisY","initializeAxisX","minMaxYAnimation","extremesUpdated","hasRangeAnimation","updateViewportRange","to","skipExtremes","updateViewportPixel","_updateAxisCursor","eachSeries","line","hasOpacityAnimation","isHiding","isNavigatorPath","series","_ref$seriesOptions","seriesOptions","groupingOptions","grouping","pixels","columns","types","colors","names","xAxisIndex","column","yAxes","extendSeriesOptions","defs","padding","gradientId","sharpGradient","gradientTransform","stopColor","stopOpacity","_createAxisCursor","_addAxisCursorEvents","yAxisView","xAxisView","setViewportRange","animateViewportRangeTo","minX","maxX","_options$duration","_options$timingFuncti","_options$preservePadd","preservePadding","_this$_clampViewportR","_clampViewportRange","newMinX","newMaxX","_ref2","_ref2$skipExtremes","_ref2$preservePadding","_setViewportRange","oldRangeIndexes","_updateViewportIndexes","localExtremesUpdateRequested","updateExtremes","_options2","_options2$skipExtreme","_options2$preservePad","_this$_viewportRangeI","isNavigatorChart","groupingDistanceLimitX","viewportIndexes","groupStartIndex","middleIndex","isVisible","oldLocalMinY","oldLocalMaxY","updateAnimation","_updateOrCreateMinMaxYAnimation","computeViewportPixelX","currentLocalExtremeDifference","computeViewportPadding","localMinX","localMaxX","onRendererResize","onSeriesVisibleChange","_updateMaskDimensions","getSeriesByLabel","findSeries","setSeriesVisible","setSeriesInvisible","toggleSeries","predicate","setChartType","toRelativeX","projectCursorToX","_ref3","_ref3$pageX","pageX","chartLeft","pageY","_this$_viewportRange","rangeStart","rangeEnd","_binarySearchIndexes","minUpperIndex","_binarySearchIndexes2","maxLowerIndex","_this$_clampViewportR2","globalMinX","globalMaxX","getTime","_ref4","actualPaddingX","receivedLeftPaddingX","receivedRightPaddingX","localExtremeDifference","_createMinMaxYAnimation","_patchMinMaxYAnimation","_this5","_updateMinMaxAnimationSign","_computeAxisCursorPath","_axisCursorGroup","mouseMoveListener","_onMouseMove","mouseLeaveListener","_onMouseLeave","touchStartListener","_onTouchStart","touchMoveListener","_onTouchMove","touchEndListener","_onTouchEnd","_onCursorMove","_onCursorLeave","targetTouch","targetTouches","_touchStartPosition","_isScrollingAction","_this$_touchStartPosi","startPageX","startPageY","abs","deltaX","preventDefault","cancelable","cursorPosition","_this6","insideChart","_insideChart","_setInsideChartState","oldIndex","_findPointIndexByCursor","_updateLabel","changed","_prepareLabelData","date1","date2","cursorX","_binarySearchIndexes3","lowerIndex","upperIndex","isLowerCloser","isLowerVisible","isUpperVisible","isInside","_this7","_markerHideTimeout","clearTimeout","change","_onCursorInsideChartChanged","_showMarkers","_showCursor","_hideMarkers","_hideCursor","_ref5","_getElementOffset2","chartTop","_this8","Chart","_BaseChart","setNavigationRange","_this$_resolveNavigat","_resolveNavigationRange","animateNavigationRangeTo","_this$_resolveNavigat2","initialViewport","globalDistance","Clock","_lastUpdateMs","performance","getDelta","NavigatorChartEvents","NavigatorChart","_offsetY","_paddingTopBottom","_paddingLeftRight","_navigatorGroup","_sliderGroup","_slider","_sliderControllerLeft","_sliderControllerRight","_sliderControllerWidth","_sliderControllerOffset","_sliderWidth","_sliderLeftRightBorderWidth","_overlayLeft","_overlayRight","_overlayLeftWidth","_overlayRightWidth","_overlayColor","_sliderUpdateNeeded","_navigatorRange","_navigatorRangeAnimation","_navigationRangeAnimationObject","_navigatorMinRangeDistance","_navigatorChangeDirection","_updateNavigatorDimensions","_createNavigatorGroup","_createOverlays","_createSliderEventsListeners","updateNavigationRange","_updateNavigatorElements","_this$_clampNavigatio","_clampNavigationRange","newMin","newMax","_ref$emitChange","emitChange","_this$_clampNavigatio2","overlayLeftScale","overlayRightScale","navigatorWidth","offsetY","navigatorHeight","maskId","_sliderMask","_sliderMaskOuter","_sliderMaskInner","preserveDistance","preservedDistance","isRightController","minDistance","_onSliderTouchStart","_onSliderTouchMove","_onSliderTouchEnd","mouseDownListener","_onSliderMouseDown","controllerLeftTouchStartListener","_onSliderControllerTouchStart","controllerLeftTouchMoveListener","_onSliderControllerTouchMove","controllerLeftTouchEndListener","_onSliderControllerTouchEnd","controllerLeftMouseDownListener","_onSliderControllerMouseDown","controllerRightTouchStartListener","controllerRightTouchMoveListener","controllerRightTouchEndListener","controllerRightMouseDownListener","overlayLeftClickListener","_onSliderOverlayClick","overlayRightClickListener","_ev$targetTouches$","_sliderStartEvent","_sliderStartPosition","_targetTouch$pageX","positionDelta","startPosition","_this$_clampNavigatio3","_isSliderScrollingAction","_this$_sliderStartEve","sliderMouseMoveListener","_onSliderMouseMove","lastBodyStyle","cursor","removeAttribute","_ev$pageX","_this$_clampNavigatio4","direction","_ev$targetTouches$2","_sliderControllerStartPosition","_sliderControllerStartEvent","_targetTouch$pageX2","isLeft","_this$_clampNavigatio5","_isSliderControllerScrollingAction","_this$_sliderControll","_onSliderControllerMouseMove","_ev$pageX2","_this$_clampNavigatio6","_resolveNavigatorPosition","halfDistance","_this$_clampNavigatio7","LABEL_BUTTONS_ID","LabelButtons","_createButtons","_createButton","buttonIcon","_createSvgIcon","buttonText","button","selectedClass","animatingClass","hasSelectedClass","iconSize","strokeMiterlimit","TELECHART_ID","Telechart","_rootElement","_navigatorChart","_labelButtons","_themeName","_title","_titleElement","_clock","_animationSource","mountTo","setOptions","mount","root","setTheme","theme","setTitle","_createChart","_createNavigatorChart","_createLabelButtons","_addEventsListeners","animate","rootElement","_createTitle","labelButtons","range","_this3$_chart","_this3$_chart2","__webpack_exports__","Telechart_Telechart"],"mappings":"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","file":"telechart.7955f48bbaa91128fb17.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * Simple event emitter for better performance and app size\n *\n * @author Alexander Belov\n */\nexport class EventEmitter {\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _eventListeners = {};\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   */\n  emit (eventName, ...args) {\n    this._fireEvent( eventName, ...args );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  on (eventName, cb, context = null) {\n    this.addEventListener( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  once (eventName, cb, context = null) {\n    this.addEventListenerOnce( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListener (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    this._subscribeEvent( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListenerOnce (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    const listener = (...args) => {\n      cb.apply( context, args );\n      this.removeEventListener( eventName, listener );\n    };\n\n    this.addEventListener( eventName, listener );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} listener\n   */\n  removeEventListener (eventName, listener) {\n    if (!this._eventListeners[ eventName ]) {\n      return;\n    }\n\n    const listenerIndex = this._eventListeners[ eventName ].findIndex(([ cb ]) => {\n      return listener === cb;\n    });\n\n    if (listenerIndex < 0) {\n      return;\n    }\n\n    this._eventListeners[ eventName ].splice( listenerIndex, 1 );\n  }\n\n  /**\n   * @param {string | *} eventName\n   */\n  removeAllListeners (eventName = null) {\n    if (!eventName) {\n      this._eventListeners = {};\n    } else if (this._eventListeners[ eventName ]) {\n      this._eventListeners[ eventName ] = null;\n      delete this._eventListeners[ eventName ];\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @private\n   */\n  _allocateEvent (eventName) {\n    this._eventListeners[ eventName ] = this._eventListeners[ eventName ] || []\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  _subscribeEvent (eventName, cb, context) {\n    this._allocateEvent( eventName );\n    this._eventListeners[ eventName ].push([ cb, context ]);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   * @private\n   */\n  _fireEvent (eventName, ...args) {\n    const eventListeners = this._eventListeners[ eventName ] || [];\n\n    for (let i = 0; i < eventListeners.length; ++i) {\n      const [ cb, context ] = eventListeners[ i ];\n      cb.apply( context, args );\n    }\n  }\n}\n","const hour = 3600 * 1000;\n\n/**\n * @type {{second: number, minute: number, hour: number, day: number, week: number, month: number, year: number}}\n */\nexport const TimeRanges = {\n  second: 1000,\n  minute: hour / 60,\n  hour,\n  day: hour * 24,\n  week: hour * 24 * 7,\n  month: hour * 24 * 30, // rude\n  year: hour * 24 * 365\n};\n","export const FRAMES_PER_SECOND = 60;\nexport const FRAMES_DELTA_SEC = 1 / 60;\nexport const FRAMES_DELTA_MS = 1000 / 60;\n\n/**\n * @param {number} value\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warp (value, deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return value * warpRatio( deltaTime, framesDeltaSec );\n}\n\n/**\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warpRatio (deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return deltaTime / framesDeltaSec;\n}\n\n/**\n * @param {number} timeoutMs\n * @param {*} args\n * @return {Promise<void>}\n */\nexport function animationTimeout (timeoutMs = 0, ...args) {\n  return new Promise(resolve => {\n    const fulfillmentCallback = resolve.bind( null, ...args );\n    const cb = () => requestAnimationFrame( fulfillmentCallback );\n\n    if (!timeoutMs) {\n      cb();\n    } else {\n      setTimeout( _ => cb(), timeoutMs );\n    }\n  });\n}\n\n// linear\nexport const linear = t => t;\n// accelerating from zero velocity\nexport const easeInQuad = t => t * t;\n// decelerating to zero velocity\nexport const easeOutQuad = t => t * (2 - t);\n// acceleration until halfway, then deceleration\nexport const easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n// accelerating from zero velocity\nexport const easeInCubic = t => t * t * t;\n// decelerating to zero velocity\nexport const easeOutCubic = t => --t * t * t + 1;\n// acceleration until halfway, then deceleration\nexport const easeInOutCubic = t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n// accelerating from zero velocity\nexport const easeInQuart = t => t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuart = t => 1 - --t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuart = t => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t);\n// accelerating from zero velocity\nexport const easeInQuint = t => t * t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuint = t => 1 + --t * t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuint = t => t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n","/**\n * @returns {boolean}\n */\nexport function isBrowserSafari () {\n  return /^((?!chrome|android|crios|fxios).)*safari/i.test( navigator.userAgent );\n}\n\n/**\n * @return {boolean}\n */\nexport function isTouchEventsSupported () {\n  return 'ontouchstart' in document.documentElement;\n}\n\nlet passiveSupported = false;\n\ntry {\n  const options = {\n    get passive() { // This function will be called when the browser\n      //   attempts to access the passive property.\n      passiveSupported = true;\n    }\n  };\n\n  window.addEventListener('test', options, options);\n  window.removeEventListener('test', options, options);\n} catch(err) {\n  passiveSupported = false;\n}\n\nexport const isPassiveEventSupported = passiveSupported;\nexport const passiveIfSupported = passiveSupported ? { passive: true } : false;\nexport const passiveIfSupportedFn = (passive = true) => passiveSupported ? { passive } : false;\n\n/**\n * @return {*}\n */\nexport function isTransformAvailable () {\n  const prefix = 'transform';\n  const div = document.createElement('div');\n\n  return div && div.style[ prefix ] !== undefined;\n}\n\nexport const isTransformSupported = isTransformAvailable();\n","import { isTouchEventsSupported, isTransformSupported } from './browser';\n\nfunction style (el, value) {\n  el.style['transform'] = value;\n  el.style['webkitTransform'] = value;\n}\n\nconst rippleAttribute = 'data-ripple';\n\nconst ripple = {\n  show: (e, el, { value = {} } = {}) => {\n    if (el.getAttribute(rippleAttribute) !== 'true') {\n      return;\n    }\n\n    const container = document.createElement('span');\n    const animation = document.createElement('span');\n\n    container.appendChild(animation);\n    container.className = 'telechart-ripple__container';\n\n    const size = el.clientWidth > el.clientHeight\n      ? el.clientWidth\n      : el.clientHeight;\n    animation.className = 'telechart-ripple__animation';\n    animation.style.width = `${size * (value.center ? 1 : 2)}px`;\n    animation.style.height = animation.style.width;\n\n    el.appendChild(container);\n\n    const computed = window.getComputedStyle(el);\n    if (computed.position !== 'absolute' &&\n      computed.position !== 'fixed') {\n      el.style.position = 'relative';\n    }\n\n    const offset = el.getBoundingClientRect();\n    const x = value.center ? '50%' : `${e.clientX - offset.left}px`;\n    const y = value.center ? '50%' : `${e.clientY - offset.top}px`;\n\n    animation.classList.add('telechart-ripple__animation_enter');\n    animation.classList.add('telechart-ripple__animation_visible');\n    style(animation, `translate(-50%, -50%) translate(${x}, ${y}) scale3d(0.01,0.01,0.01)`);\n    animation.dataset.activated = Date.now();\n\n    setTimeout(() => {\n      animation.classList.remove('telechart-ripple__animation_enter');\n      style(animation, `translate(-50%, -50%) translate(${x}, ${y})  scale3d(0.99,0.99,0.99)`);\n    }, 0);\n  },\n\n  hide: (el) => {\n    if (el.getAttribute(rippleAttribute) !== 'true') {\n      return;\n    }\n\n    const ripples = el.getElementsByClassName('telechart-ripple__animation');\n\n    if (ripples.length === 0) {\n      return;\n    }\n\n    const animation = ripples[ripples.length - 1];\n    const diff = Date.now() - Number(animation.dataset.activated);\n    let delay = 400 - diff;\n\n    delay = delay < 0 ? 0 : delay;\n\n    setTimeout(() => {\n      animation.classList.remove('telechart-ripple__animation_visible');\n\n      setTimeout(() => {\n        // Need to figure out a new way to do this\n        try {\n          if (ripples.length < 1) {\n            el.style.position = null;\n          }\n          animation.parentNode && el.removeChild(animation.parentNode);\n        } catch (e) {}\n      }, 300);\n    }, delay);\n  }\n};\n\n/**\n * @param el\n * @param binding\n */\nexport function attachRipple (el, binding) {\n  if (!isTransformSupported) {\n    return;\n  }\n\n  el.setAttribute( rippleAttribute, true );\n\n  if (isTouchEventsSupported()) {\n    el.addEventListener('touchend', () => ripple.hide(el), false);\n    el.addEventListener('touchcancel', () => ripple.hide(el), false);\n  }\n\n  el.addEventListener('mousedown', e => ripple.show(e, el, binding), false);\n  el.addEventListener('mouseup', () => ripple.hide(el), false);\n  el.addEventListener('mouseleave', () => ripple.hide(el), false);\n  el.addEventListener('dragstart', () => ripple.hide(el), false);\n}\n\n/**\n * @param el\n * @param binding\n */\nexport function detachRipple (el, binding) {\n  el.removeEventListener('touchstart', e => ripple.show(e, el, binding), false);\n  el.removeEventListener('mousedown', e => ripple.show(e, el, binding), false);\n  el.removeEventListener('touchend', () => ripple.hide(el), false);\n  el.removeEventListener('touchcancel', () => ripple.hide(el), false);\n  el.removeEventListener('mouseup', () => ripple.hide(el), false);\n  el.removeEventListener('mouseleave', () => ripple.hide(el), false);\n  el.removeEventListener('dragstart', () => ripple.hide(el), false);\n}\n","/**\n * @param {*} object\n * @param {Function} fn\n */\nexport function objectEachKey (object, fn = () => {}) {\n  Object.keys( object ).forEach( fn );\n}\n\n/**\n * @param {*} object\n * @param {Function} fn\n * @return {*[]}\n */\nexport function objectMapKey (object, fn = () => {}) {\n  return Object.keys( object ).map( fn );\n}\n\n/**\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nexport function clampNumber (value, min = -Infinity, max = Infinity) {\n  if (min > max) {\n    [ min, max ] = [ max, min ];\n  }\n  return Math.min( Math.max( value, min ), max );\n}\n\n/**\n * @param {*} value\n * @return {number}\n */\nexport function ensureNumber (value) {\n  value = Number(value);\n  if (Number.isNaN(value)) {\n    return 0;\n  }\n  return value;\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nexport function isObject (value) {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * @param {Date|*} value\n * @return {boolean}\n */\nexport function isDate (value) {\n  return value instanceof Date && !isNaN( value.valueOf() );\n}\n","/**\n * @param {string} text\n * @return {string}\n */\nexport function capitalize (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return text[ 0 ].toUpperCase() + text.substr(1);\n}\n\n/**\n * @param {Object} styleObject\n * @returns {string}\n */\nexport function cssText (styleObject = {}) {\n  return Object.keys( styleObject ).reduce((css, prop) => {\n    return `${css ? css + ' ' : ''}${camelToKebabCase( prop )}: ${styleObject[ prop ]};`;\n  }, '');\n}\n\n/**\n * @param {string} text\n * @returns {string}\n */\nexport function camelToKebabCase (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return (\n    text[ 0 ].toLowerCase() + text.substr( 1 )\n  ).replace( /([A-Z])/g, '-$1' ).toLowerCase();\n}\n\n/**\n * @param {string} href\n * @return {*}\n */\nexport function parseQueryString (href) {\n  const queryString = href.split('?').slice(1);\n  if (!queryString.length) {\n    return {};\n  }\n\n  return queryString[ 0 ].split( '&' ).map(part => {\n    const keyValue = part.split( '=' );\n    return {\n      [keyValue[ 0 ]]: keyValue[ 1 ]\n    };\n  }).reduce((result, obj) => {\n    return Object.assign(result, obj);\n  })\n}\n","import { objectEachKey } from \"./base\";\nimport { camelToKebabCase } from './text';\n\n/**\n * @param {string} tagName\n * @param {Object} options\n * @param {Array|*} children\n * @param {string|*} ns\n * @return {Element}\n */\nexport function createElement (tagName, options = {}, children = [], ns = null) {\n  const element = !ns\n    ? document.createElement( tagName )\n    : document.createElementNS( ns, tagName );\n\n  if (options.attrs) {\n    !options.useNS\n      ? setAttributes( element, options.attrs )\n      : setAttributesNS( element, options.attrs, options.attrsNS || null );\n  }\n\n  if (children || Array.isArray( children )) {\n    children = [].concat( children );\n    children.forEach(node => {\n      if (typeof node === 'string') {\n        // optimistic way\n        if (/[<>]/i.test( node )) {\n          element.innerHTML += node;\n        } else {\n          element.textContent += node;\n        }\n      } else {\n        element.appendChild( node );\n      }\n    });\n  }\n\n  return element;\n}\n\n/**\n * @param {Element|string} elementOrSelector\n * @return {Element | null}\n */\nexport function resolveElement (elementOrSelector) {\n  if (typeof elementOrSelector !== 'string') {\n    return elementOrSelector;\n  }\n  return document.querySelector( elementOrSelector );\n}\n\n/**\n * @param {Element} element\n * @return {{top: number, left: number}}\n */\nexport function getElementOffset (element) {\n  if (!element) {\n    return { top: 0, left: 0 };\n  }\n\n  try {\n    // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n    const rect = element.getBoundingClientRect();\n    const win = element.ownerDocument.defaultView;\n    return {\n      top: rect.top + win.pageYOffset,\n      left: rect.left + win.pageXOffset\n    };\n  } catch (e) {\n    return { top: 0, left: 0 };\n  }\n}\n\n/**\n * @param {Element} targetElement\n * @param {Element} relativeElement\n * @return {{ top: number, left: number }}\n */\nexport function getElementRelativeOffset (targetElement, relativeElement) {\n  const targetOffset = getElementOffset(targetElement);\n  const relativeOffset = getElementOffset(relativeElement);\n\n  return {\n    top: targetOffset.top - relativeOffset.top + relativeElement.scrollTop,\n    left: targetOffset.left - relativeOffset.left + relativeElement.scrollLeft\n  };\n}\n\n/**\n * @returns {number}\n */\nexport function getDocumentHeight () {\n  return Math.max(\n    document.body.scrollHeight,\n    document.documentElement.scrollHeight,\n    document.body.offsetHeight,\n    document.documentElement.offsetHeight,\n    document.body.clientHeight,\n    document.documentElement.clientHeight\n  );\n}\n\n/**\n * @return {number}\n */\nexport function getDocumentScrollTop () {\n  const supportPageOffset = window.pageXOffset !== undefined;\n  const isCSS1Compat = ((document.compatMode || \"\") === \"CSS1Compat\");\n\n  return supportPageOffset\n    ? window.pageYOffset\n    : isCSS1Compat\n      ? document.documentElement.scrollTop\n      : document.body.scrollTop;\n}\n\n/**\n * @returns {number}\n */\nexport function getWindowHeight () {\n  return window.innerHeight ||\n    (document.documentElement || document.body).clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementHeight (element) {\n  return element.innerHeight || element.clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementWidth (element) {\n  return element.innerWidth || element.clientWidth;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollHeight (element) {\n  return Math.max(\n    element.scrollHeight,\n    element.offsetHeight,\n    element.clientHeight\n  );\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollWidth (element) {\n  return Math.max(\n    element.scrollWidth,\n    element.offsetWidth,\n    element.clientWidth\n  );\n}\n\nconst camelCaseAttrWhiteList = [\n  'viewBox',\n  'gradientTransform'\n];\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n */\nexport function setAttributes (element, attrs = {}) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttribute( attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n * @param {string | *} ns\n */\nexport function setAttributesNS (element, attrs = {}, ns = null) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttributeNS( ns, attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {string} attr\n * @param {*} value\n * @param {string | *} ns\n */\nexport function setAttributeNS (element, attr, value, ns) {\n  // it's a magic but it increases speed for 1-2ms on slow devices\n  // prevent from babel optimisation\n  ns = ns || null;\n  element.setAttributeNS( ns, attr, value );\n}\n\n/**\n * @param element\n */\nexport function removeElement (element) {\n  if (element && element.parentNode) {\n    element.parentNode.removeChild( element );\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} className\n */\nexport function hasClass (element, className) {\n  if (element.classList) {\n    // return element.classList.contains( className );\n  }\n  return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test( element.className );\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function addClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    // return element.classList.add( ...classNames );\n  }\n\n  let className = element.className;\n\n  for (let i = 0; i < classNames.length; ++i) {\n    if (!hasClass( element, classNames[ i ] )) {\n      className += ` ${classNames[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function removeClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    // return element.classList.remove( ...classNames );\n  }\n\n  let existingClasses = element.className.split( ' ' );\n  let classesToDelete = new Set( classNames );\n  let className = '';\n\n  for (let i = 0; i < existingClasses.length; ++i) {\n    if (!classesToDelete.has( existingClasses[ i ] )) {\n      className += ` ${existingClasses[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n","/**\n * @param {Element | Window} element\n * @param {string} eventName\n * @param {Function} cb\n */\nexport function addEventListenerOnce (element, eventName, cb) {\n  if (!element) {\n    return;\n  }\n\n  const listener = ev => {\n    cb( ev );\n    element.removeEventListener( eventName, listener );\n  };\n\n  element.addEventListener( eventName, listener );\n}\n","export const ROOT_CLASS_NAME = 'telechart-root';\n\n/**\n * @param {string} themeName\n * @returns {string}\n */\nexport function interpolateThemeClass (themeName) {\n  return `${ROOT_CLASS_NAME}_theme_${themeName}`;\n}\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemes = {\n  default: 'default',\n  dark: 'dark'\n};\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemesColors = {\n  default: '#ffffff',\n  dark: '#242F3E'\n};\n","/**\n * @param {Array<*>} arrayA\n * @param {Array<*>} arrayB\n * @param {string | *} key\n * @return {boolean}\n */\nexport function arraysEqual (arrayA, arrayB, key = null) {\n  if (!Array.isArray(arrayA)\n    || !Array.isArray(arrayB)\n    || arrayA.length !== arrayB.length) {\n    return false;\n  }\n  for (let i = 0; i < arrayA.length; ++i) {\n    if (key) {\n      if (arrayA[ i ][ key ] !== arrayB[ i ][ key ]) {\n        return false;\n      }\n    } else if (arrayA[ i ] !== arrayB[ i ]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMinIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return minIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMin (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMinIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMaxIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n  }\n  return maxIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMax (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMaxIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMaxIndexes (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return [ minIndex, maxIndex ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMax (array, startIndex = 0, endIndex = array.length - 1) {\n  const [ minIndex, maxIndex ] = arrayMinMaxIndexes( array, startIndex, endIndex );\n  return [\n    array[ minIndex ],\n    array[ maxIndex ],\n  ];\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arraySum (array) {\n  let length = array.length;\n  let sum = 0;\n\n  while (length--) {\n    sum += array[ length ];\n  }\n\n  return sum;\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arrayAvg (array) {\n  let length = array.length;\n  let result = arraySum( array );\n\n  // prevent from dividing by zero\n  if (length) {\n    result = result / length;\n  }\n\n  return result;\n}\n\n/**\n * Finds boundary indexes in an array of numbers\n *\n * @param {Array<number>} array\n * @param {number} value\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchIndexes (array, value, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ] === value) {\n    left = right;\n  } else if (array[ left ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n\n/**\n * Finds boundary indexes in an array of objects\n *\n * @param {Array<Object>} array\n * @param {number} value\n * @param {string} key\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchObjectIndexes (array, value, key, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ][ key ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ][ key ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ][ key ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ][ key ] === value) {\n    left = right;\n  } else if (array[ left ][ key ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n\n/**\n * @param {Array} arrayA\n * @param {Array} arrayB\n * @return {Array}\n */\nexport function arrayDiff (arrayA = [], arrayB = []) {\n  const dict = Object.create( null );\n\n  for (let i = 0; i < arrayA.length; ++i) {\n    dict[ arrayA[ i ] ] = true;\n  }\n\n  const result = [];\n  for (let i = 0; i < arrayB.length; ++i) {\n    if (!dict[ arrayB[ i ] ]) {\n      result.push( arrayB[ i ] );\n    }\n  }\n\n  return result;\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { FRAMES_PER_SECOND } from '../../utils';\n\nexport const AnimationSourceEvents = {\n  UPDATE: 'update'\n};\n\nexport class AnimationSource extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeElapsed = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateInvokes = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updatesPerSecond = 60;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateEach = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateAt = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _paused = false;\n\n  /**\n   * @param {number} updatesPerSecond\n   * @param {number} timeScale\n   */\n  constructor (updatesPerSecond = 60, timeScale = 1) {\n    super();\n\n    this._updatesPerSecond = Math.min( 60, Math.max( 1e-8, updatesPerSecond ) );\n    this._updateEach = FRAMES_PER_SECOND / this._updatesPerSecond;\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (this._paused) {\n      return;\n    }\n\n    this._timeElapsed += deltaTime;\n    this._updateInvokes++;\n\n    if (this._updateInvokes % this._updateEach < 1) {\n      this._callUpdate( ( this._timeElapsed - this._lastUpdateAt ) * this._timeScale );\n      this._lastUpdateAt = this._timeElapsed;\n    }\n  }\n\n  /**\n   * Disposes the instance\n   */\n  dispose () {\n    this._paused = true;\n    this.removeAllListeners();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._paused;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return !this._paused;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set timeScale (value) {\n    this._timeScale = value;\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _callUpdate (deltaTime) {\n    this.emit( AnimationSourceEvents.UPDATE, deltaTime );\n  }\n}\n","import { EventEmitter } from \"./misc/EventEmitter\";\nimport {\n  capitalize,\n  clampNumber,\n  createElement,\n  getElementWidth,\n  resolveElement, setAttributeNS,\n  setAttributes,\n  setAttributesNS\n} from \"../utils\";\n\nconst telechartTitle = `${capitalize( TELECHART_NAME )} ${TELECHART_VERSION} (c) ${TELECHART_AUTHOR}`;\n\nlet INTERNAL_AUTOINCREMENT = 1;\n\nexport class SvgRenderer extends EventEmitter {\n\n  static NS = 'http://www.w3.org/2000/svg';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = INTERNAL_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parentContainer = null;\n\n  /**\n   * @type {SVGElement}\n   * @private\n   */\n  _svgContainer = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minHeight = 440;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minWidth = 100;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _width = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _isInitialized = false;\n\n  /**\n   * @param {Element|string} contextElement\n   */\n  constructor (contextElement) {\n    super();\n\n    this._parentContainer = resolveElement( contextElement );\n    this._init();\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>} children\n   * @param {Element} parent\n   * @return {Element}\n   */\n  createGroup (attrs = {}, children = [], parent = this._svgContainer) {\n    const group = createElement('g', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>|*} children\n   * @param {Element} parent\n   * @return {SVGClipPathElement}\n   */\n  createClipPath (attrs = {}, children = [], parent = this._svgContainer) {\n    const clipPath = createElement('clipPath', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n\n    parent.appendChild( clipPath );\n\n    return clipPath;\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>|*} children\n   * @param {Element} parent\n   * @return {SVGMaskElement}\n   */\n  createMask (attrs = {}, children = [], parent = this._svgContainer) {\n    const mask = createElement('mask', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n\n    parent.appendChild( mask );\n\n    return mask;\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<*>} stops\n   * @param {Element} parent\n   * @return {SVGLinearGradientElement}\n   */\n  createLinearGradient (attrs = {}, stops = [], parent = this._svgContainer) {\n    const stopElements = stops.map(stopAttrs => {\n      return createElement('stop', {\n        useNS: true,\n        attrs: stopAttrs\n      }, [], SvgRenderer.NS);\n    });\n\n    const gradient = createElement('linearGradient', {\n      useNS: true,\n      attrs\n    }, stopElements, SvgRenderer.NS);\n\n    parent.appendChild( gradient );\n\n    return gradient;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Element} parent\n   * @return {SVGDescElement}\n   */\n  createDesc (text = '', parent = this._svgContainer) {\n    const group = createElement('desc', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGTextElement}\n   */\n  createText (text = '', attrs = {}, parent = this._svgContainer) {\n    const tspan = createElement('tspan', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n\n    const textElement = createElement('text', {\n      useNS: true,\n      attrs\n    }, tspan, SvgRenderer.NS);\n\n    parent.appendChild( textElement );\n\n    return textElement;\n  }\n\n  /**\n   * @param {Element} parent\n   * @return {SVGDefsElement}\n   */\n  createDefs (parent = this._svgContainer) {\n    const element = createElement('defs', {\n      useNS: true\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( element );\n\n    return element;\n  }\n\n  /**\n   * @param {string} pathText\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGPathElement}\n   */\n  createPath (pathText, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, { d: pathText });\n\n    const pathElement = createElement('path', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n    parent.appendChild( pathElement );\n\n    return pathElement;\n  }\n\n  /**\n   * @param {SVGPathElement} pathElement\n   * @param {string} pathText\n   */\n  updatePath (pathElement, pathText) {\n    setAttributeNS( pathElement, 'd', pathText, null );\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   * @param {*} attrs\n   * @param {SVGElement | Element} parent\n   * @return {SVGRectElement}\n   */\n  createRect (width, height, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, {\n      width, height\n    });\n\n    const rectElement = createElement('rect', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( rectElement );\n\n    return rectElement;\n  }\n\n  /**\n   * @param {number} cx\n   * @param {number} cy\n   * @param {number} radius\n   * @param {*} attrs\n   * @param {SVGElement | Element} parent\n   * @return {SVGCircleElement}\n   */\n  createCircle (cx = 0, cy = 0, radius = 1, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, {\n      cx, cy, r: radius\n    });\n\n    const circleElement = createElement('circle', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( circleElement );\n\n    return circleElement;\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Element}\n   */\n  querySelector (selector) {\n    return this._svgContainer.querySelector( selector );\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Array<Element>}\n   */\n  querySelectorAll (selector) {\n    return Array.from( this._svgContainer.querySelectorAll( selector ) );\n  }\n\n  /**\n   * Destroy the renderer\n   */\n  destroy () {\n    this._detachEvents();\n    this._clearParentContainer();\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {Element}\n   */\n  get parentContainer () {\n    return this._parentContainer;\n  }\n\n  /**\n   * @return {SVGElement}\n   */\n  get svgContainer () {\n    return this._svgContainer;\n  }\n\n  /**\n   * @return {number}\n   */\n  get width () {\n    return this._width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get height () {\n    return this._height;\n  }\n\n  /**\n   * @return {string}\n   */\n  get viewBox () {\n    return [ 0, 0, this._width, this._height ].join( ' ' );\n  }\n\n  /**\n   * @private\n   */\n  _init () {\n    if (this._isInitialized) {\n      return;\n    }\n\n    this._updateDimensions();\n    this._svgContainer = this._createSvgContainer();\n    this._insertSvgContainer();\n\n    this.createDesc( telechartTitle );\n\n    this._attachEvents();\n\n    this._isInitialized = true;\n  }\n\n  /**\n   * @return {Element}\n   * @private\n   */\n  _createSvgContainer () {\n    const parentContainer = this._parentContainer;\n\n    if (!parentContainer) {\n      throw new Error( 'Parent container is not provided' );\n    }\n\n    return createElement('svg', {\n      useNS: false,\n      attrs: {\n        xmlns: SvgRenderer.NS,\n        version: '1.1',\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox,\n        class: 'telechart-render'\n      }\n    }, [], SvgRenderer.NS);\n  }\n\n  /**\n   * @private\n   */\n  _insertSvgContainer () {\n    this._clearParentContainer();\n    this._parentContainer.appendChild( this._svgContainer );\n  }\n\n  /**\n   * @private\n   */\n  _updateDimensions () {\n    this._width = clampNumber(\n      getElementWidth( this._parentContainer ),\n      this._minWidth\n    );\n    this._height = this._minHeight;\n\n    if (this._svgContainer) {\n      setAttributes(this._svgContainer, {\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  _clearParentContainer () {\n    // clears the child content\n    this._parentContainer.innerHTML = '';\n  }\n\n  /**\n   * @private\n   */\n  _onResize (ev) {\n    this._updateDimensions();\n    this.emit( 'resize', ev );\n  }\n\n  /**\n   * @private\n   */\n  _attachEvents () {\n    this._attachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _detachEvents () {\n    this._detachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _attachResizeListener () {\n    if (this._resizeListener) {\n      this._detachResizeListener();\n    }\n\n    this._resizeListener = this._onResize.bind( this );\n    window.addEventListener( 'resize', this._resizeListener );\n  }\n\n  /**\n   * @private\n   */\n  _detachResizeListener () {\n    if (!this._resizeListener) {\n      return;\n    }\n\n    window.removeEventListener( 'resize', this._resizeListener );\n    this._resizeListener = null;\n  }\n}\n","/**\n * @type {{x: string, line: string}}\n */\nexport const SeriesTypes = {\n  x: 'x',\n  line: 'line'\n};\n","export const PointTypes = {\n  point: 'point',\n  group: 'group',\n};\n\nlet POINT_AUTOINCREMENT = 1;\n\nexport class Point {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = POINT_AUTOINCREMENT++;\n\n  /**\n   * @enum 'point' | 'group'\n   * @type {string}\n   * @private\n   */\n  _type = 'point';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _x = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _y = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgY = 0;\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor (x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n  }\n\n  /**\n   * @param {string} pointType\n   */\n  setType (pointType = 'point') {\n    this._type = pointType;\n  }\n\n  /**\n   * @param {number} x\n   */\n  setX (x) {\n    this._x = x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  setY (y) {\n    this._y = y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  setXY (x, y) {\n    this.setX( x );\n    this.setY( y );\n  }\n\n  /**\n   * @param {number} x\n   */\n  addX (x) {\n    this._x += x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  addY (y) {\n    this._y += y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  addXY (x, y) {\n    this.addX( x );\n    this.addY( y );\n  }\n\n  /**\n   * @param {number} svgX\n   */\n  setSvgX (svgX) {\n    this._svgX = svgX;\n  }\n\n  /**\n   * @param {number} svgY\n   */\n  setSvgY (svgY) {\n    this._svgY = svgY;\n  }\n\n  /**\n   * @param {number} svgX\n   * @param {number} svgY\n   */\n  setSvgXY (svgX, svgY) {\n    this._svgX = svgX;\n    this._svgY = svgY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get x () {\n    return this._x;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get y () {\n    return this._y;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgX () {\n    return this._svgX;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgY () {\n    return this._svgY;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get type () {\n    return this._type;\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport * as timingFunctions from '../../utils';\n\nlet TWEEN_ID = 1;\n\nexport const TweenState = {\n  NOT_STARTED: 1,\n  RUNNING: 2,\n  PAUSED: 3,\n  COMPLETED: 4,\n  CANCELLED: 5\n};\n\nexport const TweenEvents = {\n  STARTED: 'started',\n  PAUSED: 'paused',\n  COMPLETE: 'complete',\n  CANCELLED: 'cancelled'\n};\n\nconst DEFAULT_PARAMS = {\n  timeScale: 1,\n  duration: 500,\n  timingFunction: 'linear'\n};\n\nexport class Tween extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = TWEEN_ID++;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _params = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _state = TweenState.NOT_STARTED;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeScale = DEFAULT_PARAMS.timeScale;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeElapsed = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _duration = DEFAULT_PARAMS.duration;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _timingFunctionName = DEFAULT_PARAMS.timingFunction;\n\n  /**\n   * @type {Function}\n   * @private\n   */\n  _timingFunction = () => {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _target = null;\n\n  /**\n   * @type {Array<string | number>}\n   * @private\n   */\n  _properties = [];\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  _targetValues = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _startValues = [];\n\n  /**\n   * @param {Array<*>} args\n   * @returns {Tween}\n   */\n  static create (...args) {\n    return new Tween( ...args );\n  }\n\n  /**\n   * @param {*} target\n   * @param {string|Array<string | number>} properties\n   * @param {number|Array<number>} targetValues\n   * @param {*} params\n   */\n  constructor (target, properties = [], targetValues = [], params = {}) {\n    super();\n\n    this._target = target;\n    this._properties = [].concat( properties );\n    this._targetValues = [].concat( targetValues );\n    this._initParams( params );\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (!this.isRunning) {\n      return;\n    }\n\n    deltaTime *= this._timeScale;\n    this._timeElapsed += deltaTime;\n\n    this._updateAnimation( deltaTime );\n    this._checkDuration();\n  }\n\n  /**\n   * Runs animation\n   */\n  start () {\n    if (this.isNotStarted) {\n      this._startValues = this._getPropertyValues( this._properties );\n    }\n    this._state = TweenState.RUNNING;\n    this.emit( TweenEvents.STARTED );\n  }\n\n  /**\n   * Stops animation\n   */\n  pause () {\n    this._state = TweenState.PAUSED;\n    this.emit( TweenEvents.PAUSED );\n  }\n\n  /**\n   * Finish & dispose the tween\n   */\n  finish () {\n    this._state = TweenState.COMPLETED;\n    this.emit( TweenEvents.COMPLETE, this._timeElapsed );\n    this._dispose();\n  }\n\n  /**\n   * Cancels current animation\n   */\n  cancel () {\n    this._state = TweenState.CANCELLED;\n    this.emit( TweenEvents.CANCELLED, this._timeElapsed );\n    this._dispose();\n  }\n\n  /**\n   * @param {Array<number>} targetValues\n   */\n  patchAnimation (targetValues = []) {\n    this._targetValues = targetValues;\n    this._startValues = this._getPropertyValues( this._properties );\n    this._timeElapsed = 0;\n  }\n\n  /**\n   * @param {number} timeScale\n   */\n  setTimeScale (timeScale = 1) {\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isNotStarted () {\n    return this._state === TweenState.NOT_STARTED;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return this._state === TweenState.RUNNING;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._state === TweenState.PAUSED;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isCompleted () {\n    return this._state === TweenState.COMPLETED;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get duration () {\n    return this._duration;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get timingFunctionName () {\n    return this._timingFunctionName;\n  }\n\n  /**\n   * @returns {Function}\n   */\n  get timingFunction () {\n    return this._timingFunction;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeRemaining () {\n    return Math.max( 0, Math.min( this._duration, this._duration - this._timeElapsed ) );\n  }\n\n  /**\n   * @returns {number}\n   */\n  get progress () {\n    return Math.min( 1, Math.max( 0, this._timeElapsed / this._duration ) );\n  }\n\n  /**\n   * @param {*} params\n   * @private\n   */\n  _initParams (params) {\n    let {\n      timeScale,\n      duration,\n      timingFunction\n    } = this._params = Object.assign( {}, DEFAULT_PARAMS, params );\n\n    this._timeScale = timeScale;\n    this._duration = duration;\n    this._timingFunctionName = timingFunction;\n    this._timingFunction = this._getTimingFunction( timingFunction );\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _updateAnimation (deltaTime) {\n    const progress = this.progress;\n    const timingProgress = this._timingFunction( progress );\n\n    for (let i = 0, length = this._properties.length; i < length; ++i) {\n      const property = this._properties[ i ];\n      const delta = ( this._targetValues[ i ] - this._startValues[ i ] ) * timingProgress;\n      this._target[ property ] = this._startValues[ i ] + delta;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _checkDuration () {\n    if (this._timeElapsed >= this._duration) {\n      this.finish();\n    }\n  }\n\n  /**\n   * @param {Array<string>} properties\n   * @returns {Array<number>}\n   * @private\n   */\n  _getPropertyValues (properties = []) {\n    let values = [];\n    for (let i = 0, length = properties.length; i < length; ++i) {\n      values[ i ] = this._getPropertyValue( properties[i] );\n    }\n    return values;\n  }\n\n  /**\n   * @param {string} property\n   * @returns {number}\n   * @private\n   */\n  _getPropertyValue (property) {\n    return this._target[ property ] || 0;\n  }\n\n  /**\n   * @param {string} functionName\n   * @returns {Function}\n   * @private\n   */\n  _getTimingFunction (functionName) {\n    const defaultFunctionName = DEFAULT_PARAMS.timingFunction;\n    return timingFunctions[ functionName ] || timingFunctions[ defaultFunctionName ];\n  }\n\n  /**\n   * Disposes the object\n   *\n   * @private\n   */\n  _dispose () {\n    this._params = null;\n    this._timingFunction = null;\n    this._targetValues = null;\n    this._startValues = null;\n    this._properties = null;\n    this._target = null;\n\n    this.removeAllListeners();\n  }\n}\n","/**\n * @type {{navigatorChart: string, chart: string}}\n */\nexport const ChartTypes = {\n  chart: 'chart',\n  navigatorChart: 'navigatorChart'\n};\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { arrayMinMax, arraysEqual, setAttributeNS, setAttributesNS } from '../../utils';\nimport { Point } from '../point/Point';\nimport { PointGroup } from '../point/PointGroup';\nimport { Tween, TweenEvents } from '../animation/Tween';\nimport { ChartTypes } from '../chart/ChartTypes';\n\nlet SERIES_AUTOINCREMENT = 1;\n\nexport const OpacityAnimationType = {\n  hiding: 1,\n  showing: 2\n};\n\nexport class Series extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = SERIES_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parent = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _isSimpleChart = false;\n\n  /**\n   * @type {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   * @private\n   */\n  _settings = {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _seriesOptions = {};\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _yAxis = [];\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _name = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _label = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _color = '#31a8dc';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _strokeWidth = 1;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _visible = true;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _group = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _pathText = null;\n\n  /**\n   * @type {SVGPathElement}\n   * @private\n   */\n  _pathElement = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _pathUpdateNeeded = false;\n\n  /**\n   * @type {SVGCircleElement}\n   * @private\n   */\n  _marker = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _markersGroup = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _markerVisible = false;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _markerAnimation = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _markerRadius = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _maxMarkerRadius = 4;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _markerPointIndex = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _markerPositionUpdateNeeded = false;\n\n  /**\n   * @type {Array<Point>}\n   * @private\n   */\n  _points = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _opacity = 1;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _opacityAnimation = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _opacityAnimationType = null;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Element} parent\n   * @param {*} settings\n   */\n  constructor (renderer, parent, settings = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._parent = parent;\n    this._settings = settings;\n    this._parseSettings();\n  }\n\n  /**\n   * Initializes series with options\n   */\n  initialize () {\n    this._createPoints();\n    this._addEvents();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    let pathUpdated = false;\n\n    if (this._pathUpdateNeeded) {\n      this.updateViewportPoints();\n      this.updatePath();\n\n      this._pathUpdateNeeded = false;\n      pathUpdated = true;\n    }\n\n    if (this._opacityAnimation\n      && this._opacityAnimation.isRunning) {\n      this._opacityAnimation.update( deltaTime );\n      this.updatePathOpacity();\n    }\n\n    // only base charts has markers\n    if (this._isSimpleChart) {\n      if (this._markerPositionUpdateNeeded || pathUpdated) {\n        this._updateMarkerPosition();\n\n        this._markerPositionUpdateNeeded = false;\n      }\n\n      const markerAnimation = this._markerAnimation;\n      const hasMarkerAnimation = markerAnimation && markerAnimation.isRunning;\n      if (hasMarkerAnimation) {\n        markerAnimation.update( deltaTime );\n\n        this.updateMarkerRadius();\n      }\n    }\n  }\n\n  /**\n   * Creates path\n   */\n  firstRender () {\n    if (this._pathElement) {\n      return;\n    }\n\n    // update svgX & svgY for each point\n    this.updateViewportPoints();\n\n    // creates and stores wrapper for following path element\n    this._createGroup();\n\n    // creates and stores initial path element\n    this._createPath();\n\n    if (this._isSimpleChart) {\n      this._createMarker();\n    }\n  }\n\n  /**\n   * @param {Chart | NavigatorChart | BaseChart} chart\n   */\n  setChart (chart) {\n    this._chart = chart;\n    this._isSimpleChart = chart.chartType === ChartTypes.chart;\n  }\n\n  /**\n   * Shows series on the chart\n   */\n  setVisible () {\n    this._visible = true;\n    this._createShowAnimation();\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Hides series from the chart\n   */\n  setInvisible () {\n    this._visible = false;\n    this._createHideAnimation();\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Toggles series\n   */\n  toggleVisible () {\n    this._visible\n      ? this.setInvisible()\n      : this.setVisible();\n  }\n\n  showMarker () {\n    this._createMarkerShowAnimation();\n    this._markerVisible = true;\n  }\n\n  hideMarker () {\n    this._createMarkerHideAnimation();\n    this._markerVisible = false;\n  }\n\n  toggleMarker () {\n    this._markerVisible\n      ? this.hideMarker()\n      : this.showMarker();\n  }\n\n  /**\n   * @private\n   */\n  updateLocalExtremes () {\n    const [ rangeStartIndex, rangeEndIndex ] = this._chart._viewportRangeIndexes;\n\n    const [ minValue, maxValue ] = arrayMinMax(\n      this._yAxis, rangeStartIndex, rangeEndIndex\n    );\n\n    this._localMinY = minValue;\n    this._localMaxY = maxValue;\n  }\n\n  /**\n   * Updates viewport points\n   */\n  updateViewportPoints () {\n    this._chart._useViewportPointsInterval\n      ? this.updateViewportPointsByInterval()\n      : this.updateViewportPointsByArray();\n  }\n\n  /**\n   * Updates points by array of points\n   */\n  updateViewportPointsByArray () {\n    const indexes = this._chart._viewportPointsIndexes;\n\n    for (let i = 0; i < indexes.length; ++i) {\n      const pointIndex = indexes[ i ];\n      const point = this._points[ pointIndex ];\n      point.setSvgXY(\n        this._chart.projectXToSvg( point.x ),\n        this._chart.projectYToSvg( point.y ),\n      );\n    }\n  }\n\n  /**\n   * Updates points by interval\n   */\n  updateViewportPointsByInterval () {\n    const [ startIndex, endIndex ] = this._chart._viewportPointsIndexes;\n    for (let i = startIndex; i <= endIndex; ++i) {\n      const point = this._points[ i ];\n      point.setSvgXY(\n        this._chart.projectXToSvg( point.x ),\n        this._chart.projectYToSvg( point.y ),\n      );\n    }\n  }\n\n  /**\n   * Recompute path text\n   */\n  updatePath () {\n    this._updatePathText();\n    this._renderer.updatePath( this._pathElement, this._pathText );\n  }\n\n  /**\n   * Recompute path text\n   */\n  updatePathOpacity () {\n    setAttributeNS( this._pathElement, 'opacity', this._opacity, null );\n  }\n\n  /**\n   * Recompute path text\n   */\n  updateMarkerRadius () {\n    setAttributeNS( this._marker, 'r', this._markerRadius, null );\n  }\n\n  /**\n   * Mark to update path in next animation frame\n   */\n  requestPathUpdate () {\n    this._pathUpdateNeeded = true;\n  }\n\n  /**\n   * Mark to update marker in next animation frame\n   */\n  setMarkerPointIndex (index) {\n    this._markerPointIndex = index;\n    this._markerPositionUpdateNeeded = true;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {string}\n   */\n  get label () {\n    return this._label;\n  }\n\n  /**\n   * @return {string}\n   */\n  get color () {\n    return this._color;\n  }\n\n  /**\n   * @return {string}\n   */\n  get name () {\n    return this._name;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isVisible () {\n    return this._visible;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @return {string}\n   */\n  get opacityAnimationType () {\n    return this._opacityAnimationType;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isShowing () {\n    return this._opacityAnimationType === OpacityAnimationType.showing;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isHiding () {\n    return this._opacityAnimationType === OpacityAnimationType.hiding;\n  }\n\n  /**\n   * @private\n   */\n  _parseSettings () {\n    const {\n      xAxis, yAxis,\n      label, type,\n      color, name,\n      options = {}\n    } = this._settings;\n\n    this._xAxis = xAxis;\n    this._yAxis = yAxis;\n    this._label = label;\n    this._color = color;\n    this._name = name;\n\n    const {\n      strokeWidth = 1\n    } = options;\n\n    this._strokeWidth = strokeWidth;\n\n    this._seriesOptions = options;\n  }\n\n  /**\n   * @private\n   */\n  _createGroup () {\n    this._group = this._renderer.createGroup({\n      class: 'telechart-series-path-group',\n      id: `telechart-path-${this._id}`,\n      x: 0,\n      y: 0\n    }, [], this._parent);\n  }\n\n  /**\n   * @private\n   */\n  _createPath () {\n    this._updatePathText();\n\n    this._pathElement = this._renderer.createPath(this._pathText, {\n      class: 'telechart-series-path',\n      d: this._pathText,\n      fill: 'none',\n      stroke: this._color,\n      strokeWidth: this._strokeWidth,\n      strokeLinejoin: 'round',\n      strokeLinecap: 'round'\n    }, this._group);\n  }\n\n  /**\n   * @private\n   */\n  _updatePathText () {\n    this._pathText = this._chart._useViewportPointsInterval\n      ? this._computePathTextByInterval( this._chart._viewportPointsIndexes )\n      : this._computePathTextByArray( this._chart._viewportPointsIndexes );\n  }\n\n  /**\n   * @private\n   */\n  _createPoints () {\n    const xAxis = this._xAxis;\n    const yAxis = this._yAxis;\n\n    for (let i = 0; i < xAxis.length; ++i) {\n      this._points.push(\n        new Point( xAxis[ i ], yAxis[ i ] )\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  _createMarker () {\n    if (!this._markerGroup) {\n      this._markerGroup = this._resolveMarkersGroup();\n    }\n\n    this._marker = this._renderer.createCircle(0, 0, this._markerRadius, {\n      class: 'telechart-chart-marker',\n      stroke: this._color,\n      strokeWidth: 2,\n      fill: 'white'\n    }, this._markerGroup);\n  }\n\n  /**\n   * @return {Element}\n   * @private\n   */\n  _resolveMarkersGroup () {\n    const markersGroupClass = 'telechart-chart-markers';\n    const markersGroup = this._renderer.svgContainer.querySelector( `.${markersGroupClass}` );\n\n    if (markersGroup) {\n      return markersGroup;\n    }\n\n    return this._renderer.createGroup({\n      class: markersGroupClass,\n      transform: `translate(0, ${this._chart._seriesGroupTop}) scale(1 1)`,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _updateMarkerPosition () {\n    const x = this._xAxis[ this._markerPointIndex ];\n    const y = this._yAxis[ this._markerPointIndex ];\n\n    const svgX = this._chart.projectXToSvg( x );\n    const svgY = this._chart.projectYToSvg( y );\n\n    setAttributesNS(this._marker, {\n      cx: svgX,\n      cy: svgY\n    });\n  }\n\n  /**\n   * @private\n   */\n  _addEvents () {\n    this._renderer.on('resize', _ => {\n      this._onRendererResize();\n    });\n  }\n\n  /**\n   * @private\n   */\n  _onRendererResize () {\n    this._pathUpdateNeeded = true;\n  }\n\n  /**\n   * @param {Array<number>} indexes\n   * @return {string}\n   * @private\n   */\n  _computePathTextByArray (indexes) {\n    let result = '';\n\n    if (!indexes.length) {\n      return result;\n    }\n\n    result += 'M';\n\n    let point;\n\n    for (let i = 0; i < indexes.length; ++i) {\n      if (i !== 0) {\n        result += 'L';\n      }\n\n      point = this._points[ indexes[ i ] ];\n\n      result += point.svgX + ' ' + point.svgY;\n    }\n\n    return result;\n  }\n\n  /**\n   * @param {Array<number>} interval\n   * @return {string}\n   * @private\n   */\n  _computePathTextByInterval (interval) {\n    let result = '';\n\n    if (!interval.length\n      || interval[ 1 ] - interval[ 0 ] <= 0) {\n      return result;\n    }\n\n    result += 'M';\n\n    const [ startIndex, endIndex ] = interval;\n\n    for (let i = startIndex; i <= endIndex; ++i) {\n      const point = this._points[ i ];\n\n      if (i !== startIndex) {\n        result += 'L';\n      }\n\n      result += point.svgX + ' ' + point.svgY;\n    }\n\n    return result;\n  }\n\n  /**\n   * @private\n   */\n  _createShowAnimation () {\n    if (this._opacityAnimation\n      && this._opacityAnimationType === OpacityAnimationType.showing) {\n      return;\n    }\n    this._createOpacityAnimation( 1 );\n    this._opacityAnimationType = OpacityAnimationType.showing;\n  }\n\n  /**\n   * @private\n   */\n  _createHideAnimation () {\n    if (this._opacityAnimation\n      && this._opacityAnimationType === OpacityAnimationType.hiding) {\n      return;\n    }\n    this._createOpacityAnimation( 0 );\n    this._opacityAnimationType = OpacityAnimationType.hiding;\n  }\n\n  /**\n   * @param {number} opacity\n   * @private\n   */\n  _createOpacityAnimation (opacity) {\n    this._opacityAnimation = new Tween(this, '_opacity', opacity, {\n      duration: 300,\n      timingFunction: 'easeInOutQuad'\n    });\n\n    const onFinished = _ => {\n      this._opacityAnimation = null;\n      this._opacityAnimationType = null;\n      this.requestPathUpdate();\n    };\n\n    this._opacityAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._opacityAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._opacityAnimation.start();\n  }\n\n  /**\n   * @private\n   */\n  _createMarkerShowAnimation () {\n    if (this._markerAnimation && this._markerVisible) {\n      // already have animation\n      return;\n    }\n\n    this._createMarkerAnimation( this._maxMarkerRadius );\n  }\n\n  /**\n   * @private\n   */\n  _createMarkerHideAnimation () {\n    if (this._markerAnimation && !this._markerVisible) {\n      // already have animation\n      return;\n    }\n\n    this._createMarkerAnimation( 0 );\n  }\n\n  /**\n   * @param {number} radius\n   * @private\n   */\n  _createMarkerAnimation (radius) {\n    this._markerAnimation = new Tween(this, '_markerRadius', radius, {\n      duration: this._markerVisible ? 300 : 100,\n      timingFunction: 'easeInOutCubic'\n    });\n\n    const onFinished = _ => {\n      this._markerAnimation = null;\n    };\n\n    this._markerAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._markerAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._markerAnimation.start();\n  }\n}\n","export const ChartEvents = {\n  SERIES_VISIBLE_CHANGE: 'seriesVisibleChange'\n};\n","import { EventEmitter } from '../misc/EventEmitter';\nimport {\n  addClass, clampNumber,\n  createElement,\n  cssText, getDocumentScrollTop,\n  getElementHeight, getElementOffset,\n  getElementWidth, isTransformSupported,\n  removeClass,\n  setAttributes\n} from '../../utils';\n\nlet LABEL_ID = 1;\n\nexport class Label extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = LABEL_ID++;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _container = null;\n\n  /**\n   * @type {{top: number, left: number, translateY: number, translateX: number}}\n   * @private\n   */\n  _containerPosition = {\n    translateX: 0,\n    translateY: 0,\n    top: 0,\n    left: 0\n  };\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _dateElement = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _tableElement = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _width = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = 0;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  _dataArray = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _yearVisible = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _hasVisibleData = false;\n\n  /**\n   * @param {SvgRenderer} renderer\n   */\n  constructor (renderer) {\n    super();\n\n    this._renderer = renderer;\n  }\n\n  /**\n   * @param {Chart | BaseChart} chart\n   */\n  setChart (chart) {\n    this._chart = chart;\n  }\n\n  initialize () {\n    this._createContainer();\n    this._createContent();\n  }\n\n  /**\n   * @param {*} deltaTime\n   */\n  update (deltaTime) {\n    if (this._positionUpdateNeeded) {\n      if (this._hasVisibleData) {\n        this.updateDimensions();\n        this.updatePosition();\n      }\n\n      this._positionUpdateNeeded = false;\n    }\n  }\n\n  /**\n   * @param {Array} data\n   */\n  setData (data = []) {\n    this._dataArray = data;\n    this._hasVisibleData = this._hasVisibleItems();\n\n    this._updateContent();\n  }\n\n  showLabel () {\n    addClass(this._container, 'telechart-chart-label_visible');\n  }\n\n  hideLabel () {\n    removeClass(this._container, 'telechart-chart-label_visible');\n  }\n\n  showYear () {\n    this._yearVisible = true;\n  }\n\n  hideYear () {\n    this._yearVisible = false;\n  }\n\n  updateDimensions () {\n    if (!this._hasVisibleData) {\n      return;\n    }\n\n    this._width = getElementWidth( this._container );\n    this._height = getElementHeight( this._container );\n  }\n\n  updatePosition () {\n    if (!this._hasVisibleData) {\n      return;\n    }\n\n    const position = this._clampPosition( this._width, this._height );\n    this._setLabelPosition( position );\n  }\n\n  requestUpdatePosition () {\n    this._positionUpdateNeeded = true;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get hasVisibleData () {\n    return this._hasVisibleData;\n  }\n\n  /**\n   * @private\n   */\n  _createContainer () {\n    const parent = this._renderer.parentContainer;\n    const container = createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label',\n        style: cssText({\n          opacity: 0\n        })\n      }\n    });\n\n    parent.appendChild( container );\n\n    this._container = container;\n  }\n\n  /**\n   * @private\n   */\n  _createContent () {\n    this._dateElement = createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label__date'\n      }\n    });\n\n    this._tableElement = createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label__table'\n      }\n    }, this._generateTable());\n\n    this._container.appendChild( this._dateElement );\n    this._container.appendChild( this._tableElement );\n  }\n\n  /**\n   * @private\n   */\n  _generateTable () {\n    const items = [];\n\n    for (let i = 0; i < this._dataArray.length; ++i) {\n      const dataItem = this._dataArray[ i ];\n      items.push( this._createTableItem( dataItem ) );\n    }\n\n    return items;\n  }\n\n  /**\n   * @param {*} dataItem\n   * @return {Element}\n   * @private\n   */\n  _createTableItem (dataItem) {\n    const value = createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label__table-item-value'\n      }\n    }, String( this._toPrecise( dataItem.y ) ));\n\n    const title = createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label__table-item-title'\n      }\n    }, dataItem.name);\n\n    return createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label__table-item',\n        id: this._getTableItemId( dataItem.label ),\n        style: cssText({\n          color: dataItem.color,\n          display: dataItem.visible ? 'block' : 'none'\n        })\n      }\n    }, [ value, title ]);\n  }\n\n  /**\n   * @param {string} label\n   * @return {string}\n   * @private\n   */\n  _getTableItemId (label) {\n    return `telechart-chart-label-${this._id}-${label}`;\n  }\n\n  /**\n   * @private\n   */\n  _updateContent () {\n    // update inner content\n    const data = this._dataArray;\n\n    this._updateTitle( data[ 0 ].x );\n\n    for (let i = 0; i < data.length; ++i) {\n      const dataItem = data[ i ];\n      // if (dataItem.visible) {\n        const label = dataItem.label;\n        this._updateTableItem( label, dataItem );\n      // }\n    }\n\n    if (!this._hasVisibleData) {\n      this.hideLabel();\n    }\n  }\n\n  /**\n   * @param ms\n   * @private\n   */\n  _updateTitle (ms) {\n    const date = new Date( ms );\n    const dateFormatted = date.toUTCString();\n    const dateRegex = /([a-zA-Z]+),\\s?\\d{1,2}\\s([a-zA-Z]+)/i;\n    const dateMatch = dateFormatted.match( dateRegex );\n    const dayText = dateMatch[ 1 ];\n    const monthText = dateMatch[ 2 ];\n\n    let title = `${dayText}, ${monthText} ${date.getDate()}`;\n\n    if (this._yearVisible) {\n      title += ` ${date.getFullYear()}`;\n    }\n\n    this._dateElement.innerHTML = title;\n  }\n\n  /**\n   * @private\n   */\n  _updateTableItem (label, dataItem) {\n    const id = this._getTableItemId( label );\n    let element = this._tableElement.querySelector( `#${id}` );\n\n    if (!element) {\n      element = this._createTableItem( dataItem );\n      this._tableElement.appendChild( element );\n    }\n\n    const titleElement = element.querySelector( '.telechart-chart-label__table-item-title' );\n    const valueElement = element.querySelector( '.telechart-chart-label__table-item-value' );\n\n    // update styles\n    setAttributes(element, {\n      style: cssText({\n        color: dataItem.color,\n        display: dataItem.visible ? 'block' : 'none'\n      })\n    });\n\n    titleElement.innerHTML = dataItem.name;\n    valueElement.innerHTML = String( this._toPrecise( dataItem.y ) );\n  }\n\n  /**\n   * @param {number} value\n   * @param {number} precise\n   * @return {number}\n   * @private\n   */\n  _toPrecise (value, precise = 2) {\n    return 1 * value.toFixed( precise );\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   * @return {{top: number, left: number, translateY: number, translateX: number}}\n   * @private\n   */\n  _clampPosition (width, height) {\n    const chartWidth = this._renderer.width;\n    const labelWidth = this._width;\n    const labelHeight = this._height;\n    const { left: cursorLeft, top: cursorTop } = this._getCursorOffset();\n    const leftRightPadding = 4;\n    const labelPadding = 8;\n\n    let labelTranslateX = clampNumber( cursorLeft - 30, leftRightPadding, chartWidth - labelWidth - leftRightPadding );\n    let labelTranslateY = 40;\n\n    let labelLeft = labelTranslateX;\n    let labelTop = labelTranslateY;\n\n    let labelBottomLine = labelTranslateY + labelHeight + leftRightPadding;\n\n    if (labelBottomLine > cursorTop) {\n      let possibleLabelLeft1 = cursorLeft + labelPadding;\n      if (possibleLabelLeft1 + labelWidth <= chartWidth) {\n        labelLeft = possibleLabelLeft1;\n      } else {\n        let possibleLabelLeft2 = cursorLeft - labelWidth - labelPadding;\n        if (possibleLabelLeft2 >= 0) {\n          labelLeft = possibleLabelLeft2;\n        } else {\n          let possibleLabelTop1 = cursorTop - labelHeight - labelPadding;\n          let documentScrollTop = getDocumentScrollTop();\n          let { top: chartOffsetTop } = getElementOffset( this._renderer.parentContainer );\n\n          if (chartOffsetTop + possibleLabelTop1 >= documentScrollTop) {\n            labelTop = possibleLabelTop1;\n          } else {\n            labelTop = documentScrollTop - chartOffsetTop;\n          }\n        }\n      }\n    }\n\n    if (isTransformSupported) {\n      labelTop -= labelTranslateY;\n      labelLeft -= labelTranslateX;\n    }\n\n    return {\n      translateX: labelTranslateX,\n      translateY: labelTranslateY,\n\n      top: labelTop,\n      left: labelLeft\n    };\n  }\n\n  /**\n   * @return {{top: number, left: number}}\n   * @private\n   */\n  _getCursorOffset () {\n    const noop = { left: 0, top: 0 };\n\n    if (!this._dataArray.length) {\n      return noop;\n    }\n\n    const chartOffsetY = this._chart._seriesGroupTop || 0;\n\n    let minIndex = -1;\n    let minY = 1e9;\n    for (let i = 0; i < this._dataArray.length; ++i) {\n      const dataItem = this._dataArray[ i ];\n      if (dataItem.visible && minY > dataItem.svgY) {\n        minIndex = i;\n        minY = dataItem.svgY;\n      }\n    }\n\n    const point = this._dataArray[ minIndex ];\n\n    return {\n      left: point.svgX,\n      top: point.svgY + chartOffsetY\n    };\n  }\n\n  /**\n   * @param {{top: number, left: number, translateY: number, translateX: number}} position\n   * @private\n   */\n  _setLabelPosition (position) {\n    const style = {\n      transform: `translate(${position.translateX}px, ${position.translateY}px)`,\n      top: `${position.top}px`,\n      left: `${position.left}px`,\n    };\n\n    if (!isTransformSupported) {\n      delete style.transform;\n    }\n\n    setAttributes(this._container, {\n      style: cssText( style )\n    });\n\n    this._containerPosition = position;\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  _hasVisibleItems () {\n    return this._dataArray.length > 0\n      && this._dataArray.filter(item => item.visible).length > 0;\n  }\n}\n","import { EventEmitter } from '../../misc/EventEmitter';\nimport {\n  animationTimeout,\n  arrayDiff,\n  clampNumber,\n  cssText,\n  setAttributeNS,\n  setAttributesNS\n} from '../../../utils';\nimport { Tween, TweenEvents } from '../../animation/Tween';\n\nexport const AxisElementState = {\n  pending: 1,\n  showing: 2,\n  hiding: 3\n};\n\nexport class ChartAxis extends EventEmitter {\n\n  /**\n   * @type {SvgRenderer}\n   */\n  renderer = null;\n\n  /**\n   * @type {Chart | BaseChart}\n   */\n  chart = null;\n\n  /**\n   * @type {Element}\n   */\n  valuesGroup = null;\n\n  /**\n   * @type {Element}\n   */\n  axesGroup = null;\n\n  /**\n   * @type {Array<string | number>}\n   */\n  axesValues = [];\n\n  /**\n   * @type {Array<Element>}\n   */\n  valuesPool = [];\n\n  /**\n   * @type {number}\n   */\n  valuesElementsSize = 0;\n\n  /**\n   * @type {Array<Element>}\n   */\n  axesPool = [];\n\n  /**\n   * @type {number}\n   */\n  axesElementsSize = 0;\n\n  /**\n   * @type {number}\n   */\n  maxPoolSize = 200;\n\n  /**\n   * @type {number}\n   */\n  initialPoolSize = 0;\n\n  /**\n   * @type {Array<{state: number, value: *, opacity: number, valueElement: Element, axisElement: Element}>}\n   */\n  elements = [];\n\n  /**\n   * @type {boolean}\n   */\n  positionUpdateNeeded = false;\n\n  /**\n   * @type {boolean}\n   */\n  animationsUpdateNeeded = false;\n\n  /**\n   * @param {SvgRenderer} renderer\n   */\n  constructor (renderer) {\n    super();\n\n    this.renderer = renderer;\n  }\n\n  initialize () {\n    this.createAxesGroup();\n    this.createValuesGroup();\n\n    this.initializePool();\n\n    this.updateValues();\n    this.initializeWrappers();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    this._updateElementsAnimations( deltaTime );\n\n    if (this.animationsUpdateNeeded) {\n      this.updateAnimations();\n\n      this.animationsUpdateNeeded = false;\n    }\n\n    if (this.positionUpdateNeeded) {\n      this.updatePositions();\n\n      this.positionUpdateNeeded = false;\n    }\n  }\n\n  /**\n   * Update position in next animation frame\n   */\n  requestUpdatePosition () {\n    this.positionUpdateNeeded = true;\n  }\n\n  /**\n   * Update position in next animation frame\n   */\n  requestUpdateAnimations () {\n    this.animationsUpdateNeeded = true;\n  }\n\n  updatePositions () {\n  }\n\n  updateAnimations () {\n    const oldValues = this.axesValues;\n\n    this.updateValues();\n\n    const valuesToDelete = arrayDiff( this.axesValues, oldValues );\n    const valuesToCreate = this.axesValues.filter(value => {\n      return oldValues.indexOf( value ) === -1;\n    });\n\n    this.createNewElements( valuesToCreate );\n    this.deleteOldElements( valuesToDelete );\n  }\n\n  /**\n   * @param valuesToCreate\n   */\n  createNewElements (valuesToCreate) {\n    for (let i = 0; i < valuesToCreate.length; ++i) {\n      const value = valuesToCreate[ i ];\n      let element = this._getElementByValue( value );\n      let created = false;\n\n      if (element) {\n        if (element.state === AxisElementState.pending) {\n          // already attached\n          continue;\n        }\n\n        if (element.state === AxisElementState.hiding) {\n          // prevent from searching element again\n          element.hiddenFromSearch = true;\n          element = null;\n        }\n      }\n\n      if (!element) {\n        element = this.initializeWrapper( value );\n        created = true;\n      }\n\n      this.createShowingAnimation( element );\n\n      if (created) {\n        this.elements.push( element );\n      }\n    }\n  }\n\n  /**\n   * @param value\n   * @abstract\n   */\n  initializeWrapper (value) {\n  }\n\n  /**\n   * @param value\n   * @param initial\n   * @abstract\n   */\n  createValueElement (value, initial = false) {\n  }\n\n  /**\n   * @param value\n   * @param initial\n   * @abstract\n   */\n  createAxisElement (value, initial = false) {\n  }\n\n  /**\n   * @abstract\n   */\n  initializePool () {\n  }\n\n  /**\n   * @abstract\n   */\n  initializeAxesPool () {\n    this.addAxesToPool( this.initialPoolSize );\n  }\n\n  /**\n   * @abstract\n   */\n  initializeValuesPool () {\n    this.addValuesToPool( this.initialPoolSize );\n  }\n\n  /**\n   * @param {number} size\n   */\n  addAxesToPool (size) {\n    size = clampNumber( size, 0, this.maxPoolSize - this.axesElementsSize );\n\n    this.axesElementsSize += size;\n\n    for (let i = 0; i < size; ++i) {\n      this.axesPool.push(\n        this.createAxisElement()\n      );\n    }\n  }\n\n  /**\n   * @param {number} size\n   */\n  addValuesToPool (size) {\n    size = clampNumber( size, 0, this.maxPoolSize - this.valuesElementsSize );\n\n    this.valuesElementsSize += size;\n\n    for (let i = 0; i < size; ++i) {\n      this.valuesPool.push(\n        this.createValueElement()\n      );\n    }\n  }\n\n  /**\n   * @param value\n   * @param initial\n   * @return {*}\n   */\n  getFromAxesPool (value, initial = false) {\n    let element = this.axesPool.shift();\n\n    if (!element) {\n      this.addAxesToPool( 1 );\n\n      element = this.axesPool.shift();\n\n      if (!element) {\n        return console.warn( 'Axes pool is empty and reached maximum size' );\n      }\n    }\n\n    this.restoreAxisElement( element, value, initial );\n\n    return element;\n  }\n\n  /**\n   * @param value\n   * @param initial\n   * @return {*}\n   */\n  getFromValuesPool (value, initial = false) {\n    let element = this.valuesPool.shift();\n\n    if (!element) {\n      this.addValuesToPool( 1 );\n\n      element = this.valuesPool.shift();\n\n      if (!element) {\n        return console.warn( 'Values pool is empty and reached maximum size' );\n      }\n    }\n\n    this.restoreValueElement( element, value, initial );\n\n    return element;\n  }\n\n  /**\n   * @param {Element} element\n   */\n  returnToValuesPool (element) {\n    this.valuesPool.push( element );\n  }\n\n  /**\n   * @param {Element} element\n   */\n  returnToAxesPool (element) {\n    this.axesPool.push( element );\n  }\n\n  /**\n   * @param element\n   * @param value\n   * @param initial\n   */\n  restoreAxisElement (element, value, initial = false) {\n    setAttributeNS( element, 'stroke-opacity', Number( initial ), null );\n  }\n\n  /**\n   * @param element\n   * @param value\n   * @param initial\n   */\n  restoreValueElement (element, value, initial = false) {\n    if (!initial) {\n      return setAttributeNS( element, 'opacity', 0, null );\n    }\n\n    setAttributesNS(element, {\n      opacity: 1,\n      style: cssText({\n        opacity: 0,\n      })\n    });\n\n    return animationTimeout( 200 ).then(_ => {\n      setAttributeNS(element, 'style', cssText({\n        opacity: 1,\n        transitionDuration: '.3s',\n        transitionProperty: 'all'\n      }), null);\n\n      return animationTimeout( 300 );\n    }).then(_ => {\n      setAttributeNS( element, 'style', '', null );\n    });\n  }\n\n  /**\n   * @param valuesToDelete\n   */\n  deleteOldElements (valuesToDelete) {\n    for (let i = 0; i < valuesToDelete.length; ++i) {\n      const value = valuesToDelete[ i ];\n      let element = this._getElementByValue( value );\n\n      if (!element\n        || element.state === AxisElementState.hiding) {\n        // already hiding or deleted\n        continue;\n      }\n\n      if (element.state === AxisElementState.showing) {\n        const { animation: showing } = element;\n        showing && showing.cancel();\n      }\n\n      this.createHidingAnimation( element );\n    }\n  }\n\n  /**\n   * @param {*} element\n   * @return {number}\n   */\n  createShowingAnimation (element) {\n    if (element.opacity === 1) {\n      return ( element.state = AxisElementState.pending );\n    }\n\n    const onComplete = _ => {\n      element.animation = null;\n      element.state = AxisElementState.pending;\n    };\n\n    const animation = new Tween(element, 'opacity', 1, {\n      duration: 300,\n      timingFunction: 'easeInOutQuad'\n    });\n    animation.on( TweenEvents.COMPLETE, onComplete );\n    animation.start();\n\n    element.animation = animation;\n    element.state = AxisElementState.showing;\n  }\n\n  /**\n   * @param {*} element\n   */\n  createHidingAnimation (element) {\n    const onComplete = _ => {\n      this.detachElement( element );\n    };\n\n    const animation = new Tween(element, 'opacity', 0, {\n      duration: 300,\n      timingFunction: 'easeInOutQuad'\n    });\n\n    animation.on( TweenEvents.COMPLETE, onComplete );\n    animation.start();\n\n    element.animation = animation;\n    element.state = AxisElementState.hiding;\n  }\n\n  /**\n   * @param {{state: *, value: *, valueElement: Element, axisElement: Element}} element\n   */\n  detachElement (element) {\n    const { value, valueElement, axisElement } = element;\n    const indexToDelete = this._getElementIndexByValue( value );\n\n    if (indexToDelete < 0) {\n      return;\n    }\n\n    if (valueElement) {\n      this.returnToValuesPool( valueElement );\n    }\n\n    if (axisElement) {\n      this.returnToAxesPool( axisElement );\n    }\n\n    this.elements.splice( indexToDelete, 1 );\n  }\n\n  /**\n   * @param {Chart | BaseChart} chart\n   */\n  setChart (chart) {\n    this.chart = chart;\n  }\n\n  /**\n   * @abstract\n   */\n  createValuesGroup () {\n  }\n\n  /**\n   * @abstract\n   */\n  createAxesGroup () {\n  }\n\n  initializeWrappers () {\n    const values = this.axesValues;\n\n    for (let i = 0; i < values.length; ++i) {\n      const element = this.initializeWrapper( values[ i ], true );\n\n      // without animation\n      element.state = AxisElementState.pending;\n      element.opacity = 1;\n\n      this.elements.push( element );\n    }\n  }\n\n  /**\n   * @return {Array<string | number>}\n   */\n  computeAxisValues () {\n    return [];\n  }\n\n  /**\n   * Updates axes values\n   */\n  updateValues () {\n    this.axesValues = this.computeAxisValues();\n  }\n\n  onChartResize () {\n  }\n\n  /**\n   * @param {Function} fn\n   */\n  eachElement (fn = () => {}) {\n    for (let i = 0; i < this.elements.length; ++i) {\n      fn( this.elements[ i ] );\n    }\n  }\n\n  /**\n   * @param value\n   * @return {{state: *, value: *, valueElement: Element, axisElement: Element}}\n   * @private\n   */\n  _getElementByValue (value) {\n    for (let i = 0; i < this.elements.length; ++i) {\n      const { value: elementValue, hiddenFromSearch = false } = this.elements[ i ];\n      if (value === elementValue && !hiddenFromSearch) {\n        return this.elements[ i ];\n      }\n    }\n  }\n\n  /**\n   * @param value\n   * @return {number}\n   * @private\n   */\n  _getElementIndexByValue (value) {\n    for (let i = 0; i < this.elements.length; ++i) {\n      if (value === this.elements[ i ].value) {\n        return i;\n      }\n    }\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _updateElementsAnimations (deltaTime) {\n    this.eachElement(element => {\n      this._updateElementAnimation( element, deltaTime );\n    })\n  }\n\n  /**\n   * @param element\n   * @param deltaTime\n   * @private\n   */\n  _updateElementAnimation (element, deltaTime) {\n    if (!element.animation) {\n      return;\n    }\n\n    const { axisElement, valueElement, animation } = element;\n\n    animation.update( deltaTime );\n\n    if (axisElement) {\n      setAttributeNS( axisElement, 'stroke-opacity', element.opacity, null )\n    }\n\n    if (valueElement) {\n      setAttributeNS( valueElement, 'opacity', element.opacity, null );\n    }\n  }\n}\n","import { AxisElementState, ChartAxis } from './ChartAxis';\nimport { setAttributeNS } from '../../../utils';\n\nexport class ChartAxisY extends ChartAxis {\n\n  updatePositions () {\n    this.eachElement(element => {\n      const { valueElement, axisElement, value } = element;\n\n      if (axisElement) {\n        this._updatePathElementPosition( axisElement, value );\n      }\n\n      if (valueElement) {\n        this._updateValueElementPosition( valueElement, value );\n      }\n    });\n  }\n\n  createValuesGroup () {\n    this.valuesGroup = this.renderer.createGroup({\n      class: 'telechart-chart-axes-values-y',\n      transform: `translate(0, ${this.chart.seriesGroupTop}) scale(1 1)`,\n      mask: `url(#${this.chart.chartMaskId})`\n    }, []);\n  }\n\n  createAxesGroup () {\n    this.axesGroup = this.renderer.createGroup({\n      class: 'telechart-chart-axes-y',\n      transform: `translate(0, ${this.chart.seriesGroupTop}) scale(1 1)`,\n      mask: `url(#${this.chart.chartMaskId})`\n    }, []);\n\n    this.renderer.svgContainer.insertBefore( this.axesGroup, this.chart._seriesGroup );\n  }\n\n  computeAxisValues () {\n    const chart = this.chart;\n    const viewportMinY = chart.localMinY;\n    const viewportMaxY = chart.localMaxY;\n    const distance = viewportMaxY - viewportMinY;\n\n    if (!distance) {\n      return [];\n    }\n\n    let deltaY = distance / 5;\n    let divider = Math.pow(10, Math.max(0, ( distance | 0 ).toString().length - 2) );\n    deltaY = Math.floor( deltaY / divider ) * divider;\n\n    let currentValue = 0;\n    let result = [ currentValue ];\n\n    while (currentValue + deltaY <= viewportMaxY) {\n      result.unshift( currentValue + deltaY );\n      currentValue += deltaY;\n    }\n\n    const maxLength = 6;\n    if (result.length < maxLength) {\n      currentValue = 0;\n      while (currentValue - deltaY >= viewportMinY) {\n        result.push( currentValue - deltaY );\n        currentValue -= deltaY;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @param value\n   * @param {boolean} initial\n   * @return {{axisElement: SVGPathElement, valueElement: SVGTextElement, state: number, opacity: number, value: *}}\n   */\n  initializeWrapper (value, initial = false) {\n    const axisElement = this.getFromAxesPool( value, initial );\n    const valueElement = this.getFromValuesPool( value, initial );\n\n    return {\n      value,\n      opacity: 0,\n      animation: null,\n      state: AxisElementState.showing,\n      axisElement,\n      valueElement\n    };\n  }\n\n  onChartResize () {\n    super.onChartResize();\n\n    this._updateDimensions();\n  }\n\n  /**\n   * @param value\n   * @return {SVGPathElement}\n   */\n  createAxisElement (value) {\n    value = value || 0;\n\n    const pathText = this._computePathText( value );\n\n    const element = this.renderer.createPath(pathText, {\n      class: 'telechart-chart-axis-path',\n      dataValue: value,\n      stroke: 'rgba(163, 196, 220, 0.2)',\n      strokeWidth: 1,\n      strokeOpacity: 0,\n      strokeLinejoin: 'round',\n      strokeLinecap: 'round'\n    }, this.axesGroup);\n\n    this.restoreAxisElement( element, value );\n\n    return element;\n  }\n\n  /**\n   * @param value\n   * @return {SVGTextElement}\n   */\n  createValueElement (value) {\n    value = value || 0;\n\n    const valueText = String( value );\n\n    const element = this.renderer.createText(valueText, {\n      class: 'telechart-chart-axis-value',\n      x: this.chart.viewportPadding,\n      textAnchor: 'start',\n      opacity: 0\n    }, this.valuesGroup);\n\n    this.restoreValueElement( element, value );\n\n    return element;\n  }\n\n  initializePool () {\n    this.initializeAxesPool();\n    this.initializeValuesPool();\n  }\n\n  /**\n   * @param element\n   * @param value\n   * @param initial\n   */\n  restoreAxisElement (element, value, initial = false) {\n    super.restoreAxisElement( element, value, initial );\n\n    value = value || 0;\n\n    const pathText = this._computePathText( value );\n\n    setAttributeNS( element, 'data-value', value, null );\n\n    this.renderer.updatePath( element, pathText );\n  }\n\n  /**\n   * @param element\n   * @param value\n   * @param initial\n   */\n  restoreValueElement (element, value, initial = false) {\n    super.restoreValueElement( element, value, initial );\n\n    value = value || 0;\n\n    const valueText = String( value );\n    const svgY = this._computeValuePosition( value );\n\n    setAttributeNS( element, 'y', svgY, null );\n\n    const tspan = element.querySelector( 'tspan' );\n    tspan.textContent = valueText;\n  }\n\n  /**\n   * @param value\n   * @return {number}\n   * @private\n   */\n  _computeValuePosition (value) {\n    const fontOffsetY = 6;\n    return ( this.chart.projectYToSvg( value ) || 1e6 ) - fontOffsetY;\n  }\n\n  /**\n   * @param {number} value\n   * @return {string}\n   * @private\n   */\n  _computePathText (value) {\n    const svgY = this.chart.projectYToSvg( value ) || 1e6;\n    const startSvgX = this.chart.viewportPadding;\n    const endSvgX = this.chart.chartWidth - this.chart.viewportPadding;\n\n    return `M${startSvgX} ${svgY}L${endSvgX} ${svgY}`;\n  }\n\n  /**\n   * @private\n   */\n  _updateDimensions () {\n    for (let i = 0; i < this.elements.length; ++i) {\n      const { axisElement, value } = this.elements[ i ];\n      this._updatePathElementPosition( axisElement, value );\n    }\n  }\n\n  /**\n   * @param axisElement\n   * @param value\n   * @private\n   */\n  _updatePathElementPosition (axisElement, value) {\n    const pathText = this._computePathText( value );\n    this.renderer.updatePath( axisElement, pathText );\n  }\n\n  /**\n   * @param valueElement\n   * @param value\n   * @private\n   */\n  _updateValueElementPosition (valueElement, value) {\n    const svgY = this._computeValuePosition( value || 0 );\n\n    setAttributeNS( valueElement, 'y', svgY, null );\n  }\n}\n\n","import { AxisElementState, ChartAxis } from './ChartAxis';\nimport { setAttributeNS } from '../../../utils';\n\nexport class ChartAxisX extends ChartAxis {\n\n  /**\n   * @type {*}\n   */\n  axesValuesMapping = {};\n\n  /**\n   * @type {number}\n   */\n  labelWidth = 37;\n\n  /**\n   * @type {number|null}\n   * @private\n   */\n  _interval = null;\n\n  /**\n   * Update values positions\n   */\n  updatePositions () {\n    this.eachElement(element => {\n      const { valueElement, value } = element;\n\n      if (valueElement) {\n        this._updateValueElementPosition( valueElement, this.axesValuesMapping[ value ] );\n      }\n    });\n  }\n\n  createValuesGroup () {\n    this.valuesGroup = this.renderer.createGroup({\n      class: 'telechart-chart-axes-values-x',\n      transform: `translate(0, ${this.chart.seriesGroupTop + this.chart.chartHeight + 18}) scale(1 1)`\n    }, []);\n  }\n\n  createAxesGroup () {\n  }\n\n  computeAxisValues () {\n    const chart = this.chart;\n    const chartWidth = chart.chartWidth;\n    const minLabelWidth = 70;\n    const pixelX = this.chart.viewportPixelX;\n    const viewportMinX = chart.viewportRange[ 0 ];\n    const viewportMaxX = chart.viewportRange[ 1 ];\n    const distance = viewportMaxX - viewportMinX;\n\n    if (!distance) {\n      return [];\n    }\n\n    const maxAvailableLabels = chartWidth / minLabelWidth;\n\n    if (this._interval == null) {\n      this._interval = pixelX * chartWidth / maxAvailableLabels;\n    }\n\n    const intervalInPixels = this._interval / pixelX;\n    if (intervalInPixels < minLabelWidth) {\n      this._interval *= 2;\n    } else if (intervalInPixels > minLabelWidth * 2) {\n      this._interval *= .5;\n    }\n\n    let currentValue = viewportMaxX - pixelX * minLabelWidth / 2;\n\n    if (this.axesValues.length > 0) {\n      let foundByPrev = false;\n\n      for (let i = this.axesValues.length - 1; i >= 0; --i) {\n        const currentLastValue = this.axesValuesMapping[ this.axesValues[ i ] ];\n        const prevValue = currentLastValue - this._interval;\n        const nextValue = currentLastValue + this._interval;\n\n        if (viewportMaxX > prevValue && viewportMaxX < nextValue) {\n          currentValue = currentLastValue;\n          foundByPrev = true;\n          break;\n        }\n      }\n\n      const currentLastValue = this.axesValuesMapping[ this.axesValues[ this.axesValues.length - 1 ] ];\n\n      if (!foundByPrev && ( currentLastValue + this._interval * 2 >= viewportMaxX )) {\n        currentValue = currentLastValue + this._interval;\n      }\n    }\n\n    let result = [];\n\n    while (currentValue >= viewportMinX) {\n      result.unshift( currentValue );\n      currentValue -= this._interval;\n    }\n\n    return result;\n  }\n\n  /**\n   * @param value\n   * @param {boolean} initial\n   * @return {{axisElement: SVGPathElement, valueElement: SVGTextElement, state: number, opacity: number, value: *}}\n   */\n  initializeWrapper (value, initial = false) {\n    const valueElement = this.getFromValuesPool( value, initial );\n\n    return {\n      value,\n      opacity: 0,\n      animation: null,\n      state: AxisElementState.showing,\n      axisElement: null,\n      valueElement\n    };\n  }\n\n  onChartResize () {\n    super.onChartResize();\n  }\n\n  updateValues () {\n    super.updateValues();\n\n    const dates = this.axesValues.map(value => {\n      return this._toDateString( value );\n    });\n\n    for (let i = 0; i < dates.length; ++i) {\n      this.axesValuesMapping[ dates[ i ] ] = this.axesValues[ i ];\n    }\n\n    this.axesValues = dates;\n  }\n\n  /**\n   * @param value\n   * @return {SVGTextElement}\n   */\n  createValueElement (value = null) {\n    const element = this.renderer.createText(value, {\n      class: 'telechart-chart-axis-value',\n      y: 0,\n      textAnchor: 'start',\n      opacity: 0\n    }, this.valuesGroup);\n\n    this.restoreValueElement( element, value );\n\n    return element;\n  }\n\n  initializePool () {\n    this.initializeValuesPool();\n  }\n\n  /**\n   * @param element\n   * @param value\n   * @param initial\n   */\n  restoreValueElement (element, value, initial = false) {\n    super.restoreValueElement( element, value, initial );\n\n    let svgX = 0;\n\n    if (value !== null) {\n      const timestamp = this.axesValuesMapping[ value ];\n      svgX = this._computeValuePosition( timestamp );\n    }\n\n    setAttributeNS( element, 'x', svgX, null );\n\n    const tspan = element.querySelector( 'tspan' );\n    tspan.textContent = (value || '').split( ' ' ).slice( 0, 2 ).join( ' ' );\n  }\n\n  /**\n   * @param value\n   * @param lastValue\n   * @return {number}\n   * @private\n   */\n  _computeValuePosition (value, lastValue = false) {\n    return this.chart.projectXToSvg( value ) - this.labelWidth * .5;\n  }\n\n  /**\n   * @param valueElement\n   * @param value\n   * @private\n   */\n  _updateValueElementPosition (valueElement, value) {\n    setAttributeNS( valueElement, 'x', this._computeValuePosition( value ), null );\n  }\n\n  /**\n   * @param {number} value\n   * @return {string}\n   * @private\n   */\n  _toDateString (value) {\n    const date = new Date( value );\n    const datePart = date.toUTCString().split( ' ' );\n\n    return `${datePart[ 2 ]} ${datePart[ 1 ]} ${date.getFullYear()}`;\n  }\n}\n\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { SeriesTypes } from '../series/SeriesTypes';\nimport { Series } from '../series/Series';\nimport { Tween, TweenEvents } from '../animation/Tween';\nimport { ChartTypes } from './ChartTypes';\nimport { ChartEvents } from './events/ChartEvents';\nimport { Label } from './Label';\n\nimport {\n  arraysEqual,\n  binarySearchIndexes,\n  clampNumber,\n  ensureNumber,\n  getElementOffset,\n  isDate,\n  setAttributeNS\n} from '../../utils';\nimport { ChartAxisY } from './axis/ChartAxisY';\nimport { ChartAxisX } from './axis/ChartAxisX';\n\nlet CHART_ID = 1;\n\nexport class BaseChart extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = CHART_ID++;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _type = '';\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartHeight = 280;\n\n  /**\n   * @type {number}\n   * @private\n   * @default 2\n   */\n  _groupingPixels = 2;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<Series>}\n   * @private\n   */\n  _series = [];\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {SVGDefsElement}\n   * @private\n   */\n  _defs = null;\n\n  /**\n   * @type {SVGMaskElement}\n   * @private\n   */\n  _chartMask = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _chartMaskId = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartMaskPadding = 0;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRange = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRangeIndexes = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportPointsIndexes = [ 0, 0 ];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _useViewportPointsInterval = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportDistance = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPixelX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPixelY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPadding = 13;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportLeftPaddingScale = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportRightPaddingScale = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportRangeUpdateNeeded = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportPointsGroupingNeeded = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentLocalMinY = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentLocalMaxY = null;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _minMaxYAnimation = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minMaxYAnimationSign = null;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _rangeAnimation = null;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _rangeAnimationObject = {};\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _cursorInsideChart = false;\n\n  /**\n   * @type {SVGPathElement}\n   * @private\n   */\n  _axisCursor = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _axisCursorPositionX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _axisCursorPointIndex = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _axisCursorUpdateNeeded = false;\n\n  /**\n   * @type {Label}\n   * @private\n   */\n  _label = null;\n\n  /**\n   * @type {ChartAxisY}\n   * @private\n   */\n  _yAxisView = null;\n\n  /**\n   * @type {ChartAxisX}\n   * @private\n   */\n  _xAxisView = null;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Object} options\n   */\n  constructor (renderer, options = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._options = options;\n  }\n\n  initialize () {\n    this.resolveDefs();\n    this.createChartMask();\n\n    this.createSeriesGroup();\n    this.createSeries();\n\n    this.addEvents();\n\n    this.setInitialRange();\n    this.approximateViewportPoints();\n\n    if (this.isChart) {\n      this.initializeAxisCursor();\n      this.initializeLabel();\n\n      this.initializeAxisY();\n      this.initializeAxisX();\n    }\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    const minMaxYAnimation = this._minMaxYAnimation;\n    const extremesUpdated = minMaxYAnimation && minMaxYAnimation.isRunning;\n\n    if (extremesUpdated) {\n      this._minMaxYAnimation.update( deltaTime );\n    }\n\n    const hasRangeAnimation = this._rangeAnimation && this._rangeAnimation.isRunning;\n\n    if (this._viewportRangeUpdateNeeded || hasRangeAnimation) {\n      if (hasRangeAnimation) {\n        this._rangeAnimation.update( deltaTime );\n\n        this.updateViewportRange([\n          this._rangeAnimationObject.from,\n          this._rangeAnimationObject.to\n        ], { skipExtremes: false });\n\n      } else {\n        this.updateViewportRange();\n      }\n\n      this._viewportRangeUpdateNeeded = false;\n    }\n\n    if (this._viewportPointsGroupingNeeded) {\n      this.approximateViewportPoints();\n\n      this._viewportPointsGroupingNeeded = false;\n    }\n\n    if (extremesUpdated) {\n      this.updateViewportPixel();\n    }\n\n    // cursor updating\n    if (this._axisCursorUpdateNeeded && this.isChart) {\n      this._updateAxisCursor();\n\n      this._axisCursorUpdateNeeded = false;\n    }\n\n    this.eachSeries(line => {\n      const hasOpacityAnimation = line.isHiding;\n      const isNavigatorPath = this._type === ChartTypes.navigatorChart;\n\n      if (extremesUpdated && !(isNavigatorPath && hasOpacityAnimation)) {\n        line.requestPathUpdate();\n      }\n\n      line.update( deltaTime );\n    });\n\n    if (this._label) {\n      this._label.update( deltaTime );\n    }\n\n    if (this._yAxisView) {\n      if (extremesUpdated) {\n        this._yAxisView.requestUpdatePosition();\n      }\n\n      this._yAxisView.update( deltaTime );\n    }\n\n    if (this._xAxisView) {\n      this._xAxisView.update( deltaTime );\n    }\n  }\n\n  /**\n   * Draws initial chart\n   */\n  firstRender () {\n    this.eachSeries(line => line.firstRender());\n  }\n\n  /**\n   * Creates SVG group for storing series paths\n   * @abstract\n   */\n  createSeriesGroup () {\n  }\n\n  /**\n   * Creates array of series\n   */\n  createSeries () {\n    const {\n      series: data,\n      seriesOptions: options = {}\n    } = this._options || {};\n\n    const groupingOptions = options.grouping;\n    if (groupingOptions) {\n      if (groupingOptions.pixels) {\n        this._groupingPixels = ensureNumber( groupingOptions.pixels );\n      }\n    }\n\n    const {\n      columns,\n      types,\n      colors,\n      names\n    } = data;\n\n    const xAxisIndex = columns.findIndex(column => {\n      return types[ column[ 0 ] ] === SeriesTypes.x;\n    });\n    const xAxis = this._xAxis = columns[ xAxisIndex ].slice( 1 );\n\n    let yAxes = columns.slice(); // copy an array to change later\n    yAxes.splice( xAxisIndex, 1 ); // remove x axis from the array\n\n    for (let i = 0; i < yAxes.length; ++i) {\n      const yAxis = yAxes[ i ].slice();\n      const label = yAxis.shift();\n      const type = types[ label ];\n      const color = colors[ label ];\n      const name = names[ label ];\n\n      // prepare series settings\n      const settings = {\n        xAxis, yAxis, label, type,\n        color, name, options: this.extendSeriesOptions( options )\n      };\n\n      // create instance\n      const series = new Series( this._renderer, this._seriesGroup, settings );\n      // provide context for each series\n      series.setChart( this );\n      series.initialize();\n\n      this._series.push( series );\n    }\n  }\n\n  /**\n   * Creates or resolves defs element in SVG container\n   */\n  resolveDefs () {\n    if (this._defs) {\n      return;\n    }\n    const defs = this._renderer.svgContainer.querySelector( 'defs' );\n    this._defs = !defs\n      ? this._renderer.createDefs()\n      : defs;\n  }\n\n  /**\n   * Creates clip mask for the chart and top-bottom shadow mask\n   */\n  createChartMask () {\n    const padding = this._chartMaskPadding;\n\n    this._chartMaskId = `telechart-mask-${this.id}`;\n\n    this._chartMask = this.renderer.createMask({\n      id: this._chartMaskId\n    }, [], this.defs);\n\n    const gradientId = `telechart-mask-gradient-${this.id}`;\n    const sharpGradient = this._type === ChartTypes.navigatorChart;\n\n    // create gradient for rectangle\n    this.renderer.createLinearGradient({\n      id: gradientId,\n      gradientTransform: 'rotate(90)'\n    }, [\n      { offset: '0', stopColor: 'white', stopOpacity: 0 },\n      { offset: sharpGradient ? '0.1%' : '2%', stopColor: 'white', stopOpacity: 1 },\n      { offset: '99.9%', stopColor: 'white', stopOpacity: 1 },\n      { offset: '100%', stopColor: 'white', stopOpacity: 0 },\n    ], this.defs);\n\n    // create rectangle with gradient and append to mask\n    this.renderer.createRect(this.chartWidth, this.chartHeight + padding + 1, {\n      fill: `url(#${gradientId})`,\n      x: 0,\n      y: -padding,\n    }, this._chartMask);\n  }\n\n  /**\n   * Creates chart cursor\n   */\n  initializeAxisCursor () {\n    this._createAxisCursor();\n    this._addAxisCursorEvents();\n  }\n\n  /**\n   * Creates label\n   */\n  initializeLabel () {\n    const label = new Label( this._renderer );\n\n    label.setChart( this );\n    label.initialize();\n\n    this._label = label;\n  }\n\n  /**\n   * Creates y axis\n   */\n  initializeAxisY () {\n    const yAxisView = new ChartAxisY( this._renderer );\n\n    yAxisView.setChart( this );\n    yAxisView.initialize();\n\n    this._yAxisView = yAxisView;\n  }\n\n  /**\n   * Creates y axis\n   */\n  initializeAxisX () {\n    const xAxisView = new ChartAxisX( this._renderer );\n\n    xAxisView.setChart( this );\n    xAxisView.initialize();\n\n    this._xAxisView = xAxisView;\n  }\n\n  /**\n   * Sets initial viewport range for the chart\n   */\n  setInitialRange () {\n    this.setViewportRange();\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   * @param {*} options\n   */\n  animateViewportRangeTo (minX = -Infinity, maxX = Infinity, options = {}) {\n    const {\n      duration = 300,\n      timingFunction = 'easeInOutQuad',\n      preservePadding = false\n    } = options;\n\n    const [ newMinX, newMaxX ] = this._clampViewportRange( minX, maxX, preservePadding );\n\n    if (this._rangeAnimation) {\n      return this._rangeAnimation.patchAnimation( [ newMinX, newMaxX ] );\n    }\n\n    this._rangeAnimationObject = {\n      from: this._viewportRange[ 0 ],\n      to: this._viewportRange[ 1 ]\n    };\n\n    this._rangeAnimation = new Tween(this._rangeAnimationObject, [ 'from', 'to' ], [\n      newMinX, newMaxX\n    ], {\n      duration, timingFunction\n    });\n\n    const onFinished = _ => {\n      this._rangeAnimation = null;\n    };\n\n    this._rangeAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._rangeAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._rangeAnimation.start();\n  }\n\n  /**\n   * @param {number|Date} minX\n   * @param {number|Date} maxX\n   * @param {boolean} skipExtremes\n   * @param {boolean} preservePadding\n   */\n  setViewportRange (minX = -Infinity, maxX = Infinity, { skipExtremes = false, preservePadding = false } = {}) {\n    // recompute X boundaries\n    this._setViewportRange( minX, maxX, preservePadding );\n\n    // remember last indexes\n    const oldRangeIndexes = this._viewportRangeIndexes;\n\n    // recompute indexes range\n    this._updateViewportIndexes();\n\n    let localExtremesUpdateRequested = false;\n\n    if (!arraysEqual( this._viewportRangeIndexes, oldRangeIndexes )) {\n      // do not recompute groups while first render\n      if (oldRangeIndexes.length > 0) {\n        // recompute approximation in next animation update\n        this._viewportPointsGroupingNeeded = true;\n      }\n\n      if (this._xAxisView) {\n        this._xAxisView.requestUpdateAnimations();\n      }\n\n      localExtremesUpdateRequested = true;\n    }\n\n    const updateExtremes = !skipExtremes && localExtremesUpdateRequested;\n\n    this.eachSeries(line => {\n      // update local extremes only if indexes range changed\n      if (updateExtremes) {\n        // update minY and maxY local values for each line\n        line.updateLocalExtremes();\n      }\n\n      // recompute and repaint path in next animation update\n      line.requestPathUpdate();\n    });\n\n    if (updateExtremes) {\n      // update local extremes on chart level\n      this.updateLocalExtremes();\n    }\n\n    // recompute pixel values\n    this.updateViewportPixel();\n\n    // update cursor in next animation frame\n    this._axisCursorUpdateNeeded = true;\n\n    if (this._xAxisView) {\n      this._xAxisView.requestUpdatePosition();\n    }\n  }\n\n  /**\n   * Recompute key variables for viewport range\n   *\n   * @param {Array<number>} viewportRange\n   * @param {*} options\n   */\n  updateViewportRange (viewportRange = this._viewportRange, options = {}) {\n    const {\n      skipExtremes = true,\n      preservePadding = true\n    } = options;\n\n    // recompute X boundaries\n    this.setViewportRange(\n      viewportRange[ 0 ],\n      viewportRange[ 1 ], {\n        skipExtremes,\n        preservePadding\n      }\n    );\n  }\n\n  /**\n   * Approximate points for better performance\n   */\n  approximateViewportPoints () {\n    let [ startIndex, endIndex ] = this._viewportRangeIndexes;\n\n    startIndex = Math.max( 0, startIndex - 1 );\n    endIndex = Math.min( this._xAxis.length - 1, endIndex + 1 );\n\n    // if we have no enough points\n    // then we don't need to approximate\n    if (endIndex - startIndex < 400 && !this.isNavigatorChart) {\n      // just save indexes of points for increase performance\n      // [ startIndex, endIndex ]\n      this._viewportPointsIndexes[ 0 ] = startIndex;\n      this._viewportPointsIndexes[ 1 ] = endIndex;\n      this._useViewportPointsInterval = true;\n\n      // all work done here\n      return;\n    }\n\n    const boostLimit = 500;\n    const boostScale = 1 + this._xAxis.length > boostLimit\n      ? Math.max(0, ( endIndex - startIndex ) / this._xAxis.length ) * 2\n      : 1;\n\n    let groupingDistanceLimitX = boostScale * this._groupingPixels * this._viewportPixelX;\n\n    let viewportIndexes = [];\n    let groupStartIndex = startIndex;\n\n    for (let i = startIndex + 1; i <= endIndex; ++i) {\n      const pointX = this._xAxis[ i ];\n\n      const groupStartDifferenceX = pointX - this._xAxis[ groupStartIndex ];\n\n      if (groupStartDifferenceX >= groupingDistanceLimitX || i === endIndex) {\n        if (groupStartIndex !== i - 1) {\n          // we have 2 or more points to group\n          // [ startIndex, lastIndex ] all indexes inclusive\n          const endIndex = i - 1;\n          const middleIndex = ( groupStartIndex + endIndex ) >> 1;\n          viewportIndexes.push( middleIndex );\n        } else {\n          if (startIndex === i - 1) {\n            // add first point\n            viewportIndexes.push( startIndex );\n          }\n\n          viewportIndexes.push( i );\n        }\n\n        groupStartIndex = i;\n      }\n    }\n\n    this._viewportPointsIndexes = viewportIndexes;\n    this._useViewportPointsInterval = false;\n  }\n\n  /**\n   * Find new local min and max extremes among visible series\n   */\n  updateLocalExtremes () {\n    let localMinY = 0;\n    let localMaxY = 0;\n\n    this.eachSeries(line => {\n      if (!line.isVisible) {\n        // find among visible series\n        return;\n      }\n\n      if (localMinY > line.localMinY) {\n        localMinY = line.localMinY;\n      }\n      if (localMaxY < line.localMaxY) {\n        localMaxY = line.localMaxY;\n      }\n    });\n\n    let oldLocalMinY = this._localMinY;\n    let oldLocalMaxY = this._localMaxY;\n\n    this._localMinY = localMinY;\n    this._localMaxY = localMaxY;\n\n    let updateAnimation = false;\n\n    if (typeof this._currentLocalMinY !== 'number') {\n      // set initial local min y\n      this._currentLocalMinY = this._localMinY;\n    } else if (this._localMinY !== oldLocalMinY) {\n      updateAnimation = true;\n    }\n\n    if (typeof this._currentLocalMaxY !== 'number') {\n      // set initial local max y\n      this._currentLocalMaxY = this._localMaxY;\n    } else if (this._localMaxY !== oldLocalMaxY) {\n      updateAnimation = true;\n    }\n\n    if (updateAnimation) {\n      this._updateOrCreateMinMaxYAnimation();\n\n      if (this._yAxisView) {\n        this._yAxisView.requestUpdateAnimations();\n      }\n    }\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   * @return {number}\n   */\n  computeViewportPixelX (minX = this._viewportRange[ 0 ], maxX = this._viewportRange[ 1 ]) {\n    return ( maxX - minX ) / this.chartWidth;\n  }\n\n  /**\n   * Updates pixel value for each axis\n   */\n  updateViewportPixel () {\n    this._viewportPixelX = this._viewportDistance / this.chartWidth;\n    this._viewportPixelY = this.currentLocalExtremeDifference / this.chartHeight;\n  }\n\n  /**\n   * @param {number} localMinX\n   * @param {number} localMaxX\n   * @return {number}\n   */\n  computeViewportPadding (localMinX, localMaxX) {\n    return this.computeViewportPixelX( localMinX, localMaxX ) * this._viewportPadding;\n  }\n\n  /**\n   * Initialize chart events\n   */\n  addEvents () {\n    this._renderer.on('resize', _ => {\n      this.onRendererResize();\n    });\n\n    this.eachSeries(line => {\n      line.on('visibleChange', _ => {\n        this.onSeriesVisibleChange( line );\n      });\n    });\n  }\n\n  /**\n   * Resize event handler\n   */\n  onRendererResize () {\n    // making requests for future animation update\n    this._viewportRangeUpdateNeeded = true;\n    this._viewportPointsGroupingNeeded = true;\n    this._axisCursorUpdateNeeded = true;\n\n    this._updateMaskDimensions();\n\n    if (this._yAxisView) {\n      this._yAxisView.onChartResize();\n    }\n\n    if (this._xAxisView) {\n      this._xAxisView.onChartResize();\n    }\n  }\n\n  /**\n   * @param {Series} line\n   */\n  onSeriesVisibleChange (line) {\n    // find new extremes and scale\n    this.updateLocalExtremes();\n\n    this.emit( ChartEvents.SERIES_VISIBLE_CHANGE, line );\n  }\n\n  /**\n   * @param {string} label\n   * @return {Series}\n   */\n  getSeriesByLabel (label) {\n    return this.findSeries(line => {\n      return line.label === label;\n    });\n  }\n\n  /**\n   * @param {string} label\n   */\n  setSeriesVisible (label) {\n    const series = this.getSeriesByLabel( label );\n    if (series) {\n      series.setVisible();\n    }\n  }\n\n  /**\n   * @param {string} label\n   */\n  setSeriesInvisible (label) {\n    const series = this.getSeriesByLabel( label );\n    if (series) {\n      series.setInvisible();\n    }\n  }\n\n  /**\n   * @param {string} label\n   */\n  toggleSeries (label) {\n    const series = this.getSeriesByLabel( label );\n    if (series) {\n      series.toggleVisible();\n    }\n  }\n\n  /**\n   * @param {Function} predicate\n   * @return {Series}\n   */\n  findSeries (predicate) {\n    for (let i = 0; i < this._series.length; ++i) {\n      if (predicate( this._series[ i ] )) {\n        return this._series[ i ];\n      }\n    }\n  }\n\n  /**\n   * @param {Function} fn\n   */\n  eachSeries (fn = () => {}) {\n    for (let i = 0; i < this._series.length; ++i) {\n      fn( this._series[ i ], i );\n    }\n  }\n\n  /**\n   * @param {Object} options\n   * @return {*}\n   */\n  extendSeriesOptions (options) {\n    return options;\n  }\n\n  /**\n   * @param {string} type\n   */\n  setChartType (type) {\n    this._type = type;\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   */\n  projectXToSvg (x) {\n    return this.toRelativeX( x ) / this._viewportPixelX;\n  }\n\n  /**\n   * @param {number} y\n   * @return {number}\n   */\n  projectYToSvg (y) {\n    const svgY = this.chartHeight - ( y - this._currentLocalMinY ) / this._viewportPixelY;\n    return clampNumber( svgY, -1e6, 1e6 );\n  }\n\n  /**\n   * @param {number} pageX\n   * @param {number} pageY\n   * @return {number}\n   */\n  projectCursorToX ({ pageX = 0, pageY = 0 }) {\n    const { left } = getElementOffset( this.renderer.svgContainer );\n    const chartLeft = pageX - left;\n\n    return this.viewportRange[ 0 ] + chartLeft * this.viewportPixelX;\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   * @private\n   */\n  toRelativeX (x) {\n    return x - this._viewportRange[ 0 ];\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {string}\n   */\n  get chartType () {\n    return this._type;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isChart () {\n    return this._type === ChartTypes.chart;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isNavigatorChart () {\n    return this._type === ChartTypes.navigatorChart;\n  }\n\n  /**\n   * @return {SvgRenderer}\n   */\n  get renderer () {\n    return this._renderer;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get xAxis () {\n    return this._xAxis;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRange () {\n    return this._viewportRange;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRangeIndexes () {\n    return this._viewportRangeIndexes;\n  }\n\n  /**\n   * @return {number}\n   */\n  get viewportPixelX () {\n    return this._viewportPixelX;\n  }\n\n  /**\n   * @return {number}\n   */\n  get viewportPixelY () {\n    return this._viewportPixelY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get viewportPadding () {\n    return this._viewportPadding;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localExtremeDifference () {\n    return this._localMaxY - this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalExtremeDifference () {\n    return this._currentLocalMaxY - this._currentLocalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalMinY () {\n    return this._currentLocalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalMaxY () {\n    return this._currentLocalMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartWidth () {\n    return this._renderer.width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return this._chartHeight;\n  }\n\n  /**\n   * @return {string}\n   */\n  get chartMaskId () {\n    return this._chartMaskId;\n  }\n\n  /**\n   * @return {Tween}\n   */\n  get minMaxYAnimation () {\n    return this._minMaxYAnimation;\n  }\n\n  /**\n   * @return {SVGDefsElement}\n   */\n  get defs () {\n    return this._defs;\n  }\n\n  /**\n   * @return {number}\n   */\n  get seriesGroupTop () {\n    return this._seriesGroupTop;\n  }\n\n  /**\n   * @private\n   */\n  _updateViewportIndexes () {\n    const [ rangeStart, rangeEnd ] = this._viewportRange;\n    const [ minLowerIndex, minUpperIndex ] = binarySearchIndexes( this._xAxis, rangeStart );\n    const [ maxLowerIndex, maxUpperIndex ] = binarySearchIndexes( this._xAxis, rangeEnd );\n\n    this._viewportRangeIndexes = [ minUpperIndex, maxLowerIndex ];\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   * @param {boolean} preservePadding\n   * @private\n   */\n  _setViewportRange (minX, maxX, preservePadding = false) {\n    const [ newMinX, newMaxX ] = this._clampViewportRange( minX, maxX, preservePadding );\n\n    this._viewportRange = [ newMinX, newMaxX ];\n    this._viewportDistance = newMaxX - newMinX;\n  }\n\n  /**\n   * @param {number | Date} minX\n   * @param {number | Date} maxX\n   * @param {boolean} preservePadding\n   * @private\n   */\n  _clampViewportRange (minX, maxX, preservePadding = false) {\n    const xAxis = this._xAxis;\n\n    const globalMinX = xAxis[ 0 ];\n    const globalMaxX = xAxis[ xAxis.length - 1 ];\n\n    if (isDate( minX )) {\n      minX = minX.getTime();\n    }\n    if (isDate( maxX )) {\n      maxX = maxX.getTime();\n    }\n\n    if (minX > maxX) {\n      [ minX, maxX ] = [ maxX, minX ];\n    }\n\n    let newMinX = clampNumber( minX, globalMinX, globalMaxX );\n    let newMaxX = clampNumber( maxX, globalMinX, globalMaxX );\n\n    const actualPaddingX = this.computeViewportPadding( newMinX, newMaxX );\n\n    const receivedLeftPaddingX = clampNumber( newMinX - minX, 0, actualPaddingX );\n    const receivedRightPaddingX = clampNumber( maxX - newMaxX, 0, actualPaddingX );\n\n    if (!preservePadding) {\n      this._viewportLeftPaddingScale = receivedLeftPaddingX / actualPaddingX;\n    }\n    if (this._viewportLeftPaddingScale > 0) {\n      newMinX -= actualPaddingX * this._viewportLeftPaddingScale;\n    }\n\n    if (!preservePadding) {\n      this._viewportRightPaddingScale = receivedRightPaddingX / actualPaddingX;\n    }\n    if (this._viewportRightPaddingScale > 0) {\n      newMaxX += actualPaddingX * this._viewportRightPaddingScale;\n    }\n\n    return [ newMinX, newMaxX ];\n  }\n\n  /**\n   * @private\n   */\n  _updateOrCreateMinMaxYAnimation () {\n    if (!this._minMaxYAnimation) {\n      return this._createMinMaxYAnimation();\n    }\n\n    const currentLocalExtremeDifference = this.currentLocalExtremeDifference;\n    const newLocalExtremeDifference = this.localExtremeDifference;\n    const animationSign = currentLocalExtremeDifference < newLocalExtremeDifference;\n\n    if (animationSign !== this._minMaxYAnimationSign) {\n      return this._createMinMaxYAnimation();\n    }\n\n    this._patchMinMaxYAnimation();\n  }\n\n  /**\n   * @private\n   */\n  _createMinMaxYAnimation () {\n    if (this._minMaxYAnimation) {\n      this._minMaxYAnimation.cancel();\n    }\n\n    this._updateMinMaxAnimationSign();\n\n    this._minMaxYAnimation = new Tween(this, [\n      '_currentLocalMinY',\n      '_currentLocalMaxY'\n    ], [\n      this._localMinY,\n      this._localMaxY\n    ], {\n      duration: 300,\n      timingFunction: 'easeInOutQuad'\n    });\n\n    const onFinished = _ => {\n      this._minMaxYAnimation = null;\n    };\n\n    this._minMaxYAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._minMaxYAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._minMaxYAnimation.start();\n  }\n\n  /**\n   * @private\n   */\n  _patchMinMaxYAnimation () {\n    this._minMaxYAnimation.patchAnimation([\n      this._localMinY,\n      this._localMaxY\n    ]);\n  }\n\n  /**\n   * @private\n   */\n  _updateMinMaxAnimationSign () {\n    this._minMaxYAnimationSign = this.currentLocalExtremeDifference < this.localExtremeDifference;\n  }\n\n  /**\n   * @private\n   */\n  _updateMaskDimensions () {\n    if (!this._chartMask) {\n      return;\n    }\n    const rect = this._chartMask.querySelector( 'rect' );\n    setAttributeNS( rect, 'width', this.chartWidth, null );\n  }\n\n  /**\n   * @private\n   */\n  _createAxisCursor () {\n    const pathText = this._computeAxisCursorPath();\n\n    this._axisCursor = this.renderer.createPath(pathText, {\n      class: 'telechart-chart-cursor',\n      strokeWidth: 1,\n      strokeOpacity: 0,\n      stroke: '#ccc'\n    }, this._axisCursorGroup);\n\n    this._axisCursorGroup = this.renderer.createGroup({\n      class: 'telechart-chart-cursor-group',\n      transform: `translate(0, ${this._seriesGroupTop}) scale(1 1)`\n    }, this._axisCursor);\n\n    this.renderer.svgContainer.insertBefore( this._axisCursorGroup, this._seriesGroup );\n  }\n\n  /**\n   * @private\n   */\n  _updateAxisCursor () {\n    this.renderer.updatePath( this._axisCursor, this._computeAxisCursorPath() );\n  }\n\n  /**\n   * @return {string}\n   * @private\n   */\n  _computeAxisCursorPath () {\n    const x = this.xAxis[ this._axisCursorPointIndex ];\n    const svgX = this.projectXToSvg( x );\n\n    return `M${svgX} 0L${svgX} ${this.chartHeight}`;\n  }\n\n  /**\n   * @private\n   */\n  _addAxisCursorEvents () {\n    const mouseMoveListener = this._onMouseMove.bind( this );\n    const mouseLeaveListener = this._onMouseLeave.bind( this );\n\n    const touchStartListener = this._onTouchStart.bind( this );\n    const touchMoveListener = this._onTouchMove.bind( this );\n    const touchEndListener = this._onTouchEnd.bind( this );\n\n    this.renderer.svgContainer.addEventListener( 'touchstart', touchStartListener, { passive: false } );\n    this.renderer.svgContainer.addEventListener( 'touchmove', touchMoveListener, { passive: false } );\n    this.renderer.svgContainer.addEventListener( 'touchend', touchEndListener );\n\n    this.renderer.svgContainer.addEventListener( 'mousemove', mouseMoveListener );\n    this.renderer.svgContainer.addEventListener( 'mouseleave', mouseLeaveListener );\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onMouseMove (ev) {\n    this._onCursorMove( ev );\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onMouseLeave (ev) {\n    this._onCursorLeave();\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onTouchStart (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    this._touchStartPosition = {\n      pageX: targetTouch.pageX,\n      pageY: targetTouch.pageY\n    };\n\n    this._onCursorMove( targetTouch );\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onTouchMove (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    this._onCursorMove( targetTouch );\n\n    if (this._isScrollingAction === null) {\n      const {\n        pageX: startPageX,\n        pageY: startPageY\n      } = this._touchStartPosition;\n\n      const deltaY = Math.abs( startPageY - targetTouch.pageY );\n      const deltaX = Math.abs( startPageX - targetTouch.pageX );\n\n      this._isScrollingAction = deltaY >= deltaX;\n    }\n\n    if (this._cursorInsideChart\n      && !this._isScrollingAction) {\n      ev.preventDefault();\n    }\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onTouchEnd (ev) {\n    if (this._cursorInsideChart && ev.cancelable) {\n      ev.preventDefault();\n    }\n\n    this._isScrollingAction = null;\n    this._onCursorLeave();\n  }\n\n  /**\n   * @param cursorPosition\n   * @private\n   */\n  _onCursorMove (cursorPosition) {\n    const insideChart = this._insideChart( cursorPosition );\n\n    this._setInsideChartState(\n      insideChart\n    );\n\n    if (!insideChart) {\n      return;\n    }\n\n    const oldIndex = this._axisCursorPointIndex;\n\n    this._axisCursorPositionX = this.projectCursorToX( cursorPosition );\n    this._axisCursorPointIndex = this._findPointIndexByCursor( this._axisCursorPositionX );\n    this._axisCursorUpdateNeeded = true;\n\n    this.eachSeries(line => {\n      line.setMarkerPointIndex( this._axisCursorPointIndex );\n    });\n\n    this._updateLabel( this._axisCursorPointIndex !== oldIndex );\n  }\n\n  /**\n   * @private\n   */\n  _updateLabel (changed = true) {\n    this._label.setData(\n      this._prepareLabelData()\n    );\n\n    const date1 = new Date( this._viewportRange[ 0 ] );\n    const date2 = new Date( this._viewportRange[ 1 ] );\n    if (date1.getFullYear() !== date2.getFullYear()) {\n      this._label.showYear();\n    } else {\n      this._label.hideYear();\n    }\n\n    if (changed) {\n      this._label.requestUpdatePosition();\n    }\n  }\n\n  /**\n   * @param {number} cursorX\n   * @return {number}\n   * @private\n   */\n  _findPointIndexByCursor (cursorX) {\n    const [ lowerIndex, upperIndex ] = binarySearchIndexes( this.xAxis, cursorX );\n\n    let index = null;\n    if (lowerIndex < 0 && upperIndex >= 0) {\n      index = upperIndex;\n    } else if (lowerIndex >= 0 && upperIndex >= this.xAxis.length) {\n      index = lowerIndex;\n    } else {\n      const lowerDistance = Math.abs( cursorX - this.xAxis[ lowerIndex ] );\n      const upperDistance = Math.abs( cursorX - this.xAxis[ upperIndex ] );\n      const isLowerCloser = lowerDistance <= upperDistance;\n\n      const isLowerVisible = this.xAxis[ lowerIndex ] >= this.viewportRange[ 0 ];\n      const isUpperVisible = this.xAxis[ upperIndex ] <= this.viewportRange[ 1 ];\n\n      index = isLowerCloser\n        ? ( isLowerVisible ? lowerIndex : upperIndex )\n        : ( isUpperVisible ? upperIndex : lowerIndex );\n    }\n\n    return index;\n  }\n\n  /**\n   * @private\n   */\n  _onCursorLeave () {\n    this._setInsideChartState( false );\n  }\n\n  /**\n   * @param {boolean} isInside\n   * @private\n   */\n  _setInsideChartState (isInside) {\n    const changed = this._cursorInsideChart !== isInside;\n    if (!changed) {\n      return;\n    }\n\n    this._cursorInsideChart = isInside;\n\n    if (this._markerHideTimeout) {\n      clearTimeout( this._markerHideTimeout );\n      this._markerHideTimeout = null;\n    }\n\n    const change = _ => {\n      this._onCursorInsideChartChanged( isInside );\n    };\n\n    if (!isInside) {\n      // create short delay for cursor & markers hiding\n      this._markerHideTimeout = setTimeout( change , 1000 );\n    } else {\n      change();\n    }\n  }\n\n  /**\n   * @param {boolean} isInside\n   * @private\n   */\n  _onCursorInsideChartChanged (isInside) {\n    if (isInside) {\n      this._showMarkers();\n      this._showCursor();\n      this._label.showLabel();\n    } else {\n      this._hideMarkers();\n      this._hideCursor();\n      this._label.hideLabel();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _showMarkers () {\n    this.eachSeries(line => {\n      if (line.isVisible) {\n        line.showMarker();\n      }\n    });\n  }\n\n  /**\n   * @private\n   */\n  _hideMarkers () {\n    this.eachSeries(line => {\n      line.hideMarker();\n    });\n  }\n\n  /**\n   * @private\n   */\n  _showCursor () {\n    setAttributeNS( this._axisCursor, 'stroke-opacity', 1, null );\n  }\n\n  /**\n   * @private\n   */\n  _hideCursor () {\n    setAttributeNS( this._axisCursor, 'stroke-opacity', 0, null );\n  }\n\n  /**\n   * @param {number} pageX\n   * @param {number} pageY\n   * @return {boolean}\n   * @private\n   */\n  _insideChart ({ pageX, pageY }) {\n    const { top, left } = getElementOffset( this.renderer.svgContainer );\n    const chartTop = pageY - top - this._seriesGroupTop;\n    const chartLeft = pageX - left;\n\n    return chartTop >= 0 && chartTop <= this.chartHeight\n      && chartLeft >= 0 && chartLeft <= this.chartWidth;\n  }\n\n  /**\n   * @return {Array}\n   * @private\n   */\n  _prepareLabelData () {\n    const data = [];\n\n    const index = this._axisCursorPointIndex;\n    const x = this._xAxis[ index ];\n\n    this.eachSeries(line => {\n      data.push({\n        color: line.color,\n        label: line.label,\n        name: line.name,\n        visible: line.isVisible,\n        x,\n        y: line._yAxis[ index ],\n        svgY: this.projectYToSvg( line._yAxis[ index ] ),\n        svgX: this.projectXToSvg( line._xAxis[ index ] )\n      });\n    });\n\n    return data;\n  }\n}\n","import { BaseChart } from './BaseChart';\nimport { cssText } from '../../utils';\nimport { ChartTypes } from './ChartTypes';\n\nexport class Chart extends BaseChart {\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _type = ChartTypes.chart;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartHeight = 290;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartMaskPadding = 20;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _seriesGroupTop = 65;\n\n  /**\n   * Creates SVG group for storing series paths\n   */\n  createSeriesGroup () {\n    this._seriesGroup = this.renderer.createGroup({\n      class: 'telechart-series-group',\n      transform: `translate(0, ${this._seriesGroupTop}) scale(1 1)`,\n      mask: `url(#${this.chartMaskId})`\n    });\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   */\n  setNavigationRange (min, max) {\n    const [ minX, maxX ] = this._resolveNavigationRange( min, max );\n\n    this.setViewportRange( minX, maxX );\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   */\n  animateNavigationRangeTo (min, max) {\n    const [ minX, maxX ] = this._resolveNavigationRange( min, max );\n\n    this.animateViewportRangeTo( minX, maxX );\n  }\n\n  /**\n   * Sets initial viewport range for the chart\n   */\n  setInitialRange () {\n    const globalMinX = this.xAxis[ 0 ];\n    const globalMaxX = this.xAxis[ this.xAxis.length - 1 ];\n    const initialViewport = Math.floor( ( globalMaxX - globalMinX ) * .3 );\n    const viewportPadding = this.computeViewportPadding(\n      globalMaxX - initialViewport,\n      globalMaxX\n    );\n\n    // set initial range\n    this.setViewportRange(\n      globalMaxX - initialViewport - viewportPadding,\n      globalMaxX + viewportPadding\n    );\n  }\n\n  /**\n   * @param {*} options\n   * @return {*}\n   */\n  extendSeriesOptions (options) {\n    return Object.assign({}, options, {\n      strokeWidth: 2\n    });\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return this._chartHeight;\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @private\n   */\n  _resolveNavigationRange (min, max) {\n    const globalMinX = this.xAxis[ 0 ];\n    const globalMaxX = this.xAxis[ this.xAxis.length - 1 ];\n\n    const globalDistance = globalMaxX - globalMinX;\n\n    let minX = globalMinX + min * globalDistance;\n    let maxX = globalMinX + max * globalDistance;\n\n    const padding = this.computeViewportPadding( minX, maxX );\n\n    return [ minX - padding, maxX + padding ];\n  }\n}\n","export class Clock {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateMs = 0;\n\n  constructor () {\n    this._lastUpdateMs = performance.now();\n  }\n\n  /**\n   * @return {number}\n   */\n  getDelta () {\n    const now = performance.now();\n    const delta = now - this._lastUpdateMs;\n    this._lastUpdateMs = now;\n\n    return delta;\n  }\n}\n","export const NavigatorChartEvents = {\n  RANGE_CHANGED: 'rangeChanged',\n  ANIMATE_RANGE: 'animateRange',\n};\n","import { BaseChart } from './BaseChart';\nimport { ChartTypes } from './ChartTypes';\nimport {\n  clampNumber,\n  cssText,\n  getElementOffset, isTouchEventsSupported,\n  passiveIfSupported,\n  setAttributeNS,\n  setAttributesNS\n} from '../../utils';\nimport { NavigatorChartEvents } from './events/NavigatorChartEvents';\nimport { Tween, TweenEvents } from '../animation/Tween';\n\nexport class NavigatorChart extends BaseChart {\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _type = ChartTypes.navigatorChart;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartHeight = 40;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _offsetY = 388;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _paddingTopBottom = 2;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _paddingLeftRight = 11;\n\n  /**\n   * @extends\n   * @type {number}\n   * @private\n   * @readonly\n   */\n  _chartMaskPadding = 1;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _navigatorGroup = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _sliderGroup = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _slider = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _sliderControllerLeft = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _sliderControllerRight = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderControllerWidth = isTouchEventsSupported() ? 30 : 20;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderControllerOffset = isTouchEventsSupported() ? 17 : 12;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderWidth = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderLeftRightBorderWidth = 5;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _overlayLeft = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _overlayRight = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _overlayLeftWidth = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _overlayRightWidth = 0;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _overlayColor = 'rgba(240, 246, 249, 0.75)';\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _sliderUpdateNeeded = false;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _navigatorRange = [ .7, 1 ];\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _navigatorRangeAnimation = null;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _navigationRangeAnimationObject = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _navigatorMinRangeDistance = .05;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _navigatorChangeDirection = 'right';\n\n  /**\n   * Initializes navigator chart\n   */\n  initialize () {\n    super.initialize();\n\n    this._updateNavigatorDimensions();\n    this._createNavigatorGroup();\n    this._createOverlays();\n\n    this._createSliderEventsListeners();\n  }\n\n  update (deltaTime) {\n    super.update( deltaTime );\n\n    const hasRangeAnimation = this._navigatorRangeAnimation && this._navigatorRangeAnimation.isRunning;\n    if (hasRangeAnimation) {\n      this._navigatorRangeAnimation.update( deltaTime );\n\n      this.updateNavigationRange(\n        this._navigationRangeAnimationObject.from,\n        this._navigationRangeAnimationObject.to\n      );\n    }\n\n    if (this._sliderUpdateNeeded) {\n      this._updateNavigatorElements();\n\n      this._sliderUpdateNeeded = false;\n    }\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @param {*} options\n   */\n  animateNavigationRangeTo (min = 0, max = 1, options = {}) {\n    const {\n      duration = 300,\n      timingFunction = 'easeInOutQuad'\n    } = options;\n\n    const [ newMin, newMax ] = this._clampNavigationRange( min, max );\n\n    if (this._navigatorRangeAnimation) {\n      return this._navigatorRangeAnimation.patchAnimation( [ newMin, newMax ] );\n    }\n\n    this._navigationRangeAnimationObject = {\n      from: this._navigatorRange[ 0 ],\n      to: this._navigatorRange[ 1 ]\n    };\n\n    this._navigatorRangeAnimation = new Tween(this._navigationRangeAnimationObject, [ 'from', 'to' ], [\n      newMin, newMax\n    ], {\n      duration, timingFunction\n    });\n\n    const onFinished = _ => {\n      this._navigatorRangeAnimation = null;\n    };\n\n    this._navigatorRangeAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._navigatorRangeAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._navigatorRangeAnimation.start();\n\n    this.emit( NavigatorChartEvents.ANIMATE_RANGE, [ newMin, newMax ] );\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @param {boolean} emitChange\n   */\n  setNavigationRange (min = 0, max = 1, { emitChange = true } = {}) {\n    [ min, max ] = this._clampNavigationRange( min, max );\n    this._navigatorRange = [ min, max ];\n\n    this._updateNavigatorDimensions();\n    this._sliderUpdateNeeded = true;\n\n    if (emitChange) {\n      this.emit( NavigatorChartEvents.RANGE_CHANGED, this._navigatorRange );\n    }\n  }\n\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   */\n  updateNavigationRange (min, max) {\n    this.setNavigationRange( min, max, { emitChange: false } );\n  }\n\n  /**\n   * Creates SVG group for storing series paths\n   */\n  createSeriesGroup () {\n    this._seriesGroup = this.renderer.createGroup({\n      class: 'telechart-navigator-series-group',\n      transform: `translate(0, ${this._offsetY}) scale(1 1)`,\n      mask: `url(#${this.chartMaskId})`\n    });\n  }\n\n  onRendererResize () {\n    super.onRendererResize();\n\n    this._updateNavigatorDimensions();\n    this._sliderUpdateNeeded = true;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return this._chartHeight;\n  }\n\n  /**\n   * @return {number}\n   */\n  get navigatorWidth () {\n    return this.chartWidth - this._paddingLeftRight * 2;\n  }\n\n  /**\n   * @return {number}\n   */\n  get navigatorHeight () {\n    return this._chartHeight + this._paddingTopBottom * 2;\n  }\n\n  /**\n   * @private\n   */\n  _updateNavigatorDimensions () {\n    const overlayLeftScale = this._navigatorRange[ 0 ];\n    const overlayRightScale = ( 1 - this._navigatorRange[ 1 ] );\n    const navigatorWidth = this.navigatorWidth;\n\n    this._overlayLeftWidth = navigatorWidth * overlayLeftScale;\n    this._overlayRightWidth = navigatorWidth * overlayRightScale;\n    this._sliderWidth = navigatorWidth - this._overlayLeftWidth - this._overlayRightWidth;\n  }\n\n  /**\n   * @private\n   */\n  _createNavigatorGroup () {\n    const offsetY = this._offsetY - this._paddingTopBottom;\n\n    this._navigatorGroup = this.renderer.createGroup({\n      class: 'telechart-navigator',\n      transform: `translate(${this._paddingLeftRight}, ${offsetY}) scale(1 1)`,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _createOverlays () {\n    this._overlayLeft = this.renderer.createRect(this._overlayLeftWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-overlay',\n      x: 0,\n      y: 0,\n      style: cssText({\n        fill: this._overlayColor\n      })\n    }, this._navigatorGroup);\n\n    this._overlayRight = this.renderer.createRect(this._overlayRightWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-overlay',\n      x: this.navigatorWidth - this._overlayRightWidth,\n      y: 0,\n      style: cssText({\n        fill: this._overlayColor\n      })\n    }, this._navigatorGroup);\n\n    // creating slider\n    this._sliderGroup = this.renderer.createGroup({\n      class: 'telechart-navigator-slider-group',\n      transform: `translate(${this._overlayLeftWidth}, 0) scale(1 1)`,\n      fill: 'none'\n    }, [], this._navigatorGroup);\n\n    this._slider = this.renderer.createRect(this._sliderWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-slider',\n      x: 0,\n      y: 0,\n      fill: 'rgba(163, 196, 220, 0.47)'\n    }, this._sliderGroup);\n\n    this._sliderControllerLeft = this.renderer.createRect(this._sliderControllerWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-slider-controller left',\n      x: -this._sliderControllerOffset,\n      y: 0,\n      fill: 'rgba(255,255,255,.0001)'\n    }, this._sliderGroup);\n\n    this._sliderControllerRight = this.renderer.createRect(this._sliderControllerWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-slider-controller right',\n      x: this._sliderWidth - this._sliderControllerWidth + this._sliderControllerOffset,\n      y: 0,\n      fill: 'rgba(255,255,255,.0001)'\n    }, this._sliderGroup);\n\n    // creating mask\n    const maskId = `telechart-navigator-slider-mask-${this.id}`;\n    this._sliderMask = this.renderer.createMask({\n      id: maskId\n    }, [], this.defs);\n\n    this._sliderMaskOuter = this.renderer.createRect(this._sliderWidth, this.navigatorHeight, {\n      x: 0,\n      y: 0,\n      fill: 'white'\n    }, this._sliderMask);\n\n    this._sliderMaskInner = this.renderer.createRect(this._sliderWidth - 2 * this._sliderLeftRightBorderWidth, this.navigatorHeight - 2, {\n      x: this._sliderLeftRightBorderWidth,\n      y: 1,\n      fill: 'black'\n    }, this._sliderMask);\n\n    // connect mask to slider\n    setAttributeNS( this._sliderGroup, 'mask', `url(#${maskId})`, null );\n  }\n\n  /**\n   * @private\n   */\n  _updateNavigatorElements () {\n    // left overlay\n    setAttributeNS( this._overlayLeft, 'width', this._overlayLeftWidth, null );\n\n    // right overlay\n    setAttributeNS( this._overlayRight, 'width', this._overlayRightWidth, null );\n    setAttributeNS( this._overlayRight, 'x', this.navigatorWidth - this._overlayRightWidth, null );\n\n    // slider\n    setAttributeNS( this._sliderGroup, 'transform', `translate(${this._overlayLeftWidth}, 0) scale(1 1)`, null );\n    setAttributeNS( this._slider, 'width', this._sliderWidth, null );\n    setAttributeNS( this._sliderControllerRight, 'x', this._sliderWidth - this._sliderControllerWidth + this._sliderControllerOffset, null );\n\n    // mask\n    setAttributeNS( this._sliderMaskOuter, 'width', this._sliderWidth, null );\n    setAttributesNS(this._sliderMaskInner, {\n      width: Math.max( 0, this._sliderWidth - 2 * this._sliderLeftRightBorderWidth ),\n      height: this.navigatorHeight - 2,\n      x: this._sliderLeftRightBorderWidth\n    });\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @param {boolean} preserveDistance\n   * @return {Array<number>}\n   * @private\n   */\n  _clampNavigationRange (min = 0, max = 1, preserveDistance = false) {\n    const preservedDistance = clampNumber( max - min, this._navigatorMinRangeDistance, 1 );\n\n    min = clampNumber( min, 0, 1 );\n    max = clampNumber( max, 0, 1 );\n\n    const isRightController = this._navigatorChangeDirection === 'right';\n\n    const distance = max - min;\n    const minDistance = preserveDistance\n      ? preservedDistance\n      : this._navigatorMinRangeDistance;\n\n    if (distance < minDistance) {\n      if (isRightController) {\n        if (max - minDistance >= 0) {\n          min = max - minDistance;\n        } else {\n          min = 0;\n          max = minDistance;\n        }\n      } else {\n        if (min + minDistance <= 1) {\n          max = min + minDistance;\n        } else {\n          max = 1;\n          min = 1 - minDistance;\n        }\n      }\n    }\n\n    return [ min, max ];\n  }\n\n  /**\n   * @private\n   */\n  _createSliderEventsListeners () {\n    // slider\n    const touchStartListener = this._onSliderTouchStart.bind( this );\n    const touchMoveListener = this._onSliderTouchMove.bind( this );\n    const touchEndListener = this._onSliderTouchEnd.bind( this );\n    const mouseDownListener = this._onSliderMouseDown.bind( this );\n\n    this._slider.addEventListener( 'touchstart', touchStartListener, { passive: false } );\n    this._slider.addEventListener( 'touchmove', touchMoveListener, { passive: false } );\n    this._slider.addEventListener( 'touchend', touchEndListener );\n\n    this._slider.addEventListener( 'mousedown', mouseDownListener );\n\n    // slider controllers\n    // left\n    const controllerLeftTouchStartListener = this._onSliderControllerTouchStart.bind( this, 'left' );\n    const controllerLeftTouchMoveListener = this._onSliderControllerTouchMove.bind( this );\n    const controllerLeftTouchEndListener = this._onSliderControllerTouchEnd.bind( this );\n    const controllerLeftMouseDownListener = this._onSliderControllerMouseDown.bind( this, 'left' );\n\n    //right\n    const controllerRightTouchStartListener = this._onSliderControllerTouchStart.bind( this, 'right' );\n    const controllerRightTouchMoveListener = this._onSliderControllerTouchMove.bind( this );\n    const controllerRightTouchEndListener = this._onSliderControllerTouchEnd.bind( this );\n    const controllerRightMouseDownListener = this._onSliderControllerMouseDown.bind( this, 'right' );\n\n    // left\n    this._sliderControllerLeft.addEventListener( 'touchstart', controllerLeftTouchStartListener, { passive: false } );\n    this._sliderControllerLeft.addEventListener( 'touchmove', controllerLeftTouchMoveListener, { passive: false } );\n    this._sliderControllerLeft.addEventListener( 'touchend', controllerLeftTouchEndListener );\n    this._sliderControllerLeft.addEventListener( 'mousedown', controllerLeftMouseDownListener );\n\n    // right\n    this._sliderControllerRight.addEventListener( 'touchstart', controllerRightTouchStartListener, { passive: false } );\n    this._sliderControllerRight.addEventListener( 'touchmove', controllerRightTouchMoveListener, { passive: false } );\n    this._sliderControllerRight.addEventListener( 'touchend', controllerRightTouchEndListener );\n    this._sliderControllerRight.addEventListener( 'mousedown', controllerRightMouseDownListener );\n\n    // overlays\n    const overlayLeftClickListener = this._onSliderOverlayClick.bind( this, 'left' );\n    const overlayRightClickListener = this._onSliderOverlayClick.bind( this, 'right' );\n\n    this._overlayLeft.addEventListener( 'click', overlayLeftClickListener );\n    this._overlayRight.addEventListener( 'click', overlayRightClickListener );\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderTouchStart (ev) {\n    const {\n      pageX, pageY\n    } = ev.targetTouches[ 0 ];\n\n    this._sliderStartEvent = {\n      pageX, pageY\n    };\n\n    this._sliderStartPosition = this._navigatorRange.slice();\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderTouchMove (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    const {\n      pageX: startPageX\n    } = this._sliderStartEvent;\n\n    const {\n      pageX = 0\n    } = targetTouch;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n\n    const startPosition = this._sliderStartPosition;\n\n    let [ min, max ] = this._clampNavigationRange(\n      startPosition[ 0 ] - positionDelta,\n      startPosition[ 1 ] - positionDelta,\n      true\n    );\n\n    this.setNavigationRange( min, max );\n\n    if (this._isSliderScrollingAction === null) {\n      const {\n        pageX: startPageX,\n        pageY: startPageY\n      } = this._sliderStartEvent;\n\n      const deltaY = Math.abs( startPageY - targetTouch.pageY );\n      const deltaX = Math.abs( startPageX - targetTouch.pageX );\n\n      this._isSliderScrollingAction = deltaY >= deltaX;\n    }\n\n    if (!this._isSliderScrollingAction) {\n      ev.preventDefault();\n    }\n  }\n\n  /**\n   * @param ev\n   * @private\n   */\n  _onSliderTouchEnd (ev) {\n    if (ev.cancelable) {\n      ev.preventDefault();\n    }\n\n    this._isSliderScrollingAction = null;\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderMouseDown (ev) {\n    const {\n      pageX, pageY\n    } = ev;\n\n    this._sliderStartEvent = {\n      pageX, pageY\n    };\n\n    this._sliderStartPosition = this._navigatorRange.slice();\n\n    const sliderMouseMoveListener = this._onSliderMouseMove.bind( this );\n\n    const lastBodyStyle = document.body.getAttribute( 'style' );\n    setAttributeNS( document.body, 'style', cssText({ cursor: 'grabbing' }), null );\n    setAttributeNS( this._slider, 'style', cssText({ cursor: 'grabbing' }), null );\n\n    document.addEventListener('mousemove', sliderMouseMoveListener);\n    document.addEventListener('mouseup', ev => {\n      if (lastBodyStyle) {\n        setAttributeNS( document.body, 'style', lastBodyStyle, null );\n      } else {\n        document.body.removeAttribute( 'style' );\n      }\n      setAttributeNS( this._slider, 'style', cssText({ cursor: 'grab' }), null );\n\n      document.removeEventListener( 'mousemove', sliderMouseMoveListener )\n    });\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderMouseMove (ev) {\n    ev.preventDefault();\n\n    const {\n      pageX: startPageX\n    } = this._sliderStartEvent;\n\n    const {\n      pageX = 0\n    } = ev;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n\n    const startPosition = this._sliderStartPosition;\n\n    let [ min, max ] = this._clampNavigationRange(\n      startPosition[ 0 ] - positionDelta,\n      startPosition[ 1 ] - positionDelta,\n      true\n    );\n\n    this.setNavigationRange( min, max );\n  }\n\n  /**\n   * @param {string} direction\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderControllerTouchStart (direction, ev) {\n    const {\n      pageX, pageY\n    } = ev.targetTouches[ 0 ];\n\n    this._sliderControllerStartPosition = this._navigatorRange.slice();\n    this._navigatorChangeDirection = direction;\n    this._sliderControllerStartEvent = {\n      pageX, pageY\n    };\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderControllerTouchMove (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    const {\n      pageX: startPageX\n    } = this._sliderControllerStartEvent;\n\n    const {\n      pageX = 0\n    } = targetTouch;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n    const startPosition = this._sliderControllerStartPosition;\n    const isLeft = this._navigatorChangeDirection === 'left';\n\n    let [ min, max ] = [\n      startPosition[ 0 ] - ( isLeft ? positionDelta : 0 ),\n      startPosition[ 1 ] - ( !isLeft ? positionDelta : 0 )\n    ];\n\n    [ min, max ] = this._clampNavigationRange( min, max );\n\n    if (isLeft) {\n      this._sliderControllerStartPosition[ 1 ] = max;\n    } else {\n      this._sliderControllerStartPosition[ 0 ] = min;\n    }\n\n    this.setNavigationRange( min, max );\n\n    if (this._isSliderControllerScrollingAction === null) {\n      const {\n        pageX: startPageX,\n        pageY: startPageY\n      } = this._sliderControllerStartEvent;\n\n      const deltaY = Math.abs( startPageY - targetTouch.pageY );\n      const deltaX = Math.abs( startPageX - targetTouch.pageX );\n\n      this._isSliderControllerScrollingAction = deltaY >= deltaX;\n    }\n\n    if (!this._isSliderControllerScrollingAction) {\n      ev.preventDefault();\n    }\n  }\n\n  /**\n   * @param ev\n   * @private\n   */\n  _onSliderControllerTouchEnd (ev) {\n    if (ev.cancelable) {\n      ev.preventDefault();\n    }\n\n    this._isSliderControllerScrollingAction = null;\n  }\n\n  /**\n   * @param {string} direction\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderControllerMouseDown (direction, ev) {\n    const {\n      pageX, pageY\n    } = ev;\n\n    this._sliderControllerStartPosition = this._navigatorRange.slice();\n    this._navigatorChangeDirection = direction;\n    this._sliderControllerStartEvent = {\n      pageX, pageY\n    };\n\n    const mouseMoveListener = this._onSliderControllerMouseMove.bind( this );\n\n    const lastBodyStyle = document.body.getAttribute( 'style' );\n    setAttributeNS( document.body, 'style', cssText({ cursor: 'e-resize' }), null );\n\n    document.addEventListener('mousemove', mouseMoveListener);\n    document.addEventListener('mouseup', ev => {\n      if (lastBodyStyle) {\n        setAttributeNS( document.body, 'style', lastBodyStyle, null );\n      } else {\n        document.body.removeAttribute( 'style' );\n      }\n\n      document.removeEventListener( 'mousemove', mouseMoveListener )\n    });\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderControllerMouseMove (ev) {\n    ev.preventDefault();\n\n    const {\n      pageX: startPageX\n    } = this._sliderControllerStartEvent;\n\n    const {\n      pageX = 0\n    } = ev;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n    const startPosition = this._sliderControllerStartPosition;\n    const isLeft = this._navigatorChangeDirection === 'left';\n\n    let [ min, max ] = [\n      startPosition[ 0 ] - ( isLeft ? positionDelta : 0 ),\n      startPosition[ 1 ] - ( !isLeft ? positionDelta : 0 )\n    ];\n\n    [ min, max ] = this._clampNavigationRange( min, max );\n\n    if (isLeft) {\n      this._sliderControllerStartPosition[ 1 ] = max;\n    } else {\n      this._sliderControllerStartPosition[ 0 ] = min;\n    }\n\n    this.setNavigationRange( min, max );\n  }\n\n  /**\n   * @param {string} direction\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderOverlayClick (direction, ev) {\n    const position = this._resolveNavigatorPosition( ev );\n    const halfDistance = ( this._navigatorRange[ 1 ] - this._navigatorRange[ 0 ] ) * .5;\n\n    const [ min, max ] = this._clampNavigationRange(\n      position - halfDistance,\n      position + halfDistance,\n      true\n    );\n\n    this.animateNavigationRangeTo( min, max );\n  }\n\n  /**\n   * @param {number} pageX\n   * @param {number} pageY\n   * @private\n   */\n  _resolveNavigatorPosition ({ pageX, pageY }) {\n    const { left } = getElementOffset( this._navigatorGroup );\n    return ( pageX - left ) / this.navigatorWidth;\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { SvgRenderer } from '../SvgRenderer';\nimport {\n  addClass, createElement,\n  cssText, hasClass,\n  removeClass, attachRipple\n} from '../../utils';\n\nlet LABEL_BUTTONS_ID = 1;\n\nexport class LabelButtons extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = LABEL_BUTTONS_ID++;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _container = null;\n\n  /**\n   * @param {SvgRenderer} renderer\n   */\n  constructor (renderer) {\n    super();\n\n    this._renderer = renderer;\n  }\n\n  /**\n   * @param {Chart | BaseChart} chart\n   */\n  setChart (chart) {\n    this._chart = chart;\n  }\n\n  initialize () {\n    this._createContainer();\n    this._createButtons();\n  }\n\n  /**\n   * @param {*} deltaTime\n   */\n  update (deltaTime) {\n  }\n\n  /**\n   * @private\n   */\n  _createContainer () {\n    const parent = this._renderer.parentContainer;\n    const container = createElement('div', {\n      attrs: {\n        class: 'telechart-label-buttons',\n        style: cssText({\n          opacity: 0\n        })\n      }\n    });\n\n    parent.appendChild( container );\n\n    this._container = container;\n  }\n\n  /**\n   * @private\n   */\n  _createButtons () {\n    this._chart.eachSeries(line => {\n      this._container.appendChild(\n        this._createButton( line )\n      )\n    });\n  }\n\n  /**\n   * @param line\n   * @return {Element}\n   * @private\n   */\n  _createButton (line) {\n    const buttonIcon = this._createSvgIcon( line );\n\n    const buttonText = createElement('div', {\n      attrs: {\n        class: 'telechart-label-button__text'\n      }\n    }, line.name);\n\n    const button = createElement('button', {\n      attrs: {\n        class: 'telechart-label-button'\n      }\n    }, [ buttonIcon, buttonText ]);\n\n    attachRipple( button );\n\n    button.addEventListener('click', _ => {\n      line.toggleVisible();\n\n      const selectedClass = 'telechart-label-button_selected';\n      const animatingClass = 'telechart-label-button_animating';\n\n      const hasSelectedClass = hasClass( button, selectedClass );\n\n      if (hasSelectedClass) {\n        addClass( button, animatingClass );\n      } else {\n        removeClass( button, animatingClass );\n      }\n\n      setTimeout(_ => {\n        if (hasSelectedClass) {\n          removeClass( button, selectedClass );\n        } else {\n          addClass( button, selectedClass );\n        }\n        setTimeout(_ => {\n          removeClass( button, animatingClass );\n        }, 100);\n      }, 10);\n    });\n\n    return button;\n  }\n\n  /**\n   * @param line\n   * @return {Element}\n   * @private\n   */\n  _createSvgIcon (line) {\n    const iconSize = 22;\n\n    const pathText = 'M0.9,4.2 3.6,7 9.6,0.9';\n\n    const svgContainer = createElement('svg', {\n      useNS: false,\n      attrs: {\n        xmlns: SvgRenderer.NS,\n        version: '1.1',\n        width: iconSize,\n        height: iconSize,\n        viewBox: [ 0, 0, iconSize, iconSize ].join( ' ' ),\n        class: 'telechart-label-button__icon',\n        style: cssText({\n          color: line.color,\n          fill: line.color,\n          stroke: line.color\n        })\n      }\n    }, [], SvgRenderer.NS);\n\n    const group = this._renderer.createGroup({}, [], svgContainer);\n\n    this._renderer.createCircle(iconSize / 2, iconSize / 2, iconSize / 2, {\n      fill: line.color,\n    }, group);\n\n    this._renderer.createPath(pathText, {\n      stroke: '#fff',\n      fill: 'none',\n      strokeWidth: 1.8,\n      strokeLinecap: 'round',\n      strokeLinejoin: 'round',\n      strokeMiterlimit: 10,\n      transform: `translate(6, 7)`\n    }, group);\n\n    this._renderer.createCircle(iconSize / 2, iconSize / 2, 0, {\n      fill: 'white',\n      class: 'telechart-label-button__icon-mask'\n    }, group);\n\n    return svgContainer;\n  }\n}\n","import './style/telechart.scss';\n\nimport { AnimationSource, AnimationSourceEvents } from './core/animation/AnimationSource';\nimport { SvgRenderer } from \"./core/SvgRenderer\";\nimport { Chart } from './core/chart/Chart';\nimport { Clock } from './core/misc/Clock';\nimport { NavigatorChart } from './core/chart/NavigatorChart';\nimport { ChartEvents } from './core/chart/events/ChartEvents';\nimport { NavigatorChartEvents } from './core/chart/events/NavigatorChartEvents';\nimport { LabelButtons } from './core/chart/LabelButtons';\n\nimport {\n  addClass,\n  interpolateThemeClass,\n  removeClass,\n  resolveElement,\n  ChartThemes,\n  setAttributesNS,\n  cssText, createElement, ROOT_CLASS_NAME, getWindowHeight, getDocumentScrollTop, getElementOffset, getElementHeight\n} from \"./utils\";\n\nlet TELECHART_ID = 1;\n\nexport class Telechart {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = TELECHART_ID++;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _rootElement = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {NavigatorChart}\n   * @private\n   */\n  _navigatorChart = null;\n\n  /**\n   * @type {LabelButtons}\n   * @private\n   */\n  _labelButtons = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _themeName = ChartThemes.default;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _title = '';\n\n  /**\n   * @type {SVGTextElement}\n   * @private\n   */\n  _titleElement = null;\n\n  /**\n   * @type {Clock}\n   * @private\n   */\n  _clock = null;\n\n  /**\n   * @type {AnimationSource}\n   * @private\n   */\n  _animationSource = null;\n\n  /**\n   * @static\n   * @param {Element | string} mountTo Element or selector\n   * @param {Object} options\n   */\n  static create (mountTo, options = {}) {\n    const chart = new Telechart();\n\n    chart.setOptions( options );\n    chart.mount( resolveElement( mountTo ) );\n    chart.initialize();\n\n    chart.firstRender();\n\n    return chart;\n  }\n\n  /**\n   * @param {Object} options\n   */\n  setOptions (options = {}) {\n    this._options = options;\n  }\n\n  /**\n   * @param {Element} parent\n   */\n  mount (parent) {\n    const root = createElement('div', {\n      attrs: {\n        class: ROOT_CLASS_NAME\n      }\n    });\n\n    parent.appendChild( root );\n\n    this._rootElement = root;\n    this._renderer = new SvgRenderer( root );\n  }\n\n  /**\n   * Initialize the chart\n   */\n  initialize () {\n    this.setTheme( this._options.theme || ChartThemes.default );\n    this.setTitle( this._options.title );\n\n    // create components\n    this._createChart();\n    this._createNavigatorChart();\n    this._createLabelButtons();\n    this._addEventsListeners();\n\n    // create animation loop\n    this._clock = new Clock();\n    this._animationSource = new AnimationSource( 60, 1 ); // fps, timeScale\n    this._animationSource.on(AnimationSourceEvents.UPDATE, deltaTime => {\n      this.update( deltaTime );\n    });\n\n    requestAnimationFrame(_ => {\n      this.animate();\n    });\n  }\n\n  /**\n   * Draws first frame\n   */\n  firstRender () {\n    this._chart.firstRender();\n    this._navigatorChart.firstRender();\n  }\n\n  /**\n   * Animation loop\n   */\n  animate () {\n    const deltaTime = this._clock.getDelta();\n    this._animationSource.update( deltaTime );\n\n    requestAnimationFrame(_ => this.animate());\n  }\n\n  /**\n   * Update loop\n   */\n  update (deltaTime) {\n    this._chart.update( deltaTime );\n    this._navigatorChart.update( deltaTime );\n  }\n\n  /**\n   * @param {string} themeName\n   */\n  setTheme (themeName) {\n    const rootElement = this._rootElement;\n\n    removeClass(\n      rootElement,\n      Object.keys( ChartThemes )\n        .map( interpolateThemeClass )\n    );\n\n    addClass(\n      rootElement,\n      interpolateThemeClass( themeName )\n    );\n\n    this._themeName = themeName;\n  }\n\n  /**\n   * @param {string} title\n   */\n  setTitle (title) {\n    this._title = title;\n\n    !this._titleElement\n      ? this._createTitle( title )\n      : this._updateTitle( title );\n  }\n\n  /**\n   * Destroys the chart instance\n   */\n  destroy () {\n    this._renderer && this._renderer.destroy();\n    this._rootElement = null;\n    this._renderer = null;\n  }\n\n  /*/!**\n   * @return {boolean}\n   *!/\n  get inWindowViewport () {\n    const windowHeight = getWindowHeight();\n    const windowTopLine = getDocumentScrollTop();\n    const windowBottomLine = windowHeight + windowTopLine;\n\n    const { top: chartTopLine } = getElementOffset( this._renderer.parentContainer );\n    const chartHeight = getElementHeight( this._renderer.parentContainer );\n    const chartBottomLine = chartTopLine + chartHeight;\n\n    return windowTopLine < chartTopLine\n      && windowBottomLine > chartTopLine\n      || windowTopLine < chartBottomLine\n      && windowBottomLine > chartBottomLine;\n  }*/\n\n  /**\n   * @return {string}\n   */\n  get themeName () {\n    return this._themeName;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _createTitle (title = this._options.title) {\n    if (!title) {\n      return;\n    }\n\n    const text = this._renderer.createText(title, {\n      class: 'telechart-title',\n      x: 16,\n      y: 36,\n      textAnchor: 'start',\n      style: cssText({\n        opacity: 0\n      })\n    });\n\n    setTimeout(_ => {\n      setAttributesNS(text, {\n        style: cssText({\n          opacity: 1\n        })\n      });\n    }, 200);\n\n    this._titleElement = text;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _updateTitle (title) {\n    if (!this._titleElement) {\n      return;\n    }\n    const tspan = this._titleElement.querySelector( 'tspan' );\n    tspan.textContent = title;\n  }\n\n  /**\n   * @private\n   */\n  _createChart () {\n    this._chart = new Chart(\n      this._renderer,\n      this._options\n    );\n\n    this._chart.initialize();\n  }\n\n  /**\n   * @private\n   */\n  _createNavigatorChart () {\n    this._navigatorChart = new NavigatorChart(\n      this._renderer,\n      this._options\n    );\n\n    this._navigatorChart.initialize();\n  }\n\n  /**\n   * @private\n   */\n  _createLabelButtons () {\n    const labelButtons = new LabelButtons( this._renderer );\n    labelButtons.setChart( this._chart );\n    labelButtons.initialize();\n\n    this._labelButtons = labelButtons;\n  }\n\n  /**\n   * @private\n   */\n  _addEventsListeners () {\n    this._chart.on(ChartEvents.SERIES_VISIBLE_CHANGE, line => {\n      this._navigatorChart.toggleSeries( line.label );\n    });\n\n    this._navigatorChart.on(NavigatorChartEvents.RANGE_CHANGED, range => {\n      this._chart.setNavigationRange( ...range );\n    });\n\n    this._navigatorChart.on(NavigatorChartEvents.ANIMATE_RANGE, range => {\n      this._chart.animateNavigationRangeTo( ...range );\n    });\n  }\n}\n","export * from './Telechart';\n"],"sourceRoot":""}