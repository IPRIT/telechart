{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/core/misc/EventEmitter.js","webpack:///./src/utils/constants.js","webpack:///./src/utils/animation.js","webpack:///./src/utils/base.js","webpack:///./src/utils/browser.js","webpack:///./src/utils/text.js","webpack:///./src/utils/dom.js","webpack:///./src/utils/events.js","webpack:///./src/utils/svg.js","webpack:///./src/utils/themes.js","webpack:///./src/utils/algorithms.js","webpack:///./src/core/animation/AnimationSource.js","webpack:///./src/core/SvgRenderer.js","webpack:///./src/core/series/SeriesTypes.js","webpack:///./src/core/point/Point.js","webpack:///./src/core/animation/Tween.js","webpack:///./src/core/chart/ChartTypes.js","webpack:///./src/core/series/Series.js","webpack:///./src/core/chart/events/ChartEvents.js","webpack:///./src/core/chart/BaseChart.js","webpack:///./src/core/chart/Chart.js","webpack:///./src/core/misc/Clock.js","webpack:///./src/core/chart/events/NavigatorChartEvents.js","webpack:///./src/core/chart/NavigatorChart.js","webpack:///./src/Telechart.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EventEmitter","this","_eventListeners","_proto","emit","eventName","_len","arguments","length","args","Array","_key","_fireEvent","apply","concat","on","cb","context","addEventListener","once","addEventListenerOnce","_subscribeEvent","_this","listener","_len2","_key2","removeEventListener","listenerIndex","findIndex","_ref","splice","removeAllListeners","_allocateEvent","push","eventListeners","_len3","_key3","_eventListeners$i","TimeRanges","second","minute","hour","day","week","month","year","FRAMES_PER_SECOND","FRAMES_DELTA_SEC","FRAMES_DELTA_MS","warp","deltaTime","framesDeltaSec","warpRatio","animationTimeout","timeoutMs","Promise","resolve","fulfillmentCallback","requestAnimationFrame","setTimeout","_","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","objectEachKey","fn","keys","forEach","objectMapKey","map","clampNumber","min","max","Infinity","Math","ensureNumber","Number","isNaN","isObject","isDate","Date","valueOf","isBrowserSafari","test","navigator","userAgent","isTouchEventsSupported","document","documentElement","passiveSupported","options","passive","window","err","isPassiveEventSupported","passiveIfSupported","passiveIfSupportedFn","capitalize","text","String","toUpperCase","substr","cssText","styleObject","reduce","css","prop","camelToKebabCase","toLowerCase","replace","parseQueryString","href","queryString","split","slice","part","keyValue","result","obj","assign","createElement","tagName","children","element","createElementNS","attrs","useNS","setAttributesNS","attrsNS","setAttributes","isArray","node","innerHTML","textContent","appendChild","resolveElement","elementOrSelector","querySelector","getElementOffset","top","left","rect","getBoundingClientRect","win","ownerDocument","defaultView","pageYOffset","pageXOffset","e","getElementRelativeOffset","targetElement","relativeElement","targetOffset","relativeOffset","scrollTop","scrollLeft","getDocumentHeight","body","scrollHeight","offsetHeight","clientHeight","getWindowHeight","innerHeight","getElementHeight","getElementWidth","innerWidth","clientWidth","getElementScrollHeight","getElementScrollWidth","scrollWidth","offsetWidth","camelCaseAttrWhiteList","attr","includes","setAttribute","setAttributeNS","hasClass","className","classList","contains","RegExp","addClass","classNames","_element$classList","add","trim","removeClass","_element$classList2","remove","existingClasses","classesToDelete","Set","has","console","warn","ev","parseSimplePathText","pathText","parseRegex","segments","exec","index","lastIndex","type","x","y","segmentsToPathText","j","join","ROOT_CLASS_NAME","interpolateThemeClass","themeName","ChartThemes","default","dark","ChartThemesColors","arraysEqual","arrayA","arrayB","arrayMinIndex","array","startIndex","endIndex","minIndex","arrayMin","arrayMaxIndex","maxIndex","arrayMax","arrayMinMaxIndexes","arrayMinMax","_arrayMinMaxIndexes","arraySum","sum","arrayAvg","binarySearchIndexes","order","right","mid","binarySearchObjectIndexes","AnimationSourceEvents","AnimationSource","_EventEmitter","updatesPerSecond","timeScale","_timeElapsed","_timeScale","_updateInvokes","_updatesPerSecond","_updateEach","_lastUpdateAt","_paused","update","_callUpdate","dispose","set","telechartTitle","TELECHART_NAME","INTERNAL_AUTOINCREMENT","SvgRenderer","contextElement","_id","_parentContainer","_svgContainer","_minHeight","_minWidth","_width","_height","_isInitialized","_init","createGroup","parent","group","NS","createClipPath","clipPath","createMask","mask","createLinearGradient","stops","stopElements","stopAttrs","gradient","createDesc","createText","tspan","textElement","createDefs","createPath","pathElement","updatePath","createRect","width","height","rectElement","createCircle","cx","cy","radius","circleElement","selector","querySelectorAll","from","destroy","_detachEvents","_clearParentContainer","_updateDimensions","_createSvgContainer","_insertSvgContainer","_attachEvents","Error","xmlns","version","viewBox","class","_onResize","_attachResizeListener","_detachResizeListener","_resizeListener","SeriesTypes","POINT_AUTOINCREMENT","Point","_type","_x","_y","_svgX","_svgY","setType","pointType","setX","setY","setXY","addX","addY","addXY","setSvgX","svgX","setSvgY","svgY","setSvgXY","TWEEN_ID","TweenState","NOT_STARTED","RUNNING","PAUSED","COMPLETED","CANCELLED","TweenEvents","DEFAULT_PARAMS","duration","timingFunction","Tween","target","properties","targetValues","params","_params","_state","_duration","_timingFunctionName","_timingFunction","_target","_properties","_targetValues","_startValues","_initParams","_construct","isRunning","_updateAnimation","_checkDuration","start","isNotStarted","_getPropertyValues","pause","finish","_dispose","cancel","patchAnimation","setTimeScale","_this$_params","_getTimingFunction","progress","timingProgress","delta","values","_getPropertyValue","functionName","defaultFunctionName","timingFunctions","ChartTypes","chart","navigatorChart","SERIES_AUTOINCREMENT","OpacityAnimationType","Series","renderer","settings","_parent","_renderer","_chart","_isSimpleChart","_settings","_seriesOptions","_xAxis","_yAxis","_name","_label","_color","_strokeWidth","_visible","_group","_pathText","_pathElement","_pathUpdateNeeded","_marker","_markerVisible","_markerAnimation","_markerRadius","_maxMarkerRadius","_markerPointIndex","_markerPositionUpdateNeeded","_points","_localMaxY","_localMinY","_opacity","_opacityAnimation","_opacityAnimationType","_parseSettings","initialize","_createPoints","_addEvents","updateViewportPoints","updatePathOpacity","_updateMarkerPosition","markerAnimation","updateMarkerRadius","firstRender","_createGroup","_createPath","_createMarker","setChart","chartType","setVisible","_createShowAnimation","setInvisible","_createHideAnimation","toggleVisible","showMarker","_createMarkerShowAnimation","hideMarker","_createMarkerHideAnimation","toggleMarker","updateLocalExtremes","_this$_chart$_viewpor","_viewportRangeIndexes","rangeStartIndex","rangeEndIndex","_arrayMinMax","minValue","maxValue","_useViewportPointsInterval","updateViewportPointsByInterval","updateViewportPointsByArray","indexes","_viewportPointsIndexes","pointIndex","point","projectXToSvg","projectYToSvg","_this$_chart$_viewpor2","_updatePathText","requestPathUpdate","setMarkerPointIndex","_this$_settings","xAxis","yAxis","label","color","_this$_settings$optio","_options$strokeWidth","strokeWidth","id","fill","stroke","strokeLinejoin","strokeLinecap","_computePathTextByInterval","_computePathTextByArray","_this2","_onRendererResize","interval","_createOpacityAnimation","opacity","_this3","onFinished","_createMarkerAnimation","_this4","ChartEvents","CHART_ID","BaseChart","_options","_chartHeight","_groupingPixels","_series","_seriesGroup","_defs","_chartMask","_chartMaskId","_chartMaskPadding","_viewportRange","_viewportDistance","_viewportPixelX","_viewportPixelY","_viewportPadding","_viewportLeftPaddingScale","_viewportRightPaddingScale","_viewportRangeUpdateNeeded","_viewportPointsGroupingNeeded","_currentLocalMinY","_currentLocalMaxY","_minMaxYAnimation","_minMaxYAnimationSign","_rangeAnimation","_rangeAnimationObject","resolveDefs","createChartMask","createSeriesGroup","createSeries","addEvents","setInitialRange","approximateViewportPoints","extremesUpdated","hasRangeAnimation","updateViewportRange","to","skipExtremes","updateViewportPixel","eachSeries","line","hasOpacityAnimation","isHiding","isNavigatorPath","data","series","_ref$seriesOptions","seriesOptions","groupingOptions","grouping","pixels","columns","types","colors","names","xAxisIndex","column","yAxes","shift","extendSeriesOptions","defs","svgContainer","padding","gradientId","sharpGradient","gradientTransform","offset","stopColor","stopOpacity","chartWidth","chartHeight","setViewportRange","animateViewportRangeTo","minX","maxX","_options$duration","_options$timingFuncti","_options$preservePadd","preservePadding","_this$_clampViewportR","_clampViewportRange","newMinX","newMaxX","_temp","_ref2","_ref2$skipExtremes","_ref2$preservePadding","_setViewportRange","oldRangeIndexes","_updateViewportIndexes","localExtremesUpdateRequested","updateExtremes","viewportRange","_options2","_options2$skipExtreme","_options2$preservePad","_this$_viewportRangeI","groupingDistanceLimitX","viewportIndexes","groupStartIndex","middleIndex","localMinY","localMaxY","isVisible","oldLocalMinY","oldLocalMaxY","updateAnimation","_updateOrCreateMinMaxYAnimation","computeViewportPixelX","currentLocalExtremeDifference","computeViewportPadding","localMinX","localMaxX","onRendererResize","onSeriesVisibleChange","_updateMaskDimensions","getSeriesByLabel","findSeries","setSeriesVisible","setSeriesInvisible","toggleSeriesInvisible","predicate","setChartType","toRelativeX","_this$_viewportRange","rangeStart","rangeEnd","_binarySearchIndexes","minUpperIndex","_binarySearchIndexes2","maxLowerIndex","_this$_clampViewportR2","globalMinX","globalMaxX","getTime","_ref3","actualPaddingX","receivedLeftPaddingX","receivedRightPaddingX","localExtremeDifference","_createMinMaxYAnimation","_patchMinMaxYAnimation","_this5","_updateMinMaxAnimationSign","_navigatorDistanceScale","Chart","_BaseChart","_seriesGroupTop","_cursorInsideChart","_axisCursor","_axisCursorPositionX","_axisCursorPointIndex","_axisCursorUpdateNeeded","_initializeAxisCursor","_updateAxisCursor","transform","chartMaskId","style","shapeRendering","setNavigationRange","_this$_resolveNavigat","_resolveNavigationRange","animateNavigationRangeTo","_this$_resolveNavigat2","initialViewport","floor","viewportPadding","projectCursorToX","_ref$pageX","pageX","chartLeft","pageY","viewportPixelX","globalDistance","_createAxisCursor","_addAxisCursorEvents","_computeAxisCursorPath","_axisCursorGroup","insertBefore","mouseMoveListener","_onMouseMove","mouseLeaveListener","_onMouseLeave","touchStartListener","_onTouchStart","touchMoveListener","_onTouchMove","touchEndListener","_onTouchEnd","_onCursorMove","_onCursorLeave","targetTouch","targetTouches","preventDefault","cursorPosition","_setInsideChartState","_insideChart","_findPointIndexByCursor","cursorX","lowerIndex","upperIndex","isLowerCloser","abs","isLowerVisible","isUpperVisible","isInside","_onCursorInsideChartChanged","_showMarkers","_showCursor","_hideMarkers","_hideCursor","_getElementOffset2","chartTop","Clock","_lastUpdateMs","performance","now","getDelta","NavigatorChartEvents","NavigatorChart","_offsetY","_paddingTopBottom","_paddingLeftRight","_navigatorGroup","_sliderGroup","_slider","_sliderControllerLeft","_sliderControllerRight","_sliderControllerWidth","_sliderControllerOffset","_sliderWidth","_sliderLeftRightBorderWidth","_overlayLeft","_overlayRight","_overlayLeftWidth","_overlayRightWidth","_overlayColor","_sliderUpdateNeeded","_navigatorRange","_navigatorRangeAnimation","_navigationRangeAnimationObject","_navigatorMinRangeDistance","_navigatorChangeDirection","_updateNavigatorDimensions","_createNavigatorGroup","_createOverlays","_createSliderEventsListeners","updateNavigationRange","_updateNavigatorElements","_this$_clampNavigatio","_clampNavigationRange","newMin","newMax","_ref$emitChange","emitChange","_this$_clampNavigatio2","overlayLeftScale","overlayRightScale","navigatorWidth","offsetY","navigatorHeight","maskId","_sliderMask","_sliderMaskOuter","_sliderMaskInner","preserveDistance","preservedDistance","isRightController","distance","minDistance","_onSliderTouchStart","_onSliderTouchMove","mouseDownListener","_onSliderMouseDown","controllerLeftTouchStartListener","_onSliderControllerTouchStart","controllerLeftTouchMoveListener","_onSliderControllerTouchMove","controllerLeftMouseDownListener","_onSliderControllerMouseDown","controllerRightTouchStartListener","controllerRightTouchMoveListener","controllerRightMouseDownListener","overlayLeftClickListener","_onSliderOverlayClick","overlayRightClickListener","_ev$targetTouches$","_sliderStartEvent","_sliderStartPosition","startPageX","_targetTouch$pageX","positionDelta","startPosition","_this$_clampNavigatio3","sliderMouseMoveListener","_onSliderMouseMove","lastBodyStyle","getAttribute","cursor","removeAttribute","_ev$pageX","_this$_clampNavigatio4","direction","_ev$targetTouches$2","_sliderControllerStartPosition","_sliderControllerStartEvent","_targetTouch$pageX2","isLeft","_this$_clampNavigatio5","_onSliderControllerMouseMove","_ev$pageX2","_this$_clampNavigatio6","position","_resolveNavigatorPosition","halfDistance","_this$_clampNavigatio7","Telechart","_rootElement","_navigatorChart","_themeName","_title","_titleElement","_clock","_animationSource","mountTo","setOptions","mount","root","setTheme","theme","setTitle","title","_createChart","_createNavigatorChart","_addEventsListeners","animate","rootElement","_updateTitle","_createTitle","textAnchor","range","_this3$_chart","_this3$_chart2","__webpack_exports__","Telechart_Telechart"],"mappings":"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","file":"telechart.36c9a3fbaff599a434b7.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * Simple event emitter for better performance and app size\n *\n * @author Alexander Belov\n */\nexport class EventEmitter {\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _eventListeners = {};\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   */\n  emit (eventName, ...args) {\n    this._fireEvent( eventName, ...args );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  on (eventName, cb, context = null) {\n    this.addEventListener( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  once (eventName, cb, context = null) {\n    this.addEventListenerOnce( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListener (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    this._subscribeEvent( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListenerOnce (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    const listener = (...args) => {\n      cb.apply( context, args );\n      this.removeEventListener( eventName, listener );\n    };\n\n    this.addEventListener( eventName, listener );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} listener\n   */\n  removeEventListener (eventName, listener) {\n    if (!this._eventListeners[ eventName ]) {\n      return;\n    }\n\n    const listenerIndex = this._eventListeners[ eventName ].findIndex(([ cb ]) => {\n      return listener === cb;\n    });\n\n    if (listenerIndex < 0) {\n      return;\n    }\n\n    this._eventListeners[ eventName ].splice( listenerIndex, 1 );\n  }\n\n  /**\n   * @param {string | *} eventName\n   */\n  removeAllListeners (eventName = null) {\n    if (!eventName) {\n      this._eventListeners = {};\n    } else if (this._eventListeners[ eventName ]) {\n      this._eventListeners[ eventName ] = null;\n      delete this._eventListeners[ eventName ];\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @private\n   */\n  _allocateEvent (eventName) {\n    this._eventListeners[ eventName ] = this._eventListeners[ eventName ] || []\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  _subscribeEvent (eventName, cb, context) {\n    this._allocateEvent( eventName );\n    this._eventListeners[ eventName ].push([ cb, context ]);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   * @private\n   */\n  _fireEvent (eventName, ...args) {\n    const eventListeners = this._eventListeners[ eventName ] || [];\n\n    for (let i = 0; i < eventListeners.length; ++i) {\n      const [ cb, context ] = eventListeners[ i ];\n      cb.apply( context, args );\n    }\n  }\n}\n","const hour = 3600 * 1000;\n\n/**\n * @type {{second: number, minute: number, hour: number, day: number, week: number, month: number, year: number}}\n */\nexport const TimeRanges = {\n  second: 1000,\n  minute: hour / 60,\n  hour,\n  day: hour * 24,\n  week: hour * 24 * 7,\n  month: hour * 24 * 30, // rude\n  year: hour * 24 * 365\n};\n","export const FRAMES_PER_SECOND = 60;\nexport const FRAMES_DELTA_SEC = 1 / 60;\nexport const FRAMES_DELTA_MS = 1000 / 60;\n\n/**\n * @param {number} value\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warp (value, deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return value * warpRatio( deltaTime, framesDeltaSec );\n}\n\n/**\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warpRatio (deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return deltaTime / framesDeltaSec;\n}\n\n/**\n * @param {number} timeoutMs\n * @param {*} args\n * @return {Promise<void>}\n */\nexport function animationTimeout (timeoutMs = 0, ...args) {\n  return new Promise(resolve => {\n    const fulfillmentCallback = resolve.bind( null, ...args );\n    const cb = () => requestAnimationFrame( fulfillmentCallback );\n\n    if (!timeoutMs) {\n      cb();\n    } else {\n      setTimeout( _ => cb(), timeoutMs );\n    }\n  });\n}\n\n// linear\nexport const linear = t => t;\n// accelerating from zero velocity\nexport const easeInQuad = t => t * t;\n// decelerating to zero velocity\nexport const easeOutQuad = t => t * (2 - t);\n// acceleration until halfway, then deceleration\nexport const easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n// accelerating from zero velocity\nexport const easeInCubic = t => t * t * t;\n// decelerating to zero velocity\nexport const easeOutCubic = t => --t * t * t + 1;\n// acceleration until halfway, then deceleration\nexport const easeInOutCubic = t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n// accelerating from zero velocity\nexport const easeInQuart = t => t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuart = t => 1 - --t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuart = t => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t);\n// accelerating from zero velocity\nexport const easeInQuint = t => t * t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuint = t => 1 + --t * t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuint = t => t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n","/**\n * @param {*} object\n * @param {Function} fn\n */\nexport function objectEachKey (object, fn = () => {}) {\n  Object.keys( object ).forEach( fn );\n}\n\n/**\n * @param {*} object\n * @param {Function} fn\n * @return {*[]}\n */\nexport function objectMapKey (object, fn = () => {}) {\n  return Object.keys( object ).map( fn );\n}\n\n/**\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nexport function clampNumber (value, min = -Infinity, max = Infinity) {\n  if (min > max) {\n    [ min, max ] = [ max, min ];\n  }\n  return Math.min( Math.max( value, min ), max );\n}\n\n/**\n * @param {*} value\n * @return {number}\n */\nexport function ensureNumber (value) {\n  value = Number(value);\n  if (Number.isNaN(value)) {\n    return 0;\n  }\n  return value;\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nexport function isObject (value) {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * @param {Date|*} value\n * @return {boolean}\n */\nexport function isDate (value) {\n  return value instanceof Date && !isNaN( value.valueOf() );\n}\n","/**\n * @returns {boolean}\n */\nexport function isBrowserSafari () {\n  return /^((?!chrome|android|crios|fxios).)*safari/i.test( navigator.userAgent );\n}\n\n/**\n * @return {boolean}\n */\nexport function isTouchEventsSupported () {\n  return 'ontouchstart' in document.documentElement;\n}\n\nlet passiveSupported = false;\n\ntry {\n  const options = {\n    get passive() { // This function will be called when the browser\n      //   attempts to access the passive property.\n      passiveSupported = true;\n    }\n  };\n\n  window.addEventListener('test', options, options);\n  window.removeEventListener('test', options, options);\n} catch(err) {\n  passiveSupported = false;\n}\n\nexport const isPassiveEventSupported = passiveSupported;\nexport const passiveIfSupported = passiveSupported ? { passive: true } : false;\nexport const passiveIfSupportedFn = (passive = true) => passiveSupported ? { passive } : false;\n","/**\n * @param {string} text\n * @return {string}\n */\nexport function capitalize (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return text[ 0 ].toUpperCase() + text.substr(1);\n}\n\n/**\n * @param {Object} styleObject\n * @returns {string}\n */\nexport function cssText (styleObject = {}) {\n  return Object.keys( styleObject ).reduce((css, prop) => {\n    return `${css ? css + ' ' : ''}${camelToKebabCase( prop )}: ${styleObject[ prop ]};`;\n  }, '');\n}\n\n/**\n * @param {string} text\n * @returns {string}\n */\nexport function camelToKebabCase (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return (\n    text[ 0 ].toLowerCase() + text.substr( 1 )\n  ).replace( /([A-Z])/g, '-$1' ).toLowerCase();\n}\n\n/**\n * @param {string} href\n * @return {*}\n */\nexport function parseQueryString (href) {\n  const queryString = href.split('?').slice(1);\n  if (!queryString.length) {\n    return {};\n  }\n\n  return queryString[ 0 ].split( '&' ).map(part => {\n    const keyValue = part.split( '=' );\n    return {\n      [keyValue[ 0 ]]: keyValue[ 1 ]\n    };\n  }).reduce((result, obj) => {\n    return Object.assign(result, obj);\n  })\n}\n","import { objectEachKey } from \"./base\";\nimport { camelToKebabCase } from './text';\n\n/**\n * @param {string} tagName\n * @param {Object} options\n * @param {Array|*} children\n * @param {string|*} ns\n * @return {Element}\n */\nexport function createElement (tagName, options = {}, children = [], ns = null) {\n  const element = !ns\n    ? document.createElement( tagName )\n    : document.createElementNS( ns, tagName );\n\n  if (options.attrs) {\n    !options.useNS\n      ? setAttributes( element, options.attrs )\n      : setAttributesNS( element, options.attrs, options.attrsNS || null );\n  }\n\n  if (children || Array.isArray( children )) {\n    children = [].concat( children );\n    children.forEach(node => {\n      if (typeof node === 'string') {\n        // optimistic way\n        if (/[<>]/i.test( node )) {\n          element.innerHTML += node;\n        } else {\n          element.textContent += node;\n        }\n      } else {\n        element.appendChild( node );\n      }\n    });\n  }\n\n  return element;\n}\n\n/**\n * @param {Element|string} elementOrSelector\n * @return {Element | null}\n */\nexport function resolveElement (elementOrSelector) {\n  if (typeof elementOrSelector !== 'string') {\n    return elementOrSelector;\n  }\n  return document.querySelector( elementOrSelector );\n}\n\n/**\n * @param {Element} element\n * @return {{top: number, left: number}}\n */\nexport function getElementOffset (element) {\n  if (!element) {\n    return { top: 0, left: 0 };\n  }\n\n  try {\n    // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n    const rect = element.getBoundingClientRect();\n    const win = element.ownerDocument.defaultView;\n    return {\n      top: rect.top + win.pageYOffset,\n      left: rect.left + win.pageXOffset\n    };\n  } catch (e) {\n    return { top: 0, left: 0 };\n  }\n}\n\n/**\n * @param {Element} targetElement\n * @param {Element} relativeElement\n * @return {{ top: number, left: number }}\n */\nexport function getElementRelativeOffset (targetElement, relativeElement) {\n  const targetOffset = getElementOffset(targetElement);\n  const relativeOffset = getElementOffset(relativeElement);\n\n  return {\n    top: targetOffset.top - relativeOffset.top + relativeElement.scrollTop,\n    left: targetOffset.left - relativeOffset.left + relativeElement.scrollLeft\n  };\n}\n\n/**\n * @returns {number}\n */\nexport function getDocumentHeight () {\n  return Math.max(\n    document.body.scrollHeight,\n    document.documentElement.scrollHeight,\n    document.body.offsetHeight,\n    document.documentElement.offsetHeight,\n    document.body.clientHeight,\n    document.documentElement.clientHeight\n  );\n}\n\n/**\n * @returns {number}\n */\nexport function getWindowHeight () {\n  return window.innerHeight ||\n    (document.documentElement || document.body).clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementHeight (element) {\n  return element.innerHeight || element.clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementWidth (element) {\n  return element.innerWidth || element.clientWidth;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollHeight (element) {\n  return Math.max(\n    element.scrollHeight,\n    element.offsetHeight,\n    element.clientHeight\n  );\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollWidth (element) {\n  return Math.max(\n    element.scrollWidth,\n    element.offsetWidth,\n    element.clientWidth\n  );\n}\n\nconst camelCaseAttrWhiteList = [\n  'viewBox',\n  'gradientTransform'\n];\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n */\nexport function setAttributes (element, attrs = {}) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttribute( attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n * @param {string | *} ns\n */\nexport function setAttributesNS (element, attrs = {}, ns = null) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttributeNS( ns, attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {string} attr\n * @param {*} value\n * @param {string | *} ns\n */\nexport function setAttributeNS (element, attr, value, ns) {\n  // it's a magic but it increases speed for 1-2ms on slow devices\n  // prevent from babel optimisation\n  ns = ns || null;\n  element.setAttributeNS( ns, attr, value );\n}\n\n/**\n * @param {Element} element\n * @param {string} className\n */\nexport function hasClass (element, className) {\n  if (element.classList) {\n    return element.classList.contains( className );\n  }\n  return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test( element.className );\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function addClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    return element.classList.add( ...classNames );\n  }\n\n  let className = element.className;\n\n  for (let i = 0; i < classNames.length; ++i) {\n    if (!hasClass( element, classNames[ i ] )) {\n      className += ` ${classNames[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function removeClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    return element.classList.remove( ...classNames );\n  }\n\n  let existingClasses = element.className.split( ' ' );\n  let classesToDelete = new Set( classNames );\n  let className = '';\n\n  for (let i = 0; i < existingClasses.length; ++i) {\n    if (!classesToDelete.has( existingClasses[ i ] )) {\n      className += ` ${existingClasses[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n","/**\n * @param {Element | Window} element\n * @param {string} eventName\n * @param {Function} cb\n */\nexport function addEventListenerOnce (element, eventName, cb) {\n  if (!element) {\n    return console.warn( 'Element is missing' );\n  }\n\n  const listener = ev => {\n    cb( ev );\n    element.removeEventListener( eventName, listener );\n  };\n\n  element.addEventListener( eventName, listener );\n}\n","import { ensureNumber } from \"./index\";\n\n/**\n * Returns path segments\n *\n * @param {string} pathText\n * @return {Array<Array<Array<number>>>}\n */\nexport function parseSimplePathText (pathText) {\n  const parseRegex = /([ML])\\s?(-?\\d+\\.?(?:\\d+)?)\\s(-?\\d+\\.?(?:\\d+)?)/gi;\n\n  const segments = [];\n  let m;\n\n  while ((m = parseRegex.exec( pathText )) !== null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (m.index === parseRegex.lastIndex) {\n      parseRegex.lastIndex++;\n    }\n\n    const type = m[ 1 ];\n    const x = ensureNumber( m[2] );\n    const y = ensureNumber( m[3] );\n\n    if (type === 'm' || !segments.length) {\n      segments.push([ [ x, y ] ]);\n    } else {\n      const lastSegment = segments[ segments.length - 1 ];\n      lastSegment.push([ x, y ]);\n    }\n  }\n\n  return segments;\n}\n\n/**\n * @param {Array<Array<Array<number>>>} segments\n * @return {string}\n */\nexport function segmentsToPathText (segments) {\n  let result = '';\n\n  for (let i = 0; i < segments.length; ++i) {\n    result += 'M ';\n    for (let j = 0; j < segments[ i ].length; ++j) {\n      const coordinates = segments[ i ][ j ];\n      if (j !== 0) {\n        result += 'L ';\n      }\n      result += coordinates.join(' ') + ' ';\n    }\n  }\n\n  return result;\n}\n","export const ROOT_CLASS_NAME = 'telechart-root';\n\n/**\n * @param {string} themeName\n * @returns {string}\n */\nexport function interpolateThemeClass (themeName) {\n  return `${ROOT_CLASS_NAME}_theme_${themeName}`;\n}\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemes = {\n  default: 'default',\n  dark: 'dark'\n};\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemesColors = {\n  default: '#ffffff',\n  dark: '#242F3E'\n};\n","/**\n * @param {Array<*>} arrayA\n * @param {Array<*>} arrayB\n * @param {string | *} key\n * @return {boolean}\n */\nexport function arraysEqual (arrayA, arrayB, key = null) {\n  if (!Array.isArray(arrayA)\n    || !Array.isArray(arrayB)\n    || arrayA.length !== arrayB.length) {\n    return false;\n  }\n  for (let i = 0; i < arrayA.length; ++i) {\n    if (key) {\n      if (arrayA[ i ][ key ] !== arrayB[ i ][ key ]) {\n        return false;\n      }\n    } else if (arrayA[ i ] !== arrayB[ i ]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMinIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return minIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMin (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMinIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMaxIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n  }\n  return maxIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMax (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMaxIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMaxIndexes (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return [ minIndex, maxIndex ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMax (array, startIndex = 0, endIndex = array.length - 1) {\n  const [ minIndex, maxIndex ] = arrayMinMaxIndexes( array, startIndex, endIndex );\n  return [\n    array[ minIndex ],\n    array[ maxIndex ],\n  ];\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arraySum (array) {\n  let length = array.length;\n  let sum = 0;\n\n  while (length--) {\n    sum += array[ length ];\n  }\n\n  return sum;\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arrayAvg (array) {\n  let length = array.length;\n  let result = arraySum( array );\n\n  // prevent from dividing by zero\n  if (length) {\n    result = result / length;\n  }\n\n  return result;\n}\n\n/**\n * Finds boundary indexes in an array of numbers\n *\n * @param {Array<number>} array\n * @param {number} value\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchIndexes (array, value, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ] === value) {\n    left = right;\n  } else if (array[ left ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n\n/**\n * Finds boundary indexes in an array of objects\n *\n * @param {Array<Object>} array\n * @param {number} value\n * @param {string} key\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchObjectIndexes (array, value, key, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ][ key ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ][ key ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ][ key ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ][ key ] === value) {\n    left = right;\n  } else if (array[ left ][ key ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { FRAMES_PER_SECOND } from '../../utils';\n\nexport const AnimationSourceEvents = {\n  UPDATE: 'update'\n};\n\nexport class AnimationSource extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeElapsed = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateInvokes = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updatesPerSecond = 60;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateEach = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateAt = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _paused = false;\n\n  /**\n   * @param {number} updatesPerSecond\n   * @param {number} timeScale\n   */\n  constructor (updatesPerSecond = 60, timeScale = 1) {\n    super();\n\n    this._updatesPerSecond = Math.min( 60, Math.max( 1e-8, updatesPerSecond ) );\n    this._updateEach = FRAMES_PER_SECOND / this._updatesPerSecond;\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (this._paused) {\n      return;\n    }\n\n    this._timeElapsed += deltaTime;\n    this._updateInvokes++;\n\n    if (this._updateInvokes % this._updateEach < 1) {\n      this._callUpdate( ( this._timeElapsed - this._lastUpdateAt ) * this._timeScale );\n      this._lastUpdateAt = this._timeElapsed;\n    }\n  }\n\n  /**\n   * Disposes the instance\n   */\n  dispose () {\n    this._paused = true;\n    this.removeAllListeners();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._paused;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return !this._paused;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set timeScale (value) {\n    this._timeScale = value;\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _callUpdate (deltaTime) {\n    this.emit( AnimationSourceEvents.UPDATE, deltaTime );\n  }\n}\n","import { EventEmitter } from \"./misc/EventEmitter\";\nimport {\n  capitalize,\n  clampNumber,\n  createElement,\n  getElementWidth,\n  resolveElement, setAttributeNS,\n  setAttributes,\n  setAttributesNS\n} from \"../utils\";\n\nconst telechartTitle = `${capitalize( TELECHART_NAME )} ${TELECHART_VERSION} (c) ${TELECHART_AUTHOR}`;\n\nlet INTERNAL_AUTOINCREMENT = 1;\n\nexport class SvgRenderer extends EventEmitter {\n\n  static NS = 'http://www.w3.org/2000/svg';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = INTERNAL_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parentContainer = null;\n\n  /**\n   * @type {SVGElement}\n   * @private\n   */\n  _svgContainer = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minHeight = 450;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minWidth = 100;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _width = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _isInitialized = false;\n\n  /**\n   * @param {Element|string} contextElement\n   */\n  constructor (contextElement) {\n    super();\n\n    this._parentContainer = resolveElement( contextElement );\n    this._init();\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>} children\n   * @param {Element} parent\n   * @return {Element}\n   */\n  createGroup (attrs = {}, children = [], parent = this._svgContainer) {\n    const group = createElement('g', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>|*} children\n   * @param {Element} parent\n   * @return {SVGClipPathElement}\n   */\n  createClipPath (attrs = {}, children = [], parent = this._svgContainer) {\n    const clipPath = createElement('clipPath', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n\n    parent.appendChild( clipPath );\n\n    return clipPath;\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>|*} children\n   * @param {Element} parent\n   * @return {SVGMaskElement}\n   */\n  createMask (attrs = {}, children = [], parent = this._svgContainer) {\n    const mask = createElement('mask', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n\n    parent.appendChild( mask );\n\n    return mask;\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<*>} stops\n   * @param {Element} parent\n   * @return {SVGLinearGradientElement}\n   */\n  createLinearGradient (attrs = {}, stops = [], parent = this._svgContainer) {\n    const stopElements = stops.map(stopAttrs => {\n      return createElement('stop', {\n        useNS: true,\n        attrs: stopAttrs\n      }, [], SvgRenderer.NS);\n    });\n\n    const gradient = createElement('linearGradient', {\n      useNS: true,\n      attrs\n    }, stopElements, SvgRenderer.NS);\n\n    parent.appendChild( gradient );\n\n    return gradient;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Element} parent\n   * @return {SVGDescElement}\n   */\n  createDesc (text = '', parent = this._svgContainer) {\n    const group = createElement('desc', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGTextElement}\n   */\n  createText (text = '', attrs = {}, parent = this._svgContainer) {\n    const tspan = createElement('tspan', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n\n    const textElement = createElement('text', {\n      useNS: true,\n      attrs\n    }, tspan, SvgRenderer.NS);\n\n    parent.appendChild( textElement );\n\n    return textElement;\n  }\n\n  /**\n   * @param {Element} parent\n   * @return {SVGDefsElement}\n   */\n  createDefs (parent = this._svgContainer) {\n    const element = createElement('defs', {\n      useNS: true\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( element );\n\n    return element;\n  }\n\n  /**\n   * @param {string} pathText\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGPathElement}\n   */\n  createPath (pathText, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, { d: pathText });\n\n    const pathElement = createElement('path', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n    parent.appendChild( pathElement );\n\n    return pathElement;\n  }\n\n  /**\n   * @param {SVGPathElement} pathElement\n   * @param {string} pathText\n   */\n  updatePath (pathElement, pathText) {\n    setAttributeNS( pathElement, 'd', pathText, null );\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   * @param {*} attrs\n   * @param {SVGElement | Element} parent\n   * @return {SVGRectElement}\n   */\n  createRect (width, height, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, {\n      width, height\n    });\n\n    const rectElement = createElement('rect', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( rectElement );\n\n    return rectElement;\n  }\n\n  /**\n   * @param {number} cx\n   * @param {number} cy\n   * @param {number} radius\n   * @param {*} attrs\n   * @param {SVGElement | Element} parent\n   * @return {SVGCircleElement}\n   */\n  createCircle (cx = 0, cy = 0, radius = 1, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, {\n      cx, cy, r: radius\n    });\n\n    const circleElement = createElement('circle', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( circleElement );\n\n    return circleElement;\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Element}\n   */\n  querySelector (selector) {\n    return this._svgContainer.querySelector( selector );\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Array<Element>}\n   */\n  querySelectorAll (selector) {\n    return Array.from( this._svgContainer.querySelectorAll( selector ) );\n  }\n\n  /**\n   * Destroy the renderer\n   */\n  destroy () {\n    this._detachEvents();\n    this._clearParentContainer();\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {Element}\n   */\n  get parentContainer () {\n    return this._parentContainer;\n  }\n\n  /**\n   * @return {SVGElement}\n   */\n  get svgContainer () {\n    return this._svgContainer;\n  }\n\n  /**\n   * @return {number}\n   */\n  get width () {\n    return this._width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get height () {\n    return this._height;\n  }\n\n  /**\n   * @return {string}\n   */\n  get viewBox () {\n    return [ 0, 0, this._width, this._height ].join( ' ' );\n  }\n\n  /**\n   * @private\n   */\n  _init () {\n    if (this._isInitialized) {\n      return;\n    }\n\n    this._updateDimensions();\n    this._svgContainer = this._createSvgContainer();\n    this._insertSvgContainer();\n\n    this.createDesc( telechartTitle );\n\n    this._attachEvents();\n\n    this._isInitialized = true;\n  }\n\n  /**\n   * @return {Element}\n   * @private\n   */\n  _createSvgContainer () {\n    const parentContainer = this._parentContainer;\n\n    if (!parentContainer) {\n      throw new Error( 'Parent container is not provided' );\n    }\n\n    return createElement('svg', {\n      useNS: false,\n      attrs: {\n        xmlns: SvgRenderer.NS,\n        version: '1.1',\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox,\n        class: 'telechart-render'\n      }\n    }, [], SvgRenderer.NS);\n  }\n\n  /**\n   * @private\n   */\n  _insertSvgContainer () {\n    this._clearParentContainer();\n    this._parentContainer.appendChild( this._svgContainer );\n  }\n\n  /**\n   * @private\n   */\n  _updateDimensions () {\n    this._width = clampNumber(\n      getElementWidth( this._parentContainer ),\n      this._minWidth\n    );\n    this._height = this._minHeight;\n\n    if (this._svgContainer) {\n      setAttributes(this._svgContainer, {\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  _clearParentContainer () {\n    // clears the child content\n    this._parentContainer.innerHTML = '';\n  }\n\n  /**\n   * @private\n   */\n  _onResize (ev) {\n    this._updateDimensions();\n    this.emit( 'resize', ev );\n  }\n\n  /**\n   * @private\n   */\n  _attachEvents () {\n    this._attachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _detachEvents () {\n    this._detachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _attachResizeListener () {\n    if (this._resizeListener) {\n      this._detachResizeListener();\n    }\n\n    this._resizeListener = this._onResize.bind( this );\n    window.addEventListener( 'resize', this._resizeListener );\n  }\n\n  /**\n   * @private\n   */\n  _detachResizeListener () {\n    if (!this._resizeListener) {\n      return;\n    }\n\n    window.removeEventListener( 'resize', this._resizeListener );\n    this._resizeListener = null;\n  }\n}\n","/**\n * @type {{x: string, line: string}}\n */\nexport const SeriesTypes = {\n  x: 'x',\n  line: 'line'\n};\n","export const PointTypes = {\n  point: 'point',\n  group: 'group',\n};\n\nlet POINT_AUTOINCREMENT = 1;\n\nexport class Point {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = POINT_AUTOINCREMENT++;\n\n  /**\n   * @enum 'point' | 'group'\n   * @type {string}\n   * @private\n   */\n  _type = 'point';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _x = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _y = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgY = 0;\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor (x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n  }\n\n  /**\n   * @param {string} pointType\n   */\n  setType (pointType = 'point') {\n    this._type = pointType;\n  }\n\n  /**\n   * @param {number} x\n   */\n  setX (x) {\n    this._x = x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  setY (y) {\n    this._y = y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  setXY (x, y) {\n    this.setX( x );\n    this.setY( y );\n  }\n\n  /**\n   * @param {number} x\n   */\n  addX (x) {\n    this._x += x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  addY (y) {\n    this._y += y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  addXY (x, y) {\n    this.addX( x );\n    this.addY( y );\n  }\n\n  /**\n   * @param {number} svgX\n   */\n  setSvgX (svgX) {\n    this._svgX = svgX;\n  }\n\n  /**\n   * @param {number} svgY\n   */\n  setSvgY (svgY) {\n    this._svgY = svgY;\n  }\n\n  /**\n   * @param {number} svgX\n   * @param {number} svgY\n   */\n  setSvgXY (svgX, svgY) {\n    this._svgX = svgX;\n    this._svgY = svgY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get x () {\n    return this._x;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get y () {\n    return this._y;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgX () {\n    return this._svgX;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgY () {\n    return this._svgY;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get type () {\n    return this._type;\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport * as timingFunctions from '../../utils';\n\nlet TWEEN_ID = 1;\n\nexport const TweenState = {\n  NOT_STARTED: 1,\n  RUNNING: 2,\n  PAUSED: 3,\n  COMPLETED: 4,\n  CANCELLED: 5\n};\n\nexport const TweenEvents = {\n  STARTED: 'started',\n  PAUSED: 'paused',\n  COMPLETE: 'complete',\n  CANCELLED: 'cancelled'\n};\n\nconst DEFAULT_PARAMS = {\n  timeScale: 1,\n  duration: 500,\n  timingFunction: 'linear'\n};\n\nexport class Tween extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = TWEEN_ID++;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _params = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _state = TweenState.NOT_STARTED;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeScale = DEFAULT_PARAMS.timeScale;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeElapsed = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _duration = DEFAULT_PARAMS.duration;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _timingFunctionName = DEFAULT_PARAMS.timingFunction;\n\n  /**\n   * @type {Function}\n   * @private\n   */\n  _timingFunction = () => {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _target = null;\n\n  /**\n   * @type {Array<string | number>}\n   * @private\n   */\n  _properties = [];\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  _targetValues = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _startValues = [];\n\n  /**\n   * @param {Array<*>} args\n   * @returns {Tween}\n   */\n  static create (...args) {\n    return new Tween( ...args );\n  }\n\n  /**\n   * @param {*} target\n   * @param {string|Array<string | number>} properties\n   * @param {number|Array<number>} targetValues\n   * @param {*} params\n   */\n  constructor (target, properties = [], targetValues = [], params = {}) {\n    super();\n\n    this._target = target;\n    this._properties = [].concat( properties );\n    this._targetValues = [].concat( targetValues );\n    this._initParams( params );\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (!this.isRunning) {\n      return;\n    }\n\n    deltaTime *= this._timeScale;\n    this._timeElapsed += deltaTime;\n\n    this._updateAnimation( deltaTime );\n    this._checkDuration();\n  }\n\n  /**\n   * Runs animation\n   */\n  start () {\n    if (this.isNotStarted) {\n      this._startValues = this._getPropertyValues( this._properties );\n    }\n    this._state = TweenState.RUNNING;\n    this.emit( TweenEvents.STARTED );\n  }\n\n  /**\n   * Stops animation\n   */\n  pause () {\n    this._state = TweenState.PAUSED;\n    this.emit( TweenEvents.PAUSED );\n  }\n\n  /**\n   * Finish & dispose the tween\n   */\n  finish () {\n    this._state = TweenState.COMPLETED;\n    this.emit( TweenEvents.COMPLETE, this._timeElapsed );\n    this._dispose();\n  }\n\n  /**\n   * Cancels current animation\n   */\n  cancel () {\n    this._state = TweenState.CANCELLED;\n    this.emit( TweenEvents.CANCELLED, this._timeElapsed );\n    this._dispose();\n  }\n\n  /**\n   * @param {Array<number>} targetValues\n   */\n  patchAnimation (targetValues = []) {\n    this._targetValues = targetValues;\n    this._startValues = this._getPropertyValues( this._properties );\n    this._timeElapsed = 0;\n  }\n\n  /**\n   * @param {number} timeScale\n   */\n  setTimeScale (timeScale = 1) {\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isNotStarted () {\n    return this._state === TweenState.NOT_STARTED;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return this._state === TweenState.RUNNING;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._state === TweenState.PAUSED;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isCompleted () {\n    return this._state === TweenState.COMPLETED;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get duration () {\n    return this._duration;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get timingFunctionName () {\n    return this._timingFunctionName;\n  }\n\n  /**\n   * @returns {Function}\n   */\n  get timingFunction () {\n    return this._timingFunction;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeRemaining () {\n    return Math.max( 0, Math.min( this._duration, this._duration - this._timeElapsed ) );\n  }\n\n  /**\n   * @returns {number}\n   */\n  get progress () {\n    return Math.min( 1, Math.max( 0, this._timeElapsed / this._duration ) );\n  }\n\n  /**\n   * @param {*} params\n   * @private\n   */\n  _initParams (params) {\n    let {\n      timeScale,\n      duration,\n      timingFunction\n    } = this._params = Object.assign( {}, DEFAULT_PARAMS, params );\n\n    this._timeScale = timeScale;\n    this._duration = duration;\n    this._timingFunctionName = timingFunction;\n    this._timingFunction = this._getTimingFunction( timingFunction );\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _updateAnimation (deltaTime) {\n    const progress = this.progress;\n    const timingProgress = this._timingFunction( progress );\n\n    for (let i = 0, length = this._properties.length; i < length; ++i) {\n      const property = this._properties[ i ];\n      const delta = ( this._targetValues[ i ] - this._startValues[ i ] ) * timingProgress;\n      this._target[ property ] = this._startValues[ i ] + delta;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _checkDuration () {\n    if (this._timeElapsed >= this._duration) {\n      this.finish();\n    }\n  }\n\n  /**\n   * @param {Array<string>} properties\n   * @returns {Array<number>}\n   * @private\n   */\n  _getPropertyValues (properties = []) {\n    let values = [];\n    for (let i = 0, length = properties.length; i < length; ++i) {\n      values[ i ] = this._getPropertyValue( properties[i] );\n    }\n    return values;\n  }\n\n  /**\n   * @param {string} property\n   * @returns {number}\n   * @private\n   */\n  _getPropertyValue (property) {\n    return this._target[ property ] || 0;\n  }\n\n  /**\n   * @param {string} functionName\n   * @returns {Function}\n   * @private\n   */\n  _getTimingFunction (functionName) {\n    const defaultFunctionName = DEFAULT_PARAMS.timingFunction;\n    return timingFunctions[ functionName ] || timingFunctions[ defaultFunctionName ];\n  }\n\n  /**\n   * Disposes the object\n   *\n   * @private\n   */\n  _dispose () {\n    this._params = null;\n    this._timingFunction = null;\n    this._targetValues = null;\n    this._startValues = null;\n    this._properties = null;\n    this._target = null;\n\n    this.removeAllListeners();\n  }\n}\n","/**\n * @type {{navigatorChart: string, chart: string}}\n */\nexport const ChartTypes = {\n  chart: 'chart',\n  navigatorChart: 'navigatorChart'\n};\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { arrayMinMax, arraysEqual, setAttributeNS, setAttributesNS } from '../../utils';\nimport { Point } from '../point/Point';\nimport { PointGroup } from '../point/PointGroup';\nimport { Tween, TweenEvents } from '../animation/Tween';\nimport { ChartTypes } from '../chart/ChartTypes';\n\nlet SERIES_AUTOINCREMENT = 1;\n\nexport const OpacityAnimationType = {\n  hiding: 1,\n  showing: 2\n};\n\nexport class Series extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = SERIES_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parent = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _isSimpleChart = false;\n\n  /**\n   * @type {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   * @private\n   */\n  _settings = {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _seriesOptions = {};\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _yAxis = [];\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _name = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _label = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _color = '#31a8dc';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _strokeWidth = 1;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _visible = true;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _group = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _pathText = null;\n\n  /**\n   * @type {SVGPathElement}\n   * @private\n   */\n  _pathElement = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _pathUpdateNeeded = false;\n\n  /**\n   * @type {SVGCircleElement}\n   * @private\n   */\n  _marker = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _markerVisible = false;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _markerAnimation = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _markerRadius = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _maxMarkerRadius = 4;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _markerPointIndex = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _markerPositionUpdateNeeded = false;\n\n  /**\n   * @type {Array<Point>}\n   * @private\n   */\n  _points = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _opacity = 1;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _opacityAnimation = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _opacityAnimationType = null;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Element} parent\n   * @param {*} settings\n   */\n  constructor (renderer, parent, settings = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._parent = parent;\n    this._settings = settings;\n    this._parseSettings();\n  }\n\n  /**\n   * Initializes series with options\n   */\n  initialize () {\n    this._createPoints();\n    this._addEvents();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (this._pathUpdateNeeded) {\n      this.updateViewportPoints();\n      this.updatePath();\n\n      this._pathUpdateNeeded = false;\n    }\n\n    if (this._opacityAnimation\n      && this._opacityAnimation.isRunning) {\n      this._opacityAnimation.update( deltaTime );\n      this.updatePathOpacity();\n    }\n\n    // only base charts has markers\n    if (this._isSimpleChart) {\n      if (this._markerPositionUpdateNeeded) {\n        this._updateMarkerPosition();\n\n        this._markerPositionUpdateNeeded = false;\n      }\n\n      const markerAnimation = this._markerAnimation;\n      const hasMarkerAnimation = markerAnimation && markerAnimation.isRunning;\n      if (hasMarkerAnimation) {\n        markerAnimation.update( deltaTime );\n\n        this.updateMarkerRadius();\n      }\n    }\n  }\n\n  /**\n   * Creates path\n   */\n  firstRender () {\n    if (this._pathElement) {\n      return;\n    }\n\n    // update svgX & svgY for each point\n    this.updateViewportPoints();\n\n    // creates and stores wrapper for following path element\n    this._createGroup();\n\n    // creates and stores initial path element\n    this._createPath();\n\n    if (this._isSimpleChart) {\n      this._createMarker();\n    }\n  }\n\n  /**\n   * @param {Chart | NavigatorChart | BaseChart} chart\n   */\n  setChart (chart) {\n    this._chart = chart;\n    this._isSimpleChart = chart.chartType === ChartTypes.chart;\n  }\n\n  /**\n   * Shows series on the chart\n   */\n  setVisible () {\n    this._visible = true;\n    this._createShowAnimation();\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Hides series from the chart\n   */\n  setInvisible () {\n    this._visible = false;\n    this._createHideAnimation();\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Toggles series\n   */\n  toggleVisible () {\n    this._visible\n      ? this.setInvisible()\n      : this.setVisible();\n  }\n\n  showMarker () {\n    this._createMarkerShowAnimation();\n    this._markerVisible = true;\n  }\n\n  hideMarker () {\n    this._createMarkerHideAnimation();\n    this._markerVisible = false;\n  }\n\n  toggleMarker () {\n    this._markerVisible\n      ? this.hideMarker()\n      : this.showMarker();\n  }\n\n  /**\n   * @private\n   */\n  updateLocalExtremes () {\n    const [ rangeStartIndex, rangeEndIndex ] = this._chart._viewportRangeIndexes;\n\n    const [ minValue, maxValue ] = arrayMinMax(\n      this._yAxis, rangeStartIndex, rangeEndIndex\n    );\n\n    this._localMinY = minValue;\n    this._localMaxY = maxValue;\n  }\n\n  /**\n   * Updates viewport points\n   */\n  updateViewportPoints () {\n    this._chart._useViewportPointsInterval\n      ? this.updateViewportPointsByInterval()\n      : this.updateViewportPointsByArray();\n  }\n\n  /**\n   * Updates points by array of points\n   */\n  updateViewportPointsByArray () {\n    const indexes = this._chart._viewportPointsIndexes;\n\n    for (let i = 0; i < indexes.length; ++i) {\n      const pointIndex = indexes[ i ];\n      const point = this._points[ pointIndex ];\n      point.setSvgXY(\n        this._chart.projectXToSvg( point.x ),\n        this._chart.projectYToSvg( point.y ),\n      );\n    }\n  }\n\n  /**\n   * Updates points by interval\n   */\n  updateViewportPointsByInterval () {\n    const [ startIndex, endIndex ] = this._chart._viewportPointsIndexes;\n    for (let i = startIndex; i <= endIndex; ++i) {\n      const point = this._points[ i ];\n      point.setSvgXY(\n        this._chart.projectXToSvg( point.x ),\n        this._chart.projectYToSvg( point.y ),\n      );\n    }\n  }\n\n  /**\n   * Recompute path text\n   */\n  updatePath () {\n    this._updatePathText();\n    this._renderer.updatePath( this._pathElement, this._pathText );\n  }\n\n  /**\n   * Recompute path text\n   */\n  updatePathOpacity () {\n    setAttributeNS( this._pathElement, 'opacity', this._opacity, null );\n  }\n\n  /**\n   * Recompute path text\n   */\n  updateMarkerRadius () {\n    setAttributeNS( this._marker, 'r', this._markerRadius, null );\n  }\n\n  /**\n   * Mark to update path in next animation frame\n   */\n  requestPathUpdate () {\n    this._pathUpdateNeeded = true;\n  }\n\n  /**\n   * Mark to update marker in next animation frame\n   */\n  setMarkerPointIndex (index) {\n    this._markerPointIndex = index;\n    this._markerPositionUpdateNeeded = true;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {string}\n   */\n  get label () {\n    return this._label;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isVisible () {\n    return this._visible;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @return {string}\n   */\n  get opacityAnimationType () {\n    return this._opacityAnimationType;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isShowing () {\n    return this._opacityAnimationType === OpacityAnimationType.showing;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isHiding () {\n    return this._opacityAnimationType === OpacityAnimationType.hiding;\n  }\n\n  /**\n   * @private\n   */\n  _parseSettings () {\n    const {\n      xAxis, yAxis,\n      label, type,\n      color, name,\n      options = {}\n    } = this._settings;\n\n    this._xAxis = xAxis;\n    this._yAxis = yAxis;\n    this._label = label;\n    this._color = color;\n    this._name = name;\n\n    const {\n      strokeWidth = 1\n    } = options;\n\n    this._strokeWidth = strokeWidth;\n\n    this._seriesOptions = options;\n  }\n\n  /**\n   * @private\n   */\n  _createGroup () {\n    this._group = this._renderer.createGroup({\n      class: 'telechart-series-path-group',\n      id: `telechart-path-${this._id}`,\n      x: 0,\n      y: 0\n    }, [], this._parent);\n  }\n\n  /**\n   * @private\n   */\n  _createPath () {\n    this._updatePathText();\n\n    this._pathElement = this._renderer.createPath(this._pathText, {\n      class: 'telechart-series-path',\n      d: this._pathText,\n      fill: 'none',\n      stroke: this._color,\n      strokeWidth: this._strokeWidth,\n      strokeLinejoin: 'round',\n      strokeLinecap: 'round'\n    }, this._group);\n  }\n\n  /**\n   * @private\n   */\n  _updatePathText () {\n    this._pathText = this._chart._useViewportPointsInterval\n      ? this._computePathTextByInterval( this._chart._viewportPointsIndexes )\n      : this._computePathTextByArray( this._chart._viewportPointsIndexes );\n  }\n\n  /**\n   * @private\n   */\n  _createPoints () {\n    const xAxis = this._xAxis;\n    const yAxis = this._yAxis;\n\n    for (let i = 0; i < xAxis.length; ++i) {\n      this._points.push(\n        new Point( xAxis[ i ], yAxis[ i ] )\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  _createMarker () {\n    this._marker = this._renderer.createCircle(0, 0, this._markerRadius, {\n      class: 'telechart-chart-marker',\n      stroke: this._color,\n      strokeWidth: 2,\n      fill: 'white'\n    }, this._group);\n  }\n\n  /**\n   * @private\n   */\n  _updateMarkerPosition () {\n    const x = this._xAxis[ this._markerPointIndex ];\n    const y = this._yAxis[ this._markerPointIndex ];\n\n    const svgX = this._chart.projectXToSvg( x );\n    const svgY = this._chart.projectYToSvg( y );\n\n    setAttributesNS(this._marker, {\n      cx: svgX,\n      cy: svgY\n    });\n  }\n\n  /**\n   * @private\n   */\n  _addEvents () {\n    this._renderer.on('resize', _ => {\n      this._onRendererResize();\n    });\n  }\n\n  /**\n   * @private\n   */\n  _onRendererResize () {\n    this._pathUpdateNeeded = true;\n  }\n\n  /**\n   * @param {Array<number>} indexes\n   * @return {string}\n   * @private\n   */\n  _computePathTextByArray (indexes) {\n    let result = '';\n\n    if (!indexes.length) {\n      return result;\n    }\n\n    result += 'M';\n\n    let point;\n\n    for (let i = 0; i < indexes.length; ++i) {\n      if (i !== 0) {\n        result += 'L';\n      }\n\n      point = this._points[ indexes[ i ] ];\n\n      result += point.svgX + ' ' + point.svgY;\n    }\n\n    return result;\n  }\n\n  /**\n   * @param {Array<number>} interval\n   * @return {string}\n   * @private\n   */\n  _computePathTextByInterval (interval) {\n    let result = '';\n\n    if (!interval.length\n      || interval[ 1 ] - interval[ 0 ] <= 0) {\n      return result;\n    }\n\n    result += 'M';\n\n    const [ startIndex, endIndex ] = interval;\n\n    for (let i = startIndex; i <= endIndex; ++i) {\n      const point = this._points[ i ];\n\n      if (i !== startIndex) {\n        result += 'L';\n      }\n\n      result += point.svgX + ' ' + point.svgY;\n    }\n\n    return result;\n  }\n\n  /**\n   * @private\n   */\n  _createShowAnimation () {\n    if (this._opacityAnimation\n      && this._opacityAnimationType === OpacityAnimationType.showing) {\n      return;\n    }\n    this._createOpacityAnimation( 1 );\n    this._opacityAnimationType = OpacityAnimationType.showing;\n  }\n\n  /**\n   * @private\n   */\n  _createHideAnimation () {\n    if (this._opacityAnimation\n      && this._opacityAnimationType === OpacityAnimationType.hiding) {\n      return;\n    }\n    this._createOpacityAnimation( 0 );\n    this._opacityAnimationType = OpacityAnimationType.hiding;\n  }\n\n  /**\n   * @param {number} opacity\n   * @private\n   */\n  _createOpacityAnimation (opacity) {\n    this._opacityAnimation = new Tween(this, '_opacity', opacity, {\n      duration: 300,\n      timingFunction: 'easeInOutQuad'\n    });\n\n    const onFinished = _ => {\n      this._opacityAnimation = null;\n      this._opacityAnimationType = null;\n      this.requestPathUpdate();\n    };\n\n    this._opacityAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._opacityAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._opacityAnimation.start();\n  }\n\n  /**\n   * @private\n   */\n  _createMarkerShowAnimation () {\n    if (this._markerAnimation && this._markerVisible) {\n      // already have animation\n      return;\n    }\n\n    this._createMarkerAnimation( this._maxMarkerRadius );\n  }\n\n  /**\n   * @private\n   */\n  _createMarkerHideAnimation () {\n    if (this._markerAnimation && !this._markerVisible) {\n      // already have animation\n      return;\n    }\n\n    this._createMarkerAnimation( 0 );\n  }\n\n  /**\n   * @param {number} radius\n   * @private\n   */\n  _createMarkerAnimation (radius) {\n    this._markerAnimation = new Tween(this, '_markerRadius', radius, {\n      duration: 200,\n      timingFunction: 'easeInOutCubic'\n    });\n\n    const onFinished = _ => {\n      this._markerAnimation = null;\n    };\n\n    this._markerAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._markerAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._markerAnimation.start();\n  }\n}\n","export const ChartEvents = {\n  SERIES_VISIBLE_CHANGE: 'seriesVisibleChange'\n};\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { SeriesTypes } from '../series/SeriesTypes';\nimport { Series } from '../series/Series';\nimport {\n  arraysEqual,\n  binarySearchIndexes,\n  clampNumber,\n  ensureNumber,\n  getElementOffset,\n  isDate,\n  setAttributeNS\n} from '../../utils';\nimport { Tween, TweenEvents } from '../animation/Tween';\nimport { ChartTypes } from './ChartTypes';\nimport { ChartEvents } from './events/ChartEvents';\n\nlet CHART_ID = 1;\n\nexport class BaseChart extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = CHART_ID++;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _type = '';\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartHeight = 280;\n\n  /**\n   * @type {number}\n   * @private\n   * @default 2\n   */\n  _groupingPixels = 2;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<Series>}\n   * @private\n   */\n  _series = [];\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {SVGDefsElement}\n   * @private\n   */\n  _defs = null;\n\n  /**\n   * @type {SVGMaskElement}\n   * @private\n   */\n  _chartMask = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _chartMaskId = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartMaskPadding = 0;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRange = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRangeIndexes = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportPointsIndexes = [ 0, 0 ];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _useViewportPointsInterval = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportDistance = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPixelX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPixelY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPadding = 13;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportLeftPaddingScale = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportRightPaddingScale = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportRangeUpdateNeeded = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportPointsGroupingNeeded = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentLocalMinY = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentLocalMaxY = null;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _minMaxYAnimation = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minMaxYAnimationSign = null;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _rangeAnimation = null;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _rangeAnimationObject = {};\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Object} options\n   */\n  constructor (renderer, options = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._options = options;\n  }\n\n  initialize () {\n    this.resolveDefs();\n    this.createChartMask();\n\n    this.createSeriesGroup();\n    this.createSeries();\n\n    this.addEvents();\n\n    this.setInitialRange();\n    this.approximateViewportPoints();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    let extremesUpdated = false;\n\n    if (this._minMaxYAnimation && this._minMaxYAnimation.isRunning) {\n      this._minMaxYAnimation.update( deltaTime );\n\n      extremesUpdated = true;\n    }\n\n    const hasRangeAnimation = this._rangeAnimation && this._rangeAnimation.isRunning;\n\n    if (this._viewportRangeUpdateNeeded || hasRangeAnimation) {\n      if (hasRangeAnimation) {\n        this._rangeAnimation.update( deltaTime );\n\n        this.updateViewportRange([\n          this._rangeAnimationObject.from,\n          this._rangeAnimationObject.to\n        ], { skipExtremes: false });\n      } else {\n        this.updateViewportRange();\n      }\n\n      this._viewportRangeUpdateNeeded = false;\n    }\n\n    if (this._viewportPointsGroupingNeeded) {\n      this.approximateViewportPoints();\n\n      this._viewportPointsGroupingNeeded = false;\n    }\n\n    if (extremesUpdated) {\n      this.updateViewportPixel();\n    }\n\n    this.eachSeries(line => {\n      const hasOpacityAnimation = line.isHiding;\n      const isNavigatorPath = this._type === ChartTypes.navigatorChart;\n\n      if (extremesUpdated && !(isNavigatorPath && hasOpacityAnimation)) {\n        line.requestPathUpdate();\n      }\n\n      line.update( deltaTime );\n    });\n  }\n\n  /**\n   * Draws initial chart\n   */\n  firstRender () {\n    this.eachSeries(line => line.firstRender());\n  }\n\n  /**\n   * Creates SVG group for storing series paths\n   * @abstract\n   */\n  createSeriesGroup () {\n  }\n\n  /**\n   * Creates array of series\n   */\n  createSeries () {\n    const {\n      series: data,\n      seriesOptions: options = {}\n    } = this._options || {};\n\n    const groupingOptions = options.grouping;\n    if (groupingOptions) {\n      if (groupingOptions.pixels) {\n        this._groupingPixels = ensureNumber( groupingOptions.pixels );\n      }\n    }\n\n    const {\n      columns,\n      types,\n      colors,\n      names\n    } = data;\n\n    const xAxisIndex = columns.findIndex(column => {\n      return types[ column[ 0 ] ] === SeriesTypes.x;\n    });\n    const xAxis = this._xAxis = columns[ xAxisIndex ].slice( 1 );\n\n    let yAxes = columns.slice(); // copy an array to change later\n    yAxes.splice( xAxisIndex, 1 ); // remove x axis from the array\n\n    for (let i = 0; i < yAxes.length; ++i) {\n      const yAxis = yAxes[ i ].slice();\n      const label = yAxis.shift();\n      const type = types[ label ];\n      const color = colors[ label ];\n      const name = names[ label ];\n\n      // prepare series settings\n      const settings = {\n        xAxis, yAxis, label, type,\n        color, name, options: this.extendSeriesOptions( options )\n      };\n\n      // create instance\n      const series = new Series( this._renderer, this._seriesGroup, settings );\n      // provide context for each series\n      series.setChart( this );\n      series.initialize();\n\n      this._series.push( series );\n    }\n  }\n\n  /**\n   * Creates or resolves defs element in SVG container\n   */\n  resolveDefs () {\n    if (this._defs) {\n      return;\n    }\n    const defs = this._renderer.svgContainer.querySelector( 'defs' );\n    this._defs = !defs\n      ? this._renderer.createDefs()\n      : defs;\n  }\n\n  /**\n   * Creates clip mask for the chart and top-bottom shadow mask\n   */\n  createChartMask () {\n    const padding = this._chartMaskPadding;\n\n    this._chartMaskId = `telechart-mask-${this.id}`;\n\n    this._chartMask = this.renderer.createMask({\n      id: this._chartMaskId\n    }, [], this.defs);\n\n    const gradientId = `telechart-mask-gradient-${this.id}`;\n    const sharpGradient = this._type === ChartTypes.navigatorChart;\n\n    // create gradient for rectangle\n    this.renderer.createLinearGradient({\n      id: gradientId,\n      gradientTransform: 'rotate(90)'\n    }, [\n      { offset: '0', stopColor: 'white', stopOpacity: 0 },\n      { offset: sharpGradient ? '0.1%' : '5%', stopColor: 'white', stopOpacity: 1 },\n      { offset: '99.9%', stopColor: 'white', stopOpacity: 1 },\n      { offset: '100%', stopColor: 'white', stopOpacity: 0 },\n    ], this.defs);\n\n    // create rectangle with gradient and append to mask\n    this.renderer.createRect(this.chartWidth, this.chartHeight + padding + 1, {\n      fill: `url(#${gradientId})`,\n      x: 0,\n      y: -padding,\n    }, this._chartMask);\n  }\n\n  /**\n   * Sets initial viewport range for the chart\n   */\n  setInitialRange () {\n    this.setViewportRange();\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   * @param {*} options\n   */\n  animateViewportRangeTo (minX = -Infinity, maxX = Infinity, options = {}) {\n    const {\n      duration = 300,\n      timingFunction = 'easeInOutQuad',\n      preservePadding = false\n    } = options;\n\n    const [ newMinX, newMaxX ] = this._clampViewportRange( minX, maxX, preservePadding );\n\n    if (this._rangeAnimation) {\n      return this._rangeAnimation.patchAnimation( [ newMinX, newMaxX ] );\n    }\n\n    this._rangeAnimationObject = {\n      from: this._viewportRange[ 0 ],\n      to: this._viewportRange[ 1 ]\n    };\n\n    this._rangeAnimation = new Tween(this._rangeAnimationObject, [ 'from', 'to' ], [\n      newMinX, newMaxX\n    ], {\n      duration, timingFunction\n    });\n\n    const onFinished = _ => {\n      this._rangeAnimation = null;\n    };\n\n    this._rangeAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._rangeAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._rangeAnimation.start();\n  }\n\n  /**\n   * @param {number|Date} minX\n   * @param {number|Date} maxX\n   * @param {boolean} skipExtremes\n   * @param {boolean} preservePadding\n   */\n  setViewportRange (minX = -Infinity, maxX = Infinity, { skipExtremes = false, preservePadding = false } = {}) {\n    // recompute X boundaries\n    this._setViewportRange( minX, maxX, preservePadding );\n\n    // remember last indexes\n    const oldRangeIndexes = this._viewportRangeIndexes;\n\n    // recompute indexes range\n    this._updateViewportIndexes();\n\n    let localExtremesUpdateRequested = false;\n\n    if (!arraysEqual( this._viewportRangeIndexes, oldRangeIndexes )) {\n      // do not recompute groups while first render\n      if (oldRangeIndexes.length > 0) {\n        // recompute approximation in next animation update\n        this._viewportPointsGroupingNeeded = true;\n      }\n\n      localExtremesUpdateRequested = true;\n    }\n\n    const updateExtremes = !skipExtremes && localExtremesUpdateRequested;\n\n    this.eachSeries(line => {\n      // update local extremes only if indexes range changed\n      if (updateExtremes) {\n        // update minY and maxY local values for each line\n        line.updateLocalExtremes();\n      }\n\n      // recompute and repaint path in next animation update\n      line.requestPathUpdate();\n    });\n\n    if (updateExtremes) {\n      // update local extremes on chart level\n      this.updateLocalExtremes();\n    }\n\n    // recompute pixel value (e.g. for animation)\n    this.updateViewportPixel();\n  }\n\n  /**\n   * Recompute key variables for viewport range\n   *\n   * @param {Array<number>} viewportRange\n   * @param {*} options\n   */\n  updateViewportRange (viewportRange = this._viewportRange, options = {}) {\n    const {\n      skipExtremes = true,\n      preservePadding = true\n    } = options;\n\n    // recompute X boundaries\n    this.setViewportRange(\n      viewportRange[ 0 ],\n      viewportRange[ 1 ], {\n        skipExtremes,\n        preservePadding\n      }\n    );\n  }\n\n  /**\n   * Approximate points for better performance\n   */\n  approximateViewportPoints () {\n    let [ startIndex, endIndex ] = this._viewportRangeIndexes;\n\n    startIndex = Math.max( 0, startIndex - 1 );\n    endIndex = Math.min( this._xAxis.length - 1, endIndex + 1 );\n\n    // if we have no enough points\n    // then we don't need to approximate\n    if (endIndex - startIndex < 400) {\n      // just save indexes of points for increase performance\n      // [ startIndex, endIndex ]\n      this._viewportPointsIndexes[ 0 ] = startIndex;\n      this._viewportPointsIndexes[ 1 ] = endIndex;\n      this._useViewportPointsInterval = true;\n\n      // all work done here\n      return;\n    }\n\n    const boostLimit = 500;\n    const boostScale = 1 + this._xAxis.length > boostLimit\n      ? Math.max(0, ( endIndex - startIndex ) / this._xAxis.length ) * 2\n      : 0;\n\n    let groupingDistanceLimitX = boostScale * this._groupingPixels * this._viewportPixelX;\n\n    let viewportIndexes = [];\n    let groupStartIndex = startIndex;\n\n    for (let i = startIndex + 1; i <= endIndex; ++i) {\n      const pointX = this._xAxis[ i ];\n\n      const groupStartDifferenceX = pointX - this._xAxis[ groupStartIndex ];\n\n      if (groupStartDifferenceX >= groupingDistanceLimitX || i === endIndex) {\n        if (groupStartIndex !== i - 1) {\n          // we have 2 or more points to group\n          // [ startIndex, lastIndex ] all indexes inclusive\n          const endIndex = i - 1;\n          const middleIndex = ( groupStartIndex + endIndex ) >> 1;\n          viewportIndexes.push( middleIndex );\n        } else {\n          if (startIndex === i - 1) {\n            // add first point\n            viewportIndexes.push( startIndex );\n          }\n\n          viewportIndexes.push( i );\n        }\n\n        groupStartIndex = i;\n      }\n    }\n\n    this._viewportPointsIndexes = viewportIndexes;\n    this._useViewportPointsInterval = false;\n  }\n\n  /**\n   * Find new local min and max extremes among visible series\n   */\n  updateLocalExtremes () {\n    let localMinY = 0;\n    let localMaxY = 0;\n\n    this.eachSeries(line => {\n      if (!line.isVisible) {\n        // find among visible series\n        return;\n      }\n\n      if (localMinY > line.localMinY) {\n        localMinY = line.localMinY;\n      }\n      if (localMaxY < line.localMaxY) {\n        localMaxY = line.localMaxY;\n      }\n    });\n\n    let oldLocalMinY = this._localMinY;\n    let oldLocalMaxY = this._localMaxY;\n\n    this._localMinY = localMinY;\n    this._localMaxY = localMaxY;\n\n    let updateAnimation = false;\n\n    if (typeof this._currentLocalMinY !== 'number') {\n      // set initial local min y\n      this._currentLocalMinY = this._localMinY;\n    } else if (this._localMinY !== oldLocalMinY) {\n      updateAnimation = true;\n    }\n\n    if (typeof this._currentLocalMaxY !== 'number') {\n      // set initial local max y\n      this._currentLocalMaxY = this._localMaxY;\n    } else if (this._localMaxY !== oldLocalMaxY) {\n      updateAnimation = true;\n    }\n\n    if (updateAnimation) {\n      this._updateOrCreateMinMaxYAnimation();\n    }\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   * @return {number}\n   */\n  computeViewportPixelX (minX = this._viewportRange[ 0 ], maxX = this._viewportRange[ 1 ]) {\n    return ( maxX - minX ) / this.chartWidth;\n  }\n\n  /**\n   * Updates pixel value for each axis\n   */\n  updateViewportPixel () {\n    this._viewportPixelX = this._viewportDistance / this.chartWidth;\n    this._viewportPixelY = this.currentLocalExtremeDifference / this.chartHeight;\n  }\n\n  /**\n   * @param {number} localMinX\n   * @param {number} localMaxX\n   * @return {number}\n   */\n  computeViewportPadding (localMinX, localMaxX) {\n    return this.computeViewportPixelX( localMinX, localMaxX ) * this._viewportPadding;\n  }\n\n  /**\n   * Initialize chart events\n   */\n  addEvents () {\n    this._renderer.on('resize', _ => {\n      this.onRendererResize();\n    });\n\n    this.eachSeries(line => {\n      line.on('visibleChange', _ => {\n        this.onSeriesVisibleChange( line );\n      });\n    });\n  }\n\n  /**\n   * Resize event handler\n   */\n  onRendererResize () {\n    // making request for future animation update\n    this._viewportRangeUpdateNeeded = true;\n    this._viewportPointsGroupingNeeded = true;\n\n    this._updateMaskDimensions()\n  }\n\n  /**\n   * @param {Series} line\n   */\n  onSeriesVisibleChange (line) {\n    // find new extremes and scale\n    this.updateLocalExtremes();\n    \n    this.emit( ChartEvents.SERIES_VISIBLE_CHANGE, line );\n  }\n\n  /**\n   * @param {string} label\n   * @return {Series}\n   */\n  getSeriesByLabel (label) {\n    return this.findSeries(line => {\n      return line.label === label;\n    });\n  }\n\n  /**\n   * @param {string} label\n   */\n  setSeriesVisible (label) {\n    const series = this.getSeriesByLabel( label );\n    if (series) {\n      series.setVisible();\n    }\n  }\n\n  /**\n   * @param {string} label\n   */\n  setSeriesInvisible (label) {\n    const series = this.getSeriesByLabel( label );\n    if (series) {\n      series.setInvisible();\n    }\n  }\n\n  /**\n   * @param {string} label\n   */\n  toggleSeriesInvisible (label) {\n    const series = this.getSeriesByLabel( label );\n    if (series) {\n      series.toggleVisible();\n    }\n  }\n\n  /**\n   * @param {Function} predicate\n   * @return {Series}\n   */\n  findSeries (predicate) {\n    for (let i = 0; i < this._series.length; ++i) {\n      if (predicate( this._series[ i ] )) {\n        return this._series[ i ];\n      }\n    }\n  }\n\n  /**\n   * @param {Function} fn\n   */\n  eachSeries (fn = () => {}) {\n    for (let i = 0; i < this._series.length; ++i) {\n      fn( this._series[ i ], i );\n    }\n  }\n\n  /**\n   * @param {Object} options\n   * @return {*}\n   */\n  extendSeriesOptions (options) {\n    return options;\n  }\n\n  /**\n   * @param {string} type\n   */\n  setChartType (type) {\n    this._type = type;\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   */\n  projectXToSvg (x) {\n    return this.toRelativeX( x ) / this._viewportPixelX;\n  }\n\n  /**\n   * @param {number} y\n   * @return {number}\n   */\n  projectYToSvg (y) {\n    return this.chartHeight - ( y - this._currentLocalMinY ) / this._viewportPixelY;\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   * @private\n   */\n  toRelativeX (x) {\n    return x - this._viewportRange[ 0 ];\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {string}\n   */\n  get chartType () {\n    return this._type;\n  }\n\n  /**\n   * @return {SvgRenderer}\n   */\n  get renderer () {\n    return this._renderer;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get xAxis () {\n    return this._xAxis;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRange () {\n    return this._viewportRange;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRangeIndexes () {\n    return this._viewportRangeIndexes;\n  }\n\n  /**\n   * @return {number}\n   */\n  get viewportPixelX () {\n    return this._viewportPixelX;\n  }\n\n  /**\n   * @return {number}\n   */\n  get viewportPixelY () {\n    return this._viewportPixelY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localExtremeDifference () {\n    return this._localMaxY - this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalExtremeDifference () {\n    return this._currentLocalMaxY - this._currentLocalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalMinY () {\n    return this._currentLocalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalMaxY () {\n    return this._currentLocalMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartWidth () {\n    return this._renderer.width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return this._chartHeight;\n  }\n\n  /**\n   * @return {string}\n   */\n  get chartMaskId () {\n    return this._chartMaskId;\n  }\n\n  /**\n   * @return {Tween}\n   */\n  get minMaxYAnimation () {\n    return this._minMaxYAnimation;\n  }\n\n  /**\n   * @return {SVGDefsElement}\n   */\n  get defs () {\n    return this._defs;\n  }\n\n  /**\n   * @return {number}\n   */\n  get navigatorDistanceScale () {\n    return this._navigatorDistanceScale;\n  }\n\n  /**\n   * @private\n   */\n  _updateViewportIndexes () {\n    const [ rangeStart, rangeEnd ] = this._viewportRange;\n    const [ minLowerIndex, minUpperIndex ] = binarySearchIndexes( this._xAxis, rangeStart );\n    const [ maxLowerIndex, maxUpperIndex ] = binarySearchIndexes( this._xAxis, rangeEnd );\n\n    this._viewportRangeIndexes = [ minUpperIndex, maxLowerIndex ];\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   * @param {boolean} preservePadding\n   * @private\n   */\n  _setViewportRange (minX, maxX, preservePadding = false) {\n    const [ newMinX, newMaxX ] = this._clampViewportRange( minX, maxX, preservePadding );\n\n    this._viewportRange = [ newMinX, newMaxX ];\n    this._viewportDistance = newMaxX - newMinX;\n  }\n\n  /**\n   * @param {number | Date} minX\n   * @param {number | Date} maxX\n   * @param {boolean} preservePadding\n   * @private\n   */\n  _clampViewportRange (minX, maxX, preservePadding = false) {\n    const xAxis = this._xAxis;\n\n    const globalMinX = xAxis[ 0 ];\n    const globalMaxX = xAxis[ xAxis.length - 1 ];\n\n    if (isDate( minX )) {\n      minX = minX.getTime();\n    }\n    if (isDate( maxX )) {\n      maxX = maxX.getTime();\n    }\n\n    if (minX > maxX) {\n      [ minX, maxX ] = [ maxX, minX ];\n    }\n\n    let newMinX = clampNumber( minX, globalMinX, globalMaxX );\n    let newMaxX = clampNumber( maxX, globalMinX, globalMaxX );\n\n    const actualPaddingX = this.computeViewportPadding( newMinX, newMaxX );\n\n    const receivedLeftPaddingX = clampNumber( newMinX - minX, 0, actualPaddingX );\n    const receivedRightPaddingX = clampNumber( maxX - newMaxX, 0, actualPaddingX );\n\n    if (!preservePadding) {\n      this._viewportLeftPaddingScale = receivedLeftPaddingX / actualPaddingX;\n    }\n    if (this._viewportLeftPaddingScale > 0) {\n      newMinX -= actualPaddingX * this._viewportLeftPaddingScale;\n    }\n\n    if (!preservePadding) {\n      this._viewportRightPaddingScale = receivedRightPaddingX / actualPaddingX;\n    }\n    if (this._viewportRightPaddingScale > 0) {\n      newMaxX += actualPaddingX * this._viewportRightPaddingScale;\n    }\n\n    return [ newMinX, newMaxX ];\n  }\n\n  /**\n   * @private\n   */\n  _updateOrCreateMinMaxYAnimation () {\n    if (!this._minMaxYAnimation) {\n      return this._createMinMaxYAnimation();\n    }\n\n    const currentLocalExtremeDifference = this.currentLocalExtremeDifference;\n    const newLocalExtremeDifference = this.localExtremeDifference;\n    const animationSign = currentLocalExtremeDifference < newLocalExtremeDifference;\n\n    if (animationSign !== this._minMaxYAnimationSign) {\n      return this._createMinMaxYAnimation();\n    }\n\n    this._patchMinMaxYAnimation();\n  }\n\n  /**\n   * @private\n   */\n  _createMinMaxYAnimation () {\n    if (this._minMaxYAnimation) {\n      this._minMaxYAnimation.cancel();\n    }\n\n    this._updateMinMaxAnimationSign();\n\n    this._minMaxYAnimation = new Tween(this, [\n      '_currentLocalMinY',\n      '_currentLocalMaxY'\n    ], [\n      this._localMinY,\n      this._localMaxY\n    ], {\n      duration: 300,\n      timingFunction: 'easeInOutQuad'\n    });\n\n    const onFinished = _ => {\n      this._minMaxYAnimation = null;\n    };\n\n    this._minMaxYAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._minMaxYAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._minMaxYAnimation.start();\n  }\n\n  /**\n   * @private\n   */\n  _patchMinMaxYAnimation () {\n    this._minMaxYAnimation.patchAnimation([\n      this._localMinY,\n      this._localMaxY\n    ]);\n  }\n\n  /**\n   * @private\n   */\n  _updateMinMaxAnimationSign () {\n    this._minMaxYAnimationSign = this.currentLocalExtremeDifference < this.localExtremeDifference;\n  }\n\n  /**\n   * @private\n   */\n  _updateMaskDimensions () {\n    if (!this._chartMask) {\n      return;\n    }\n    const rect = this._chartMask.querySelector( 'rect' );\n    setAttributeNS( rect, 'width', this.chartWidth, null );\n  }\n}\n","import { BaseChart } from './BaseChart';\nimport { binarySearchIndexes, cssText, getElementOffset, setAttributeNS } from '../../utils';\nimport { ChartTypes } from './ChartTypes';\n\nexport class Chart extends BaseChart {\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _type = ChartTypes.chart;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartHeight = 280;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartMaskPadding = 20;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _seriesGroupTop = 70;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _cursorInsideChart = false;\n\n  /**\n   * @type {SVGPathElement}\n   * @private\n   */\n  _axisCursor = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _axisCursorPositionX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _axisCursorPointIndex = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _axisCursorUpdateNeeded = false;\n\n  /**\n   * Initializes chart\n   */\n  initialize () {\n    super.initialize();\n\n    this._initializeAxisCursor();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    super.update(deltaTime);\n\n    if (this._axisCursorUpdateNeeded) {\n      this._updateAxisCursor();\n\n      this._axisCursorUpdateNeeded = false;\n    }\n  }\n\n  /**\n   * Creates SVG group for storing series paths\n   */\n  createSeriesGroup () {\n    this._seriesGroup = this.renderer.createGroup({\n      class: 'telechart-series-group',\n      transform: `translate(0, ${this._seriesGroupTop}) scale(1 1)`,\n      mask: `url(#${this.chartMaskId})`\n    });\n\n    this.renderer.createRect(this.renderer.width, '1px', {\n      fill: '#ccc',\n      y: 1,\n      style: cssText({\n        shapeRendering: 'crispEdges'\n      })\n    }, this._seriesGroup);\n\n    this.renderer.createRect(this.renderer.width, '1px', {\n      fill: '#ccc',\n      y: this.chartHeight,\n      style: cssText({\n        shapeRendering: 'crispEdges'\n      })\n    }, this._seriesGroup);\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   */\n  setNavigationRange (min, max) {\n    const [ minX, maxX ] = this._resolveNavigationRange( min, max );\n\n    this.setViewportRange( minX, maxX );\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   */\n  animateNavigationRangeTo (min, max) {\n    const [ minX, maxX ] = this._resolveNavigationRange( min, max );\n\n    this.animateViewportRangeTo( minX, maxX );\n  }\n\n  /**\n   * Sets initial viewport range for the chart\n   */\n  setInitialRange () {\n    const globalMinX = this.xAxis[ 0 ];\n    const globalMaxX = this.xAxis[ this.xAxis.length - 1 ];\n    const initialViewport = Math.floor( ( globalMaxX - globalMinX ) * .3 );\n    const viewportPadding = this.computeViewportPadding(\n      globalMaxX - initialViewport,\n      globalMaxX\n    );\n\n    // set initial range\n    this.setViewportRange(\n      globalMaxX - initialViewport - viewportPadding,\n      globalMaxX + viewportPadding\n    );\n  }\n\n  /**\n   * @param {*} options\n   * @return {*}\n   */\n  extendSeriesOptions (options) {\n    return Object.assign({}, options, {\n      strokeWidth: 2\n    });\n  }\n\n  /**\n   * @param {number} pageX\n   * @param {number} pageY\n   * @return {number}\n   */\n  projectCursorToX ({ pageX = 0, pageY = 0 }) {\n    const { left } = getElementOffset( this.renderer.svgContainer );\n    const chartLeft = pageX - left;\n\n    return this.viewportRange[ 0 ] + chartLeft * this.viewportPixelX;\n  }\n\n  onRendererResize () {\n    super.onRendererResize();\n\n    this._axisCursorUpdateNeeded = true;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return this._chartHeight;\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @private\n   */\n  _resolveNavigationRange (min, max) {\n    const globalMinX = this.xAxis[ 0 ];\n    const globalMaxX = this.xAxis[ this.xAxis.length - 1 ];\n\n    const globalDistance = globalMaxX - globalMinX;\n\n    let minX = globalMinX + min * globalDistance;\n    let maxX = globalMinX + max * globalDistance;\n\n    const padding = this.computeViewportPadding( minX, maxX );\n\n    return [ minX - padding, maxX + padding ];\n  }\n\n  /**\n   * @private\n   */\n  _initializeAxisCursor () {\n    this._createAxisCursor();\n    this._addAxisCursorEvents();\n  }\n\n  /**\n   * @private\n   */\n  _createAxisCursor () {\n    const pathText = this._computeAxisCursorPath();\n\n    this._axisCursor = this.renderer.createPath(pathText, {\n      class: 'telechart-chart-cursor',\n      strokeWidth: 1,\n      stroke: '#ccc'\n    }, this._axisCursorGroup);\n\n    this._axisCursorGroup = this.renderer.createGroup({\n      class: 'telechart-chart-cursor-group',\n      transform: `translate(0, ${this._seriesGroupTop}) scale(1 1)`\n    }, this._axisCursor);\n\n    this.renderer.svgContainer.insertBefore( this._axisCursorGroup, this._seriesGroup );\n  }\n\n  /**\n   * @private\n   */\n  _updateAxisCursor () {\n    this.renderer.updatePath( this._axisCursor, this._computeAxisCursorPath() );\n  }\n\n  /**\n   * @return {string}\n   * @private\n   */\n  _computeAxisCursorPath () {\n    const x = this.xAxis[ this._axisCursorPointIndex ];\n    const svgX = this.projectXToSvg( x );\n\n    return `M${svgX} 0L${svgX} ${this.chartHeight}`;\n  }\n\n  /**\n   * @private\n   */\n  _addAxisCursorEvents () {\n    const mouseMoveListener = this._onMouseMove.bind( this );\n    const mouseLeaveListener = this._onMouseLeave.bind( this );\n\n    const touchStartListener = this._onTouchStart.bind( this );\n    const touchMoveListener = this._onTouchMove.bind( this );\n    const touchEndListener = this._onTouchEnd.bind( this );\n\n    this.renderer.svgContainer.addEventListener( 'touchstart', touchStartListener, { passive: false } );\n    this.renderer.svgContainer.addEventListener( 'touchmove', touchMoveListener, { passive: false } );\n    this.renderer.svgContainer.addEventListener( 'touchend', touchEndListener );\n\n    this.renderer.svgContainer.addEventListener( 'mousemove', mouseMoveListener );\n    this.renderer.svgContainer.addEventListener( 'mouseleave', mouseLeaveListener );\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onMouseMove (ev) {\n    this._onCursorMove( ev );\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onMouseLeave (ev) {\n    this._onCursorLeave();\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onTouchStart (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n    this._onCursorMove( targetTouch );\n\n    if (this._cursorInsideChart) {\n      ev.preventDefault();\n    }\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onTouchMove (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n    this._onCursorMove( targetTouch );\n\n    if (this._cursorInsideChart) {\n      ev.preventDefault();\n    }\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onTouchEnd (ev) {\n    this._onCursorLeave();\n  }\n\n  /**\n   * @param cursorPosition\n   * @private\n   */\n  _onCursorMove (cursorPosition) {\n    this._setInsideChartState(\n      this._insideChart( cursorPosition )\n    );\n\n    if (!this._cursorInsideChart) {\n      return;\n    }\n\n    this._axisCursorPositionX = this.projectCursorToX( cursorPosition );\n    this._axisCursorPointIndex = this._findPointIndexByCursor( this._axisCursorPositionX );\n    this._axisCursorUpdateNeeded = true;\n\n    this.eachSeries(line => {\n      line.setMarkerPointIndex( this._axisCursorPointIndex );\n    });\n  }\n\n  /**\n   * @param {number} cursorX\n   * @return {number}\n   * @private\n   */\n  _findPointIndexByCursor (cursorX) {\n    const [ lowerIndex, upperIndex ] = binarySearchIndexes( this.xAxis, cursorX );\n\n    let index = null;\n    if (lowerIndex < 0 && upperIndex >= 0) {\n      index = upperIndex;\n    } else if (lowerIndex >= 0 && upperIndex >= this.xAxis.length) {\n      index = lowerIndex;\n    } else {\n      const lowerDistance = Math.abs( cursorX - this.xAxis[ lowerIndex ] );\n      const upperDistance = Math.abs( cursorX - this.xAxis[ upperIndex ] );\n      const isLowerCloser = lowerDistance <= upperDistance;\n\n      const isLowerVisible = this.xAxis[ lowerIndex ] >= this.viewportRange[ 0 ];\n      const isUpperVisible = this.xAxis[ upperIndex ] <= this.viewportRange[ 1 ];\n\n      index = isLowerCloser\n        ? ( isLowerVisible ? lowerIndex : upperIndex )\n        : ( isUpperVisible ? upperIndex : lowerIndex );\n    }\n\n    return index;\n  }\n\n  /**\n   * @private\n   */\n  _onCursorLeave () {\n    this._setInsideChartState( false );\n  }\n\n  /**\n   * @param {boolean} isInside\n   * @private\n   */\n  _setInsideChartState (isInside) {\n    const changed = this._cursorInsideChart !== isInside;\n    if (!changed) {\n      return;\n    }\n\n    this._cursorInsideChart = isInside;\n    this._onCursorInsideChartChanged( isInside );\n  }\n\n  /**\n   * @param {boolean} isInside\n   * @private\n   */\n  _onCursorInsideChartChanged (isInside) {\n    if (isInside) {\n      this._showMarkers();\n      this._showCursor();\n    } else {\n      this._hideMarkers();\n      this._hideCursor();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _showMarkers () {\n    this.eachSeries(line => {\n      if (line.isVisible) {\n        line.showMarker();\n      }\n    });\n  }\n\n  /**\n   * @private\n   */\n  _hideMarkers () {\n    this.eachSeries(line => {\n      line.hideMarker();\n    });\n  }\n\n  /**\n   * @private\n   */\n  _showCursor () {\n    setAttributeNS( this._axisCursor, 'stroke-opacity', 1, null );\n  }\n\n  /**\n   * @private\n   */\n  _hideCursor () {\n    setAttributeNS( this._axisCursor, 'stroke-opacity', 0, null );\n  }\n\n  /**\n   * @param {number} pageX\n   * @param {number} pageY\n   * @return {boolean}\n   * @private\n   */\n  _insideChart ({ pageX, pageY }) {\n    const { top, left } = getElementOffset( this.renderer.svgContainer );\n    const chartTop = pageY - top - this._seriesGroupTop;\n    const chartLeft = pageX - left;\n\n    return chartTop >= 0 && chartTop <= this.chartHeight\n      && chartLeft >= 0 && chartLeft <= this.chartWidth;\n  }\n}\n","export class Clock {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateMs = 0;\n\n  constructor () {\n    this._lastUpdateMs = performance.now();\n  }\n\n  /**\n   * @return {number}\n   */\n  getDelta () {\n    const now = performance.now();\n    const delta = now - this._lastUpdateMs;\n    this._lastUpdateMs = now;\n\n    return delta;\n  }\n}\n","export const NavigatorChartEvents = {\n  RANGE_CHANGED: 'rangeChanged',\n  ANIMATE_RANGE: 'animateRange',\n};\n","import { BaseChart } from './BaseChart';\nimport { ChartTypes } from './ChartTypes';\nimport {\n  clampNumber,\n  cssText,\n  getElementOffset, isTouchEventsSupported,\n  passiveIfSupported,\n  setAttributeNS,\n  setAttributesNS\n} from '../../utils';\nimport { NavigatorChartEvents } from './events/NavigatorChartEvents';\nimport { Tween, TweenEvents } from '../animation/Tween';\n\nexport class NavigatorChart extends BaseChart {\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _type = ChartTypes.navigatorChart;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartHeight = 45;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _offsetY = 388;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _paddingTopBottom = 2;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _paddingLeftRight = 11;\n\n  /**\n   * @type {number}\n   * @private\n   * @readonly\n   */\n  _chartMaskPadding = 1;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _navigatorGroup = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _sliderGroup = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _slider = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _sliderControllerLeft = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _sliderControllerRight = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderControllerWidth = isTouchEventsSupported() ? 30 : 20;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderControllerOffset = isTouchEventsSupported() ? 17 : 12;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderWidth = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderLeftRightBorderWidth = 5;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _overlayLeft = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _overlayRight = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _overlayLeftWidth = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _overlayRightWidth = 0;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _overlayColor = 'rgba(240, 246, 249, 0.75)';\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _sliderUpdateNeeded = false;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _navigatorRange = [ .7, 1 ];\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _navigatorRangeAnimation = null;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _navigationRangeAnimationObject = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _navigatorMinRangeDistance = .05;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _navigatorChangeDirection = 'right';\n\n  /**\n   * Initializes navigator chart\n   */\n  initialize () {\n    super.initialize();\n\n    this._updateNavigatorDimensions();\n    this._createNavigatorGroup();\n    this._createOverlays();\n\n    this._createSliderEventsListeners();\n  }\n\n  update (deltaTime) {\n    super.update( deltaTime );\n\n    const hasRangeAnimation = this._navigatorRangeAnimation && this._navigatorRangeAnimation.isRunning;\n    if (hasRangeAnimation) {\n      this._navigatorRangeAnimation.update( deltaTime );\n\n      this.updateNavigationRange(\n        ...[ this._navigationRangeAnimationObject.from, this._navigationRangeAnimationObject.to ]\n      )\n    }\n\n    if (this._sliderUpdateNeeded) {\n      this._updateNavigatorElements();\n\n      this._sliderUpdateNeeded = false;\n    }\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @param {*} options\n   */\n  animateNavigationRangeTo (min = 0, max = 1, options = {}) {\n    const {\n      duration = 300,\n      timingFunction = 'easeInOutQuad'\n    } = options;\n\n    const [ newMin, newMax ] = this._clampNavigationRange( min, max );\n\n    if (this._navigatorRangeAnimation) {\n      return this._navigatorRangeAnimation.patchAnimation( [ newMin, newMax ] );\n    }\n\n    this._navigationRangeAnimationObject = {\n      from: this._navigatorRange[ 0 ],\n      to: this._navigatorRange[ 1 ]\n    };\n\n    this._navigatorRangeAnimation = new Tween(this._navigationRangeAnimationObject, [ 'from', 'to' ], [\n      newMin, newMax\n    ], {\n      duration, timingFunction\n    });\n\n    const onFinished = _ => {\n      this._navigatorRangeAnimation = null;\n    };\n\n    this._navigatorRangeAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._navigatorRangeAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._navigatorRangeAnimation.start();\n\n    this.emit( NavigatorChartEvents.ANIMATE_RANGE, [ newMin, newMax ] );\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @param {boolean} emitChange\n   */\n  setNavigationRange (min = 0, max = 1, { emitChange = true } = {}) {\n    [ min, max ] = this._clampNavigationRange( min, max );\n    this._navigatorRange = [ min, max ];\n\n    this._updateNavigatorDimensions();\n    this._sliderUpdateNeeded = true;\n\n    if (emitChange) {\n      this.emit( NavigatorChartEvents.RANGE_CHANGED, this._navigatorRange );\n    }\n  }\n\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   */\n  updateNavigationRange (min, max) {\n    this.setNavigationRange( min, max, { emitChange: false } );\n  }\n\n  /**\n   * Creates SVG group for storing series paths\n   */\n  createSeriesGroup () {\n    this._seriesGroup = this.renderer.createGroup({\n      class: 'telechart-navigator-series-group',\n      transform: `translate(0, ${this._offsetY}) scale(1 1)`,\n      mask: `url(#${this.chartMaskId})`\n    });\n  }\n\n  onRendererResize () {\n    super.onRendererResize();\n\n    this._updateNavigatorDimensions();\n    this._sliderUpdateNeeded = true;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return this._chartHeight;\n  }\n\n  /**\n   * @return {number}\n   */\n  get navigatorWidth () {\n    return this.chartWidth - this._paddingLeftRight * 2;\n  }\n\n  /**\n   * @return {number}\n   */\n  get navigatorHeight () {\n    return this._chartHeight + this._paddingTopBottom * 2;\n  }\n\n  /**\n   * @private\n   */\n  _updateNavigatorDimensions () {\n    const overlayLeftScale = this._navigatorRange[ 0 ];\n    const overlayRightScale = ( 1 - this._navigatorRange[ 1 ] );\n    const navigatorWidth = this.navigatorWidth;\n\n    this._overlayLeftWidth = navigatorWidth * overlayLeftScale;\n    this._overlayRightWidth = navigatorWidth * overlayRightScale;\n    this._sliderWidth = navigatorWidth - this._overlayLeftWidth - this._overlayRightWidth;\n  }\n\n  /**\n   * @private\n   */\n  _createNavigatorGroup () {\n    const offsetY = this._offsetY - this._paddingTopBottom;\n\n    this._navigatorGroup = this.renderer.createGroup({\n      class: 'telechart-navigator',\n      transform: `translate(${this._paddingLeftRight}, ${offsetY}) scale(1 1)`,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _createOverlays () {\n    this._overlayLeft = this.renderer.createRect(this._overlayLeftWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-overlay',\n      x: 0,\n      y: 0,\n      style: cssText({\n        fill: this._overlayColor\n      })\n    }, this._navigatorGroup);\n\n    this._overlayRight = this.renderer.createRect(this._overlayRightWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-overlay',\n      x: this.navigatorWidth - this._overlayRightWidth,\n      y: 0,\n      style: cssText({\n        fill: this._overlayColor\n      })\n    }, this._navigatorGroup);\n\n    // creating slider\n    this._sliderGroup = this.renderer.createGroup({\n      class: 'telechart-navigator-slider-group',\n      transform: `translate(${this._overlayLeftWidth}, 0) scale(1 1)`,\n      fill: 'none'\n    }, [], this._navigatorGroup);\n\n    this._slider = this.renderer.createRect(this._sliderWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-slider',\n      x: 0,\n      y: 0,\n      fill: 'rgba(163, 196, 220, 0.47)'\n    }, this._sliderGroup);\n\n    this._sliderControllerLeft = this.renderer.createRect(this._sliderControllerWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-slider-controller left',\n      x: -this._sliderControllerOffset,\n      y: 0,\n      fill: 'rgba(255,255,255,.0001)'\n    }, this._sliderGroup);\n\n    this._sliderControllerRight = this.renderer.createRect(this._sliderControllerWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-slider-controller right',\n      x: this._sliderWidth - this._sliderControllerWidth + this._sliderControllerOffset,\n      y: 0,\n      fill: 'rgba(255,255,255,.0001)'\n    }, this._sliderGroup);\n\n    // creating mask\n    const maskId = `telechart-navigator-slider-mask-${this.id}`;\n    this._sliderMask = this.renderer.createMask({\n      id: maskId\n    }, [], this.defs);\n\n    this._sliderMaskOuter = this.renderer.createRect(this._sliderWidth, this.navigatorHeight, {\n      x: 0,\n      y: 0,\n      fill: 'white'\n    }, this._sliderMask);\n\n    this._sliderMaskInner = this.renderer.createRect(this._sliderWidth - 2 * this._sliderLeftRightBorderWidth, this.navigatorHeight - 2, {\n      x: this._sliderLeftRightBorderWidth,\n      y: 1,\n      fill: 'black'\n    }, this._sliderMask);\n\n    // connect mask to slider\n    setAttributeNS( this._sliderGroup, 'mask', `url(#${maskId})`, null );\n  }\n\n  /**\n   * @private\n   */\n  _updateNavigatorElements () {\n    // left overlay\n    setAttributeNS( this._overlayLeft, 'width', this._overlayLeftWidth, null );\n\n    // right overlay\n    setAttributeNS( this._overlayRight, 'width', this._overlayRightWidth, null );\n    setAttributeNS( this._overlayRight, 'x', this.navigatorWidth - this._overlayRightWidth, null );\n\n    // slider\n    setAttributeNS( this._sliderGroup, 'transform', `translate(${this._overlayLeftWidth}, 0) scale(1 1)`, null );\n    setAttributeNS( this._slider, 'width', this._sliderWidth, null );\n    setAttributeNS( this._sliderControllerRight, 'x', this._sliderWidth - this._sliderControllerWidth + this._sliderControllerOffset, null );\n\n    // mask\n    setAttributeNS( this._sliderMaskOuter, 'width', this._sliderWidth, null );\n    setAttributesNS(this._sliderMaskInner, {\n      width: Math.max( 0, this._sliderWidth - 2 * this._sliderLeftRightBorderWidth ),\n      height: this.navigatorHeight - 2,\n      x: this._sliderLeftRightBorderWidth\n    });\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @param {boolean} preserveDistance\n   * @return {Array<number>}\n   * @private\n   */\n  _clampNavigationRange (min = 0, max = 1, preserveDistance = false) {\n    const preservedDistance = clampNumber( max - min, this._navigatorMinRangeDistance, 1 );\n\n    min = clampNumber( min, 0, 1 );\n    max = clampNumber( max, 0, 1 );\n\n    const isRightController = this._navigatorChangeDirection === 'right';\n\n    const distance = max - min;\n    const minDistance = preserveDistance\n      ? preservedDistance\n      : this._navigatorMinRangeDistance;\n\n    if (distance < minDistance) {\n      if (isRightController) {\n        if (max - minDistance >= 0) {\n          min = max - minDistance;\n        } else {\n          min = 0;\n          max = minDistance;\n        }\n      } else {\n        if (min + minDistance <= 1) {\n          max = min + minDistance;\n        } else {\n          max = 1;\n          min = 1 - minDistance;\n        }\n      }\n    }\n\n    return [ min, max ];\n  }\n\n  /**\n   * @private\n   */\n  _createSliderEventsListeners () {\n    // slider\n    const touchStartListener = this._onSliderTouchStart.bind( this );\n    const touchMoveListener = this._onSliderTouchMove.bind( this );\n    const mouseDownListener = this._onSliderMouseDown.bind( this );\n\n    this._slider.addEventListener( 'touchstart', touchStartListener, passiveIfSupported );\n    this._slider.addEventListener( 'touchmove', touchMoveListener, passiveIfSupported );\n\n    this._slider.addEventListener( 'mousedown', mouseDownListener );\n\n    // slider controllers\n    // left\n    const controllerLeftTouchStartListener = this._onSliderControllerTouchStart.bind( this, 'left' );\n    const controllerLeftTouchMoveListener = this._onSliderControllerTouchMove.bind( this );\n    const controllerLeftMouseDownListener = this._onSliderControllerMouseDown.bind( this, 'left' );\n\n    //right\n    const controllerRightTouchStartListener = this._onSliderControllerTouchStart.bind( this, 'right' );\n    const controllerRightTouchMoveListener = this._onSliderControllerTouchMove.bind( this );\n    const controllerRightMouseDownListener = this._onSliderControllerMouseDown.bind( this, 'right' );\n\n    // left\n    this._sliderControllerLeft.addEventListener( 'touchstart', controllerLeftTouchStartListener, passiveIfSupported );\n    this._sliderControllerLeft.addEventListener( 'touchmove', controllerLeftTouchMoveListener, passiveIfSupported );\n    this._sliderControllerLeft.addEventListener( 'mousedown', controllerLeftMouseDownListener );\n\n    // right\n    this._sliderControllerRight.addEventListener( 'touchstart', controllerRightTouchStartListener, passiveIfSupported );\n    this._sliderControllerRight.addEventListener( 'touchmove', controllerRightTouchMoveListener, passiveIfSupported );\n    this._sliderControllerRight.addEventListener( 'mousedown', controllerRightMouseDownListener );\n\n    // overlays\n    const overlayLeftClickListener = this._onSliderOverlayClick.bind( this, 'left' );\n    const overlayRightClickListener = this._onSliderOverlayClick.bind( this, 'right' );\n\n    this._overlayLeft.addEventListener( 'click', overlayLeftClickListener );\n    this._overlayRight.addEventListener( 'click', overlayRightClickListener );\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderTouchStart (ev) {\n    const {\n      pageX, pageY\n    } = ev.targetTouches[ 0 ];\n\n    this._sliderStartEvent = {\n      pageX, pageY\n    };\n\n    this._sliderStartPosition = this._navigatorRange.slice();\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderTouchMove (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    const {\n      pageX: startPageX\n    } = this._sliderStartEvent;\n\n    const {\n      pageX = 0\n    } = targetTouch;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n\n    const startPosition = this._sliderStartPosition;\n\n    let [ min, max ] = this._clampNavigationRange(\n      startPosition[ 0 ] - positionDelta,\n      startPosition[ 1 ] - positionDelta,\n      true\n    );\n\n    this.setNavigationRange( min, max );\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderMouseDown (ev) {\n    const {\n      pageX, pageY\n    } = ev;\n\n    this._sliderStartEvent = {\n      pageX, pageY\n    };\n\n    this._sliderStartPosition = this._navigatorRange.slice();\n\n    const sliderMouseMoveListener = this._onSliderMouseMove.bind( this );\n\n    const lastBodyStyle = document.body.getAttribute( 'style' );\n    setAttributeNS( document.body, 'style', cssText({ cursor: 'grabbing' }), null );\n    setAttributeNS( this._slider, 'style', cssText({ cursor: 'grabbing' }), null );\n\n    document.addEventListener('mousemove', sliderMouseMoveListener);\n    document.addEventListener('mouseup', ev => {\n      if (lastBodyStyle) {\n        setAttributeNS( document.body, 'style', lastBodyStyle, null );\n      } else {\n        document.body.removeAttribute( 'style' );\n      }\n      setAttributeNS( this._slider, 'style', cssText({ cursor: 'grab' }), null );\n\n      document.removeEventListener( 'mousemove', sliderMouseMoveListener )\n    });\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderMouseMove (ev) {\n    ev.preventDefault();\n\n    const {\n      pageX: startPageX\n    } = this._sliderStartEvent;\n\n    const {\n      pageX = 0\n    } = ev;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n\n    const startPosition = this._sliderStartPosition;\n\n    let [ min, max ] = this._clampNavigationRange(\n      startPosition[ 0 ] - positionDelta,\n      startPosition[ 1 ] - positionDelta,\n      true\n    );\n\n    this.setNavigationRange( min, max );\n  }\n\n  /**\n   * @param {string} direction\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderControllerTouchStart (direction, ev) {\n    const {\n      pageX, pageY\n    } = ev.targetTouches[ 0 ];\n\n    this._sliderControllerStartPosition = this._navigatorRange.slice();\n    this._navigatorChangeDirection = direction;\n    this._sliderControllerStartEvent = {\n      pageX, pageY\n    };\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderControllerTouchMove (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    const {\n      pageX: startPageX\n    } = this._sliderControllerStartEvent;\n\n    const {\n      pageX = 0\n    } = targetTouch;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n    const startPosition = this._sliderControllerStartPosition;\n    const isLeft = this._navigatorChangeDirection === 'left';\n\n    let [ min, max ] = [\n      startPosition[ 0 ] - ( isLeft ? positionDelta : 0 ),\n      startPosition[ 1 ] - ( !isLeft ? positionDelta : 0 )\n    ];\n\n    [ min, max ] = this._clampNavigationRange( min, max );\n\n    if (isLeft) {\n      this._sliderControllerStartPosition[ 1 ] = max;\n    } else {\n      this._sliderControllerStartPosition[ 0 ] = min;\n    }\n\n    this.setNavigationRange( min, max );\n  }\n\n  /**\n   * @param {string} direction\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderControllerMouseDown (direction, ev) {\n    const {\n      pageX, pageY\n    } = ev;\n\n    this._sliderControllerStartPosition = this._navigatorRange.slice();\n    this._navigatorChangeDirection = direction;\n    this._sliderControllerStartEvent = {\n      pageX, pageY\n    };\n\n    const mouseMoveListener = this._onSliderControllerMouseMove.bind( this );\n\n    const lastBodyStyle = document.body.getAttribute( 'style' );\n    setAttributeNS( document.body, 'style', cssText({ cursor: 'e-resize' }), null );\n\n    document.addEventListener('mousemove', mouseMoveListener);\n    document.addEventListener('mouseup', ev => {\n      if (lastBodyStyle) {\n        setAttributeNS( document.body, 'style', lastBodyStyle, null );\n      } else {\n        document.body.removeAttribute( 'style' );\n      }\n\n      document.removeEventListener( 'mousemove', mouseMoveListener )\n    });\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderControllerMouseMove (ev) {\n    ev.preventDefault();\n\n    const {\n      pageX: startPageX\n    } = this._sliderControllerStartEvent;\n\n    const {\n      pageX = 0\n    } = ev;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n    const startPosition = this._sliderControllerStartPosition;\n    const isLeft = this._navigatorChangeDirection === 'left';\n\n    let [ min, max ] = [\n      startPosition[ 0 ] - ( isLeft ? positionDelta : 0 ),\n      startPosition[ 1 ] - ( !isLeft ? positionDelta : 0 )\n    ];\n\n    [ min, max ] = this._clampNavigationRange( min, max );\n\n    if (isLeft) {\n      this._sliderControllerStartPosition[ 1 ] = max;\n    } else {\n      this._sliderControllerStartPosition[ 0 ] = min;\n    }\n\n    this.setNavigationRange( min, max );\n  }\n\n  /**\n   * @param {string} direction\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderOverlayClick (direction, ev) {\n    const position = this._resolveNavigatorPosition( ev );\n    const halfDistance = ( this._navigatorRange[ 1 ] - this._navigatorRange[ 0 ] ) * .5;\n\n    const [ min, max ] = this._clampNavigationRange(\n      position - halfDistance,\n      position + halfDistance,\n      true\n    );\n\n    this.animateNavigationRangeTo( min, max );\n  }\n\n  /**\n   * @param {number} pageX\n   * @param {number} pageY\n   * @private\n   */\n  _resolveNavigatorPosition ({ pageX, pageY }) {\n    const { left } = getElementOffset( this._navigatorGroup );\n    return ( pageX - left ) / this.navigatorWidth;\n  }\n}\n","import './style/telechart.scss';\n\nimport { AnimationSource, AnimationSourceEvents } from './core/animation/AnimationSource';\nimport { SvgRenderer } from \"./core/SvgRenderer\";\nimport { Chart } from './core/chart/Chart';\nimport { Clock } from './core/misc/Clock';\nimport { NavigatorChart } from './core/chart/NavigatorChart';\nimport { ChartEvents } from './core/chart/events/ChartEvents';\n\nimport {\n  addClass,\n  interpolateThemeClass,\n  removeClass,\n  resolveElement,\n  ChartThemes,\n  setAttributesNS,\n  cssText, createElement, ROOT_CLASS_NAME\n} from \"./utils\";\nimport { NavigatorChartEvents } from './core/chart/events/NavigatorChartEvents';\n\nexport class Telechart {\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _rootElement = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {NavigatorChart}\n   * @private\n   */\n  _navigatorChart = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _themeName = ChartThemes.default;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _title = '';\n\n  /**\n   * @type {SVGTextElement}\n   * @private\n   */\n  _titleElement = null;\n\n  /**\n   * @type {Clock}\n   * @private\n   */\n  _clock = null;\n\n  /**\n   * @type {AnimationSource}\n   * @private\n   */\n  _animationSource = null;\n\n  /**\n   * @static\n   * @param {Element | string} mountTo Element or selector\n   * @param {Object} options\n   */\n  static create (mountTo, options = {}) {\n    const chart = new Telechart();\n\n    chart.setOptions( options );\n    chart.mount( resolveElement( mountTo ) );\n    chart.initialize();\n\n    chart.firstRender();\n\n    return chart;\n  }\n\n  /**\n   * @param {Object} options\n   */\n  setOptions (options = {}) {\n    this._options = options;\n  }\n\n  /**\n   * @param {Element} parent\n   */\n  mount (parent) {\n    const root = createElement('div', {\n      attrs: {\n        class: ROOT_CLASS_NAME\n      }\n    });\n\n    parent.appendChild( root );\n\n    this._rootElement = root;\n    this._renderer = new SvgRenderer( root );\n  }\n\n  /**\n   * Initialize the chart\n   */\n  initialize () {\n    this.setTheme( this._options.theme || ChartThemes.default );\n    this.setTitle( this._options.title );\n\n    // create components\n    this._createChart();\n    this._createNavigatorChart();\n    this._addEventsListeners();\n\n    // create animation loop\n    this._clock = new Clock();\n    this._animationSource = new AnimationSource( 60, 1 ); // fps, timeScale\n    this._animationSource.on(AnimationSourceEvents.UPDATE, deltaTime => {\n      this.update( deltaTime );\n    });\n\n    requestAnimationFrame(_ => {\n      this.animate();\n    });\n  }\n\n  /**\n   * Draws first frame\n   */\n  firstRender () {\n    this._chart.firstRender();\n    this._navigatorChart.firstRender();\n  }\n\n  /**\n   * Animation loop\n   */\n  animate () {\n    const deltaTime = this._clock.getDelta();\n    this._animationSource.update( deltaTime );\n\n    requestAnimationFrame(_ => this.animate());\n  }\n\n  /**\n   * Update loop\n   */\n  update (deltaTime) {\n    this._chart.update( deltaTime );\n    this._navigatorChart.update( deltaTime );\n  }\n\n  /**\n   * @param {string} themeName\n   */\n  setTheme (themeName) {\n    const rootElement = this._rootElement;\n\n    removeClass(\n      rootElement,\n      Object.keys( ChartThemes )\n        .map( interpolateThemeClass )\n    );\n\n    addClass(\n      rootElement,\n      interpolateThemeClass( themeName )\n    );\n\n    this._themeName = themeName;\n  }\n\n  /**\n   * @param {string} title\n   */\n  setTitle (title) {\n    this._title = title;\n\n    !this._titleElement\n      ? this._createTitle( title )\n      : this._updateTitle( title );\n  }\n\n  /**\n   * Destroys the chart instance\n   */\n  destroy () {\n    this._renderer && this._renderer.destroy();\n    this._rootElement = null;\n    this._renderer = null;\n  }\n\n  /**\n   * @return {string}\n   */\n  get themeName () {\n    return this._themeName;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _createTitle (title = this._options.title) {\n    if (!title) {\n      return;\n    }\n\n    const text = this._renderer.createText(title, {\n      class: 'telechart-title',\n      x: 16,\n      y: 36,\n      textAnchor: 'start',\n      style: cssText({\n        opacity: 0\n      })\n    });\n\n    setTimeout(_ => {\n      setAttributesNS(text, {\n        style: cssText({\n          opacity: 1\n        })\n      });\n    }, 200);\n\n    this._titleElement = text;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _updateTitle (title) {\n    if (!this._titleElement) {\n      return;\n    }\n    const tspan = this._titleElement.querySelector( 'tspan' );\n    tspan.textContent = title;\n  }\n\n  /**\n   * @private\n   */\n  _createChart () {\n    this._chart = new Chart(\n      this._renderer,\n      this._options\n    );\n\n    this._chart.initialize();\n  }\n\n  /**\n   * @private\n   */\n  _createNavigatorChart () {\n    this._navigatorChart = new NavigatorChart(\n      this._renderer,\n      this._options\n    );\n\n    this._navigatorChart.initialize();\n  }\n\n  /**\n   * @private\n   */\n  _addEventsListeners () {\n    this._chart.on(ChartEvents.SERIES_VISIBLE_CHANGE, line => {\n      this._navigatorChart.toggleSeriesInvisible( line.label );\n    });\n\n    this._navigatorChart.on(NavigatorChartEvents.RANGE_CHANGED, range => {\n      this._chart.setNavigationRange( ...range );\n    });\n\n    this._navigatorChart.on(NavigatorChartEvents.ANIMATE_RANGE, range => {\n      this._chart.animateNavigationRangeTo( ...range );\n    });\n  }\n}\n","export * from './Telechart';\n"],"sourceRoot":""}