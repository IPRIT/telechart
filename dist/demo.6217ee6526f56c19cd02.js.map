{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/base.js","webpack:///./src/utils/text.js","webpack:///./src/utils/dom.js","webpack:///./src/utils/themes.js","webpack:///./src/utils/algorithms.js","webpack:///./src/utils/index.js","webpack:///./src/utils/animation.js","webpack:///./src/core/misc/EventEmitter.js","webpack:///./src/core/animation/AnimationSource.js","webpack:///./src/core/SvgRenderer.js","webpack:///./src/core/chart/ChartTypes.js","webpack:///./src/core/point/Point.js","webpack:///./src/core/series/Series.js","webpack:///./src/core/chart/Chart.js","webpack:///./src/core/misc/Clock.js","webpack:///./src/Telechart.js","webpack:///./src/index.js","webpack:///./demo/telechart-demo.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","objectEachKey","fn","arguments","length","undefined","keys","forEach","clampNumber","min","Infinity","max","_ref","Math","ensureNumber","Number","isNaN","isDate","Date","valueOf","capitalize","text","String","toUpperCase","substr","cssText","styleObject","reduce","css","prop","concat","camelToKebabCase","toLowerCase","replace","parseQueryString","href","queryString","split","slice","map","part","keyValue","result","obj","assign","createElement","tagName","options","children","element","document","createElementNS","attrs","useNS","setAttributesNS","attrsNS","setAttributes","Array","isArray","node","innerHTML","appendChild","resolveElement","elementOrSelector","querySelector","getElementWidth","innerWidth","clientWidth","camelCaseAttrWhiteList","attr","includes","setAttribute","setAttributeNS","hasClass","className","classList","contains","RegExp","test","addClass","_element$classList","classNames","add","apply","_toConsumableArray","trim","removeClass","_element$classList2","remove","existingClasses","classesToDelete","Set","has","ROOT_CLASS_NAME","interpolateThemeClass","themeName","ChartThemes","default","dark","ChartThemesColors","arrayMinMax","array","_arrayMinMaxIndexes2","_slicedToArray","startIndex","endIndex","minIndex","maxIndex","arrayMinMaxIndexes","binarySearchIndexes","order","left","right","mid","__webpack_exports__","EventEmitter","_classCallCheck","this","eventName","_len","args","_key","_fireEvent","cb","context","addEventListener","addEventListenerOnce","_subscribeEvent","_this","listener","_len2","_key2","removeEventListener","_eventListeners","listenerIndex","findIndex","splice","_allocateEvent","push","eventListeners","_len3","_key3","_eventListeners$i","AnimationSourceEvents","AnimationSource","_EventEmitter","updatesPerSecond","timeScale","AnimationSource_classCallCheck","_getPrototypeOf","AnimationSource_defineProperty","_assertThisInitialized","_updatesPerSecond","_updateEach","FRAMES_PER_SECOND","_timeScale","_inherits","deltaTime","_paused","_timeElapsed","_updateInvokes","_callUpdate","_lastUpdateAt","removeAllListeners","emit","set","telechartTitle","TELECHART_NAME","TELECHART_VERSION","TELECHART_AUTHOR","INTERNAL_AUTOINCREMENT","SvgRenderer","contextElement","SvgRenderer_classCallCheck","SvgRenderer_getPrototypeOf","SvgRenderer_defineProperty","SvgRenderer_assertThisInitialized","_parentContainer","_init","SvgRenderer_inherits","parent","_svgContainer","group","NS","tspan","textElement","defs","pathText","pathElement","updatingAttrs","width","height","rectElement","selector","from","querySelectorAll","_detachEvents","_clearParentContainer","_isInitialized","_updateDimensions","_createSvgContainer","_insertSvgContainer","createDesc","_attachEvents","Error","xmlns","version","_width","_height","viewBox","class","_minWidth","_minHeight","ev","_attachResizeListener","_detachResizeListener","_resizeListener","_onResize","window","_id","join","ChartTypes","POINT_AUTOINCREMENT","Point","x","y","Point_classCallCheck","Point_defineProperty","_x","_y","pointType","_type","setX","setY","addX","addY","svgX","_svgX","svgY","_svgY","Series","renderer","settings","Series_classCallCheck","Series_getPrototypeOf","Series_defineProperty","Series_assertThisInitialized","_renderer","_parent","_settings","_parseSettings","initialize","Series_inherits","_createPoints","_updateGlobalExtremes","_addEvents","_pathElement","updateSvgCoordinates","_pathText","_visible","setInvisible","setVisible","range","rangeIndexes","_viewportRange","_viewportRangeIndexes","_viewportDistance","_updateViewportPixel","_updateLocalExtremes","_this$_viewportRangeI","Series_slicedToArray","_viewportPoints","_points","currentYScale","desiredYScale","_currentYScale","_localYScale","console","log","_projectXToSvg","_this$_settings","xAxis","yAxis","label","color","type","_xAxis","_yAxis","_label","_color","_name","_chartWidth","_chartHeight","_seriesOptions","_arrayMinMax2","minValue","maxValue","_globalMinY","_globalMaxY","_this$_viewportRangeI2","rangeStartIndex","rangeEndIndex","_arrayMinMax4","_localMinY","_localMaxY","_toRelativeX","_viewportPixel","_this2","on","_","_onRendererResize","Chart","Chart_classCallCheck","Chart_getPrototypeOf","Chart_defineProperty","Chart_assertThisInitialized","_options","_initialize","Chart_inherits","_eachSeries","line","firstRender","minX","maxX","globalMinX","globalMaxX","getTime","padding","_updateViewportIndexes","setViewportRange","updateViewportPoints","_updateExtremes","_updateSeriesScale","_createSeriesGroup","_createSeries","_setInitialRange","_seriesGroup","createGroup","transform","data","series","_ref$seriesOptions","seriesOptions","columns","types","colors","names","xAxisIndex","column","yAxes","shift","chartWidth","chartHeight","_series","_this$_viewportRange","Chart_slicedToArray","rangeStart","rangeEnd","_binarySearchIndexes2","minUpperIndex","_binarySearchIndexes4","maxLowerIndex","localMinY","localMaxY","globalMinY","globalMaxY","isVisible","_computeYScale","_this3","setScale","_this4","_onSeriesVisibleChange","difference","initialViewport","floor","viewportPadding","setRange","globalHeight","globalExtremeDifference","localHeight","localExtremeDifference","Clock","Clock_classCallCheck","_lastUpdateMs","now","delta","performance","Telechart","Telechart_classCallCheck","Telechart_defineProperty","mountTo","chart","setOptions","mount","root","_rootElement","setTheme","theme","setTitle","title","_createChart","_clock","_animationSource","update","requestAnimationFrame","animate","_chart","getDelta","rootElement","_themeName","_title","_titleElement","_updateTitle","_createTitle","destroy","createText","textAnchor","style","opacity","setTimeout","Telechart_Telechart","chartData","sourceData","query","location","search","initialTheme","container","start","grouping","pixels","updatePageTheme","themeButton","body","themeColor","metaTheme","content","head","newTheme"],"mappings":"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","file":"demo.6217ee6526f56c19cd02.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/**\n * @param {*} object\n * @param {Function} fn\n */\nexport function objectEachKey (object, fn = () => {}) {\n  Object.keys( object ).forEach( fn );\n}\n\n/**\n * @param {*} object\n * @param {Function} fn\n * @return {*[]}\n */\nexport function objectMapKey (object, fn = () => {}) {\n  return Object.keys( object ).map( fn );\n}\n\n/**\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nexport function clampNumber (value, min = -Infinity, max = Infinity) {\n  if (min > max) {\n    [ min, max ] = [ max, min ];\n  }\n  return Math.min(\n    Math.max(ensureNumber(value), min),\n    max\n  );\n}\n\n/**\n * @param {*} value\n * @return {number}\n */\nexport function ensureNumber (value) {\n  value = Number(value);\n  if (Number.isNaN(value)) {\n    return 0;\n  }\n  return value;\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nexport function isObject (value) {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * @param {Date|*} value\n * @return {boolean}\n */\nexport function isDate (value) {\n  return value instanceof Date && !isNaN( value.valueOf() );\n}\n","/**\n * @param {string} text\n * @return {string}\n */\nexport function capitalize (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return text[ 0 ].toUpperCase() + text.substr(1);\n}\n\n/**\n * @param {Object} styleObject\n * @returns {string}\n */\nexport function cssText (styleObject) {\n  return Object.keys( styleObject ).reduce((css, prop) => {\n    return `${css ? css + ' ' : ''}${camelToKebabCase( prop )}: ${styleObject[ prop ]};`;\n  }, '');\n}\n\n/**\n * @param {string} text\n * @returns {string}\n */\nexport function camelToKebabCase (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return (\n    text[ 0 ].toLowerCase() + text.substr( 1 )\n  ).replace( /([A-Z])/g, '-$1' ).toLowerCase();\n}\n\n/**\n * @param {string} href\n * @return {*}\n */\nexport function parseQueryString (href) {\n  const queryString = href.split('?').slice(1);\n  if (!queryString.length) {\n    return {};\n  }\n\n  return queryString[ 0 ].split( '&' ).map(part => {\n    const keyValue = part.split( '=' );\n    return {\n      [keyValue[ 0 ]]: keyValue[ 1 ]\n    };\n  }).reduce((result, obj) => {\n    return Object.assign(result, obj);\n  })\n}\n","import { objectEachKey } from \"./base\";\nimport { camelToKebabCase } from './text';\n\n/**\n * @param {string} tagName\n * @param {Object} options\n * @param {Array|*} children\n * @param {string|*} ns\n * @return {Element}\n */\nexport function createElement (tagName, options = {}, children = [], ns = null) {\n  const element = !ns\n    ? document.createElement( tagName )\n    : document.createElementNS( ns, tagName );\n\n  if (options.attrs) {\n    !options.useNS\n      ? setAttributes( element, options.attrs )\n      : setAttributesNS( element, options.attrs, options.attrsNS || null );\n  }\n\n  if (children || Array.isArray( children )) {\n    children = [].concat( children );\n    children.forEach(node => {\n      if (typeof node === 'string') {\n        element.innerHTML += node;\n      } else {\n        element.appendChild( node );\n      }\n    });\n  }\n\n  return element;\n}\n\n/**\n * @param {Element|string} elementOrSelector\n * @return {Element | null}\n */\nexport function resolveElement (elementOrSelector) {\n  if (typeof elementOrSelector !== 'string') {\n    return elementOrSelector;\n  }\n  return document.querySelector( elementOrSelector );\n}\n\n/**\n * @param {Element} element\n * @return {{top: number, left: number}}\n */\nexport function getElementOffset (element) {\n  if (!element) {\n    return { top: 0, left: 0 };\n  }\n\n  // Return zeros for disconnected and hidden (display: none) elements\n  // Support: IE <= 11 only\n  // Running getBoundingClientRect on a\n  // disconnected node in IE throws an error\n  if (element.getClientRects && !element.getClientRects().length) {\n    return { top: 0, left: 0 };\n  }\n\n  // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n  const rect = element.getBoundingClientRect();\n  const win = element.ownerDocument.defaultView;\n  return {\n    top: rect.top + win.pageYOffset,\n    left: rect.left + win.pageXOffset\n  };\n}\n\n/**\n * @param {Element} targetElement\n * @param {Element} relativeElement\n * @return {{ top: number, left: number }}\n */\nexport function getElementRelativeOffset (targetElement, relativeElement) {\n  const targetOffset = getElementOffset(targetElement);\n  const relativeOffset = getElementOffset(relativeElement);\n\n  return {\n    top: targetOffset.top - relativeOffset.top + relativeElement.scrollTop,\n    left: targetOffset.left - relativeOffset.left + relativeElement.scrollLeft\n  };\n}\n\n/**\n * @returns {number}\n */\nexport function getDocumentHeight () {\n  return Math.max(\n    document.body.scrollHeight,\n    document.documentElement.scrollHeight,\n    document.body.offsetHeight,\n    document.documentElement.offsetHeight,\n    document.body.clientHeight,\n    document.documentElement.clientHeight\n  );\n}\n\n/**\n * @returns {number}\n */\nexport function getWindowHeight () {\n  return window.innerHeight ||\n    (document.documentElement || document.body).clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementHeight (element) {\n  return element.innerHeight || element.clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementWidth (element) {\n  return element.innerWidth || element.clientWidth;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollHeight (element) {\n  return Math.max(\n    element.scrollHeight,\n    element.offsetHeight,\n    element.clientHeight\n  );\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollWidth (element) {\n  return Math.max(\n    element.scrollWidth,\n    element.offsetWidth,\n    element.clientWidth\n  );\n}\n\nconst camelCaseAttrWhiteList = [\n  'viewBox'\n];\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n */\nexport function setAttributes (element, attrs = {}) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttribute( attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n * @param {string | *} ns\n */\nexport function setAttributesNS (element, attrs = {}, ns = null) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttributeNS( ns, attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {string} className\n */\nexport function hasClass (element, className) {\n  if (element.classList) {\n    return element.classList.contains( className );\n  }\n  return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test( element.className );\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function addClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    return element.classList.add( ...classNames );\n  }\n\n  let className = element.className;\n\n  for (let i = 0; i < classNames.length; ++i) {\n    if (!hasClass( element, classNames[ i ] )) {\n      className += ` ${classNames[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function removeClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    return element.classList.remove( ...classNames );\n  }\n\n  let existingClasses = element.className.split( ' ' );\n  let classesToDelete = new Set( classNames );\n  let className = '';\n\n  for (let i = 0; i < existingClasses.length; ++i) {\n    if (!classesToDelete.has( existingClasses[ i ] )) {\n      className += ` ${existingClasses[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n","export const ROOT_CLASS_NAME = 'telechart-root';\n\n/**\n * @param {string} themeName\n * @returns {string}\n */\nexport function interpolateThemeClass (themeName) {\n  return `${ROOT_CLASS_NAME}_theme_${themeName}`;\n}\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemes = {\n  default: 'default',\n  dark: 'dark'\n};\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemesColors = {\n  default: '#ffffff',\n  dark: '#242F3E'\n};\n","/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMinIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return minIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMin (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMinIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMaxIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n  }\n  return maxIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMax (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMaxIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMaxIndexes (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return [ minIndex, maxIndex ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMax (array, startIndex = 0, endIndex = array.length - 1) {\n  const [ minIndex, maxIndex ] = arrayMinMaxIndexes( array, startIndex, endIndex );\n  return [\n    array[ minIndex ],\n    array[ maxIndex ],\n  ];\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arraySum (array) {\n  let length = array.length;\n  let sum = 0;\n\n  while (length--) {\n    sum += array[ length ];\n  }\n\n  return sum;\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arrayAvg (array) {\n  let length = array.length;\n  let result = arraySum( array );\n\n  if (length) {\n    result = result / length;\n  }\n\n  return result;\n}\n\n/**\n * Finds boundary indexes in an array of numbers\n *\n * @param {Array<number>} array\n * @param {number} value\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchIndexes (array, value, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ] === value) {\n    left = right;\n  } else if (array[ left ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n\n/**\n * Finds boundary indexes in an array of objects\n *\n * @param {Array<Object>} array\n * @param {number} value\n * @param {string} key\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchObjectIndexes (array, value, key, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ][ key ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ][ key ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ][ key ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ][ key ] === value) {\n    left = right;\n  } else if (array[ left ][ key ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n","export * from './constants';\nexport * from './animation';\nexport * from './base';\nexport * from './browser';\nexport * from './dom';\nexport * from './events';\nexport * from './svg';\nexport * from './text';\nexport * from './themes';\nexport * from './algorithms';\n","export const FRAMES_PER_SECOND = 60;\nexport const FRAMES_DELTA_SEC = 1 / 60;\nexport const FRAMES_DELTA_MS = 1000 / 60;\n\n/**\n * @param {number} value\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warp (value, deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return value * warpRatio( deltaTime, framesDeltaSec );\n}\n\n/**\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warpRatio (deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return deltaTime / framesDeltaSec;\n}\n\n// linear\nexport const linear = t => t;\n// accelerating from zero velocity\nexport const easeInQuad = t => t * t;\n// decelerating to zero velocity\nexport const easeOutQuad = t => t * (2 - t);\n// acceleration until halfway, then deceleration\nexport const easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n// accelerating from zero velocity\nexport const easeInCubic = t => t * t * t;\n// decelerating to zero velocity\nexport const easeOutCubic = t => --t * t * t + 1;\n// acceleration until halfway, then deceleration\nexport const easeInOutCubic = t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n// accelerating from zero velocity\nexport const easeInQuart = t => t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuart = t => 1 - --t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuart = t => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t);\n// accelerating from zero velocity\nexport const easeInQuint = t => t * t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuint = t => 1 + --t * t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuint = t => t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n","/**\n * Simple event emitter for better performance and app size\n *\n * @author Alexander Belov\n */\nexport class EventEmitter {\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _eventListeners = {};\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   */\n  emit (eventName, ...args) {\n    this._fireEvent( eventName, ...args );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  on (eventName, cb, context = null) {\n    this.addEventListener( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  once (eventName, cb, context = null) {\n    this.addEventListenerOnce( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListener (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    this._subscribeEvent( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListenerOnce (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    const listener = (...args) => {\n      cb.apply( context, args );\n      this.removeEventListener( eventName, listener );\n    };\n\n    this.addEventListener( eventName, listener );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} listener\n   */\n  removeEventListener (eventName, listener) {\n    if (!this._eventListeners[ eventName ]) {\n      return;\n    }\n\n    const listenerIndex = this._eventListeners[ eventName ].findIndex(([ cb ]) => {\n      return listener === cb;\n    });\n\n    if (listenerIndex < 0) {\n      return;\n    }\n\n    this._eventListeners[ eventName ].splice( listenerIndex, 1 );\n  }\n\n  /**\n   * @param {string | *} eventName\n   */\n  removeAllListeners (eventName = null) {\n    if (!eventName) {\n      this._eventListeners = {};\n    } else if (this._eventListeners[ eventName ]) {\n      this._eventListeners[ eventName ] = null;\n      delete this._eventListeners[ eventName ];\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @private\n   */\n  _allocateEvent (eventName) {\n    this._eventListeners[ eventName ] = this._eventListeners[ eventName ] || []\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  _subscribeEvent (eventName, cb, context) {\n    this._allocateEvent( eventName );\n    this._eventListeners[ eventName ].push([ cb, context ]);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   * @private\n   */\n  _fireEvent (eventName, ...args) {\n    const eventListeners = this._eventListeners[ eventName ] || [];\n\n    for (let i = 0; i < eventListeners.length; ++i) {\n      const [ cb, context ] = eventListeners[ i ];\n      cb.apply( context, args );\n    }\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { FRAMES_PER_SECOND } from '../../utils';\n\nexport const AnimationSourceEvents = {\n  UPDATE: 'update'\n};\n\nexport class AnimationSource extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeElapsed = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateInvokes = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updatesPerSecond = 60;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateEach = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateAt = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _paused = false;\n\n  /**\n   * @param {number} updatesPerSecond\n   * @param {number} timeScale\n   */\n  constructor (updatesPerSecond = 60, timeScale = 1) {\n    super();\n\n    this._updatesPerSecond = Math.min( 60, Math.max( 1e-8, updatesPerSecond ) );\n    this._updateEach = FRAMES_PER_SECOND / this._updatesPerSecond;\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (this._paused) {\n      return;\n    }\n\n    this._timeElapsed += deltaTime;\n    this._updateInvokes++;\n\n    if (this._updateInvokes % this._updateEach < 1) {\n      this._callUpdate( (this._timeElapsed - this._lastUpdateAt) * this._timeScale );\n      this._lastUpdateAt = this._timeElapsed;\n    }\n  }\n\n  /**\n   * Disposes the instance\n   */\n  dispose () {\n    this._paused = true;\n    this.removeAllListeners();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._paused;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return !this._paused;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set timeScale (value) {\n    this._timeScale = value;\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _callUpdate (deltaTime) {\n    this.emit( AnimationSourceEvents.UPDATE, deltaTime );\n  }\n}\n","import { EventEmitter } from \"./misc/EventEmitter\";\nimport {\n  capitalize,\n  clampNumber,\n  createElement,\n  getElementWidth,\n  resolveElement,\n  setAttributes,\n  setAttributesNS\n} from \"../utils\";\n\nconst telechartTitle = `${capitalize( TELECHART_NAME )} ${TELECHART_VERSION} (c) ${TELECHART_AUTHOR}`;\n\nlet INTERNAL_AUTOINCREMENT = 1;\n\nexport class SvgRenderer extends EventEmitter {\n\n  static NS = 'http://www.w3.org/2000/svg';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = INTERNAL_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parentContainer = null;\n\n  /**\n   * @type {SVGElement}\n   * @private\n   */\n  _svgContainer = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minHeight = 400;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minWidth = 300;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _width = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _isInitialized = false;\n\n  /**\n   * @param {Element|string} contextElement\n   */\n  constructor (contextElement) {\n    super();\n\n    this._parentContainer = resolveElement( contextElement );\n    this._init();\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>} children\n   * @param {Element} parent\n   * @return {Element}\n   */\n  createGroup (attrs = {}, children = [], parent = this._svgContainer) {\n    const group = createElement('g', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Element} parent\n   * @return {SVGDescElement}\n   */\n  createDesc (text = '', parent = this._svgContainer) {\n    const group = createElement('desc', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGTextElement}\n   */\n  createText (text = '', attrs = {}, parent = this._svgContainer) {\n    const tspan = createElement('tspan', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n\n    const textElement = createElement('text', {\n      useNS: true,\n      attrs\n    }, tspan, SvgRenderer.NS);\n\n    parent.appendChild( textElement );\n\n    return textElement;\n  }\n\n  /**\n   * @param {Element[]} defs\n   * @param {Element} parent\n   * @return {SVGDefsElement}\n   */\n  createDefs (defs = [], parent = this._svgContainer) {\n    defs = [].concat( defs );\n\n    const element = createElement('defs', {\n      useNS: true\n    }, defs, SvgRenderer.NS);\n    parent.appendChild( element );\n\n    return element;\n  }\n\n  /**\n   * @param {string} pathText\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGPathElement}\n   */\n  createPath (pathText, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, { d: pathText });\n\n    const pathElement = createElement('path', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n    parent.appendChild( pathElement );\n\n    return pathElement;\n  }\n\n  /**\n   * @param {SVGPathElement} pathElement\n   * @param {Object} updatingAttrs\n   */\n  updatePath (pathElement, pathText, updatingAttrs = {}) {\n    updatingAttrs.d = pathText;\n    setAttributesNS( pathElement, updatingAttrs, null );\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   * @param {*} attrs\n   * @param {SVGElement | Element} parent\n   * @return {SVGRectElement}\n   */\n  createRect (width, height, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, {\n      width, height\n    });\n\n    const rectElement = createElement('rect', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( rectElement );\n\n    return rectElement;\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Element}\n   */\n  querySelector (selector) {\n    return this._svgContainer.querySelector( selector );\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Array<Element>}\n   */\n  querySelectorAll (selector) {\n    return Array.from( this._svgContainer.querySelectorAll( selector ) );\n  }\n\n  /**\n   * Destroy the renderer\n   */\n  destroy () {\n    this._detachEvents();\n    this._clearParentContainer();\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {Element}\n   */\n  get parentContainer () {\n    return this._parentContainer;\n  }\n\n  /**\n   * @return {SVGElement}\n   */\n  get svgContainer () {\n    return this._svgContainer;\n  }\n\n  /**\n   * @return {number}\n   */\n  get width () {\n    return this._width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get height () {\n    return this._height;\n  }\n\n  /**\n   * @return {string}\n   */\n  get viewBox () {\n    return [ 0, 0, this._width, this._height ].join( ' ' );\n  }\n\n  /**\n   * @private\n   */\n  _init () {\n    if (this._isInitialized) {\n      return;\n    }\n\n    this._updateDimensions();\n    this._svgContainer = this._createSvgContainer();\n    this._insertSvgContainer();\n\n    this.createDesc( telechartTitle );\n\n    this._attachEvents();\n\n    this._isInitialized = true;\n  }\n\n  /**\n   * @return {Element}\n   * @private\n   */\n  _createSvgContainer () {\n    const parentContainer = this._parentContainer;\n\n    if (!parentContainer) {\n      throw new Error( 'Parent container is not provided' );\n    }\n\n    return createElement('svg', {\n      useNS: false,\n      attrs: {\n        xmlns: SvgRenderer.NS,\n        version: '1.1',\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox,\n        class: 'telechart-render'\n      }\n    }, [], SvgRenderer.NS);\n  }\n\n  /**\n   * @private\n   */\n  _insertSvgContainer () {\n    this._clearParentContainer();\n    this._parentContainer.appendChild( this._svgContainer );\n  }\n\n  /**\n   * @private\n   */\n  _updateDimensions () {\n    this._width = clampNumber(\n      getElementWidth( this._parentContainer ),\n      this._minWidth\n    );\n    this._height = this._minHeight;\n\n    if (this._svgContainer) {\n      setAttributes(this._svgContainer, {\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  _clearParentContainer () {\n    // clears the child content\n    this._parentContainer.innerHTML = '';\n  }\n\n  /**\n   * @private\n   */\n  _onResize (ev) {\n    this.emit( 'resize', ev );\n    this._updateDimensions();\n  }\n\n  /**\n   * @private\n   */\n  _attachEvents () {\n    this._attachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _detachEvents () {\n    this._detachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _attachResizeListener () {\n    if (this._resizeListener) {\n      this._detachResizeListener();\n    }\n\n    this._resizeListener = this._onResize.bind( this );\n    window.addEventListener( 'resize', this._resizeListener );\n  }\n\n  /**\n   * @private\n   */\n  _detachResizeListener () {\n    if (!this._resizeListener) {\n      return;\n    }\n\n    window.removeEventListener( 'resize', this._resizeListener );\n    this._resizeListener = null;\n  }\n}\n","/**\n * @type {{x: string, line: string}}\n */\nexport const ChartTypes = {\n  x: 'x',\n  line: 'line'\n};\n","let POINT_AUTOINCREMENT = 1;\n\nexport class Point {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = POINT_AUTOINCREMENT++;\n\n  /**\n   * @enum 'point' | 'group'\n   * @type {string}\n   * @private\n   */\n  _type = 'point';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _x = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _y = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgY = 0;\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor (x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n  }\n\n  /**\n   * @param {string} pointType\n   */\n  setType (pointType = 'point') {\n    this._type = pointType;\n  }\n\n  /**\n   * @param {number} x\n   */\n  setX (x) {\n    this._x = x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  setY (y) {\n    this._y = y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  setXY (x, y) {\n    this.setX( x );\n    this.setY( y );\n  }\n\n  /**\n   * @param {number} x\n   */\n  addX (x) {\n    this._x += x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  addY (y) {\n    this._y += y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  addXY (x, y) {\n    this.addX( x );\n    this.addY( y );\n  }\n\n  /**\n   * @param {number} svgX\n   */\n  setSvgX (svgX) {\n    this._svgX = svgX;\n  }\n\n  /**\n   * @param {number} svgY\n   */\n  setSvgY (svgY) {\n    this._svgY = svgY;\n  }\n\n  /**\n   * @param {number} svgX\n   * @param {number} svgY\n   */\n  setSvgXY (svgX, svgY) {\n    this._svgX = svgX;\n    this._svgY = svgY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get x () {\n    return this._x;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get y () {\n    return this._y;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgX () {\n    return this._svgX;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgY () {\n    return this._svgY;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get type () {\n    return this._type;\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { arrayMinMax } from '../../utils';\nimport { Point } from '../point/Point';\n\nexport class Series extends EventEmitter {\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _group = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _pathText = null;\n\n  /**\n   * @type {SVGPathElement}\n   * @private\n   */\n  _pathElement = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parent = null;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _yAxis = [];\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _name = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _label = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _color = '#31a8dc';\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _visible = true;\n\n  /**\n   * @type {Array<Point>}\n   * @private\n   */\n  _points = [];\n\n  /**\n   * @type {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   * @private\n   */\n  _settings = {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _seriesOptions = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartWidth = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartHeight = null;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRange = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportDistance = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPixel = 0;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRangeIndexes = [];\n\n  /**\n   * @type {Array<Point | PointGroup>}\n   * @private\n   */\n  _viewportPoints = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentYScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localYScale = 1;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Element} parent\n   * @param {*} settings\n   */\n  constructor (renderer, parent, settings = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._parent = parent;\n    this._settings = settings;\n    this._parseSettings();\n\n    this.initialize();\n  }\n\n  /**\n   * Initializes series with options\n   */\n  initialize () {\n    this._createPoints();\n    this._updateGlobalExtremes();\n    this._addEvents();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n  }\n\n  /**\n   * Creates path\n   */\n  firstRender () {\n    if (this._pathElement) {\n      return;\n    }\n\n    // todo: create path into group and then append it to parent\n    this.updateSvgCoordinates();\n  }\n\n  /**\n   * @param {string} pathText\n   */\n  setPathText (pathText) {\n    this._pathText = pathText;\n  }\n\n  /**\n   * @param {SVGPathElement} pathElement\n   */\n  setPathElement (pathElement) {\n    this._pathElement = pathElement;\n  }\n\n  /**\n   * Shows series on the chart\n   */\n  setVisible () {\n    this._visible = true;\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Hides series from the chart\n   */\n  setInvisible () {\n    this._visible = false;\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Toggles series\n   */\n  toggleVisible () {\n    this._visible\n      ? this.setInvisible()\n      : this.setVisible();\n  }\n\n  /**\n   * @param {Array<number>} range\n   * @param {Array<number>} rangeIndexes\n   */\n  setViewportRange (range, rangeIndexes) {\n    this._viewportRange = range;\n    this._viewportRangeIndexes = rangeIndexes;\n    this._viewportDistance = this._viewportRange[ 1 ] - this._viewportRange[ 0 ];\n\n    // pre-compute pixel to increase performance\n    this._updateViewportPixel();\n\n    // update minY and maxY local values\n    this._updateLocalExtremes();\n  }\n\n  /**\n   * Updates points array of viewport\n   */\n  updateViewportPoints () {\n    const [ startIndex, endIndex ] = this._viewportRangeIndexes;\n    this._viewportPoints = this._points.slice( startIndex, endIndex + 1 );\n  }\n\n  /**\n   * @param {number} currentYScale\n   * @param {number} desiredYScale\n   */\n  setScale (currentYScale, desiredYScale) {\n    this._currentYScale = currentYScale;\n    this._localYScale = desiredYScale;\n  }\n\n  updateSvgCoordinates () {\n    console.log( this._projectXToSvg( this._viewportPoints[0].x ) );\n    console.log( this._projectXToSvg( this._viewportPoints[10].x ) );\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get xAxis () {\n    return this._xAxis;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get yAxis () {\n    return this._yAxis;\n  }\n\n  /**\n   * @return {string}\n   */\n  get pathText () {\n    return this._pathText;\n  }\n\n  /**\n   * @return {SVGPathElement}\n   */\n  get pathElement () {\n    return this._pathElement;\n  }\n\n  /**\n   * @return {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   */\n  get settings () {\n    return this._settings;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isVisible () {\n    return this._visible;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMinY () {\n    return this._globalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMaxY () {\n    return this._globalMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @private\n   */\n  _parseSettings () {\n    const {\n      xAxis, yAxis,\n      label, type,\n      color, name,\n      width, height,\n      options\n    } = this._settings;\n\n    this._xAxis = xAxis;\n    this._yAxis = yAxis;\n    this._label = label;\n    this._color = color;\n    this._name = name;\n\n    this._chartWidth = width;\n    this._chartHeight = height;\n\n    this._seriesOptions = options;\n  }\n\n  /**\n   * @private\n   */\n  _createPoints () {\n    const xAxis = this._xAxis;\n    const yAxis = this._yAxis;\n\n    for (let i = 0; i < xAxis.length; ++i) {\n      this._points.push(\n        new Point( xAxis[ i ], yAxis[ i ] )\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateGlobalExtremes () {\n    const [ minValue, maxValue ] = arrayMinMax( this._yAxis );\n\n    this._globalMinY = Math.min( 0, minValue );\n    this._globalMaxY = maxValue;\n  }\n\n  /**\n   * @private\n   */\n  _updateLocalExtremes () {\n    const [ rangeStartIndex, rangeEndIndex ] = this._viewportRangeIndexes;\n\n    const [ minValue, maxValue ] = arrayMinMax(\n      this._yAxis, rangeStartIndex, rangeEndIndex\n    );\n\n    this._localMinY = Math.min( 0, minValue );\n    this._localMaxY = maxValue;\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   * @private\n   */\n  _projectXToSvg (x) {\n    return this._toRelativeX( x ) / this._viewportPixel;\n  }\n\n  /**\n   * @private\n   */\n  _addEvents () {\n    this._renderer.on('resize', _ => {\n      this._onRendererResize();\n    });\n  }\n\n  /**\n   * @private\n   */\n  _onRendererResize () {\n    this._updateDimensions();\n  }\n\n  /**\n   * @private\n   */\n  _updateDimensions () {\n    this._chartWidth = this._renderer.width;\n\n    // update value-per-pixel and min-max distance\n    this._updateViewportPixel();\n  }\n\n  /**\n   * @private\n   */\n  _updateViewportPixel () {\n    this._viewportPixel = this._viewportDistance / this._chartWidth;\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   * @private\n   */\n  _toRelativeX (x) {\n    return x - this._viewportRange[ 0 ];\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { ChartTypes } from './ChartTypes';\nimport { Series } from '../series/Series';\nimport { binarySearchIndexes, isDate, TimeRanges } from '../../utils';\n\nexport class Chart extends EventEmitter {\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = 250; // chart height will be constant\n\n  /**\n   * @type {Array<number>}\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<Series>}\n   * @private\n   */\n  _series = [];\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRange = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRangeIndexes = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localYScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentYScale = null;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Object} options\n   */\n  constructor (renderer, options = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._options = options;\n\n    this._initialize();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n  }\n\n  /**\n   * Draws initial chart\n   */\n  firstRender () {\n    this._eachSeries(line => line.firstRender());\n  }\n\n  /**\n   * @param {number|Date} minX\n   * @param {number|Date} maxX\n   */\n  setRange (minX, maxX) {\n    const xAxis = this._xAxis;\n\n    const globalMinX = xAxis[ 0 ];\n    const globalMaxX = xAxis[ xAxis.length - 1 ];\n\n    if (isDate( minX )) {\n      minX = minX.getTime();\n    }\n    if (isDate( maxX )) {\n      maxX = maxX.getTime();\n    }\n\n    const padding = ( maxX - minX ) * .05;\n\n    minX = Math.max( minX, globalMinX - padding );\n    maxX = Math.min( maxX, globalMaxX + padding );\n\n    this._viewportRange = [ minX, maxX ];\n\n    // recompute points boundaries\n    this._updateViewportIndexes();\n\n    this._eachSeries(line => {\n      // set X viewport interval for line\n      line.setViewportRange( this._viewportRange, this._viewportRangeIndexes );\n\n      // slice only visible points\n      line.updateViewportPoints();\n    });\n\n    // update global and local extremes\n    this._updateExtremes();\n\n    // update scales for each line\n    this._updateSeriesScale();\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRange () {\n    return this._viewportRange;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRangeIndexes () {\n    return this._viewportRangeIndexes;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalExtremeDifference () {\n    return this._globalMaxY - this._globalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localExtremeDifference () {\n    return this._localMaxY - this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartWidth () {\n    return this._renderer.width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return this._height;\n  }\n\n  /**\n   * @private\n   */\n  _initialize () {\n    this._createSeriesGroup();\n    this._createSeries();\n    this._addEvents();\n    this._setInitialRange();\n  }\n\n  /**\n   * @private\n   */\n  _createSeriesGroup () {\n    this._seriesGroup = this._renderer.createGroup({\n      class: 'telechart-series-group',\n      transform: `translate(0, 70) scale(1 1)`\n    });\n  }\n\n  /**\n   * @private\n   */\n  _createSeries () {\n    const {\n      series: data,\n      seriesOptions: options = {}\n    } = this._options || {};\n\n    const {\n      columns,\n      types,\n      colors,\n      names\n    } = data;\n\n    const xAxisIndex = columns.findIndex(column => {\n      return types[ column[ 0 ] ] === ChartTypes.x;\n    });\n    const xAxis = this._xAxis = columns[ xAxisIndex ].slice( 1 );\n\n    let yAxes = columns.slice(); // copy an array to change later\n    yAxes.splice( xAxisIndex, 1 ); // remove x axis from the array\n\n    for (let i = 0; i < yAxes.length; ++i) {\n      const yAxis = yAxes[ i ];\n      const label = yAxis.shift();\n      const type = types[ label ];\n      const color = colors[ label ];\n      const name = names[ label ];\n\n      // prepare series settings\n      const settings = {\n        xAxis, yAxis, label, type,\n        color, name, options,\n        width: this.chartWidth,\n        height: this.chartHeight\n      };\n\n      // create instance\n      const series = new Series( this._renderer, this._seriesGroup, settings );\n\n      this._series.push( series );\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateViewportIndexes () {\n    const [ rangeStart, rangeEnd ] = this._viewportRange;\n    const [ minLowerIndex, minUpperIndex ] = binarySearchIndexes( this._xAxis, rangeStart );\n    const [ maxLowerIndex, maxUpperIndex ] = binarySearchIndexes( this._xAxis, rangeEnd );\n\n    this._viewportRangeIndexes = [ minUpperIndex, maxLowerIndex ];\n  }\n\n  /**\n   * @private\n   */\n  _updateExtremes () {\n    let localMinY = 0;\n    let localMaxY = 0;\n    let globalMinY = 0;\n    let globalMaxY = 0;\n\n    this._eachSeries(line => {\n      if (!line.isVisible) {\n        return;\n      }\n\n      if (localMinY > line.localMinY) {\n        localMinY = line.localMinY;\n      }\n      if (localMaxY < line.localMaxY) {\n        localMaxY = line.localMaxY;\n      }\n\n      if (globalMinY > line.globalMinY) {\n        globalMinY = line.globalMinY;\n      }\n      if (globalMaxY < line.globalMaxY) {\n        globalMaxY = line.globalMaxY;\n      }\n    });\n\n    this._localMinY = localMinY;\n    this._localMaxY = localMaxY;\n\n    this._globalMinY = globalMinY;\n    this._globalMaxY = globalMaxY;\n\n    this._localYScale = this._computeYScale();\n\n    if (typeof this._currentYScale !== 'number') {\n      // set initial scale\n      this._currentYScale = this._localYScale;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateSeriesScale () {\n    this._eachSeries(line => {\n      line.setScale( this._currentYScale, this._localYScale );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _addEvents () {\n    this._renderer.on('resize', _ => {\n      this._onRendererResize();\n    });\n\n    this._eachSeries(line => {\n      line.on('visibleChange', _ => {\n        this._onSeriesVisibleChange( line );\n      });\n    });\n  }\n\n  /**\n   * @private\n   */\n  _setInitialRange () {\n    const globalMinX = this._xAxis[ 0 ];\n    const globalMaxX = this._xAxis[ this._xAxis.length - 1 ];\n    const difference = globalMaxX - globalMinX;\n    const initialViewport = Math.floor( difference * .25 );\n    const viewportPadding = Math.floor( initialViewport * .05 );\n\n    // set initial range\n    this.setRange( globalMaxX - initialViewport - viewportPadding, globalMaxX + viewportPadding );\n  }\n\n  /**\n   * @private\n   */\n  _onRendererResize () {\n  }\n\n  /**\n   * @param {Series} series\n   * @private\n   */\n  _onSeriesVisibleChange (series) {\n    // find new extremes and scale\n    this._updateExtremes();\n\n    // setup new scale for each line\n    this._updateSeriesScale();\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  _computeYScale () {\n    const globalHeight = this.globalExtremeDifference;\n    const localHeight = this.localExtremeDifference;\n\n    // prevent dividing by zero\n    if (!globalHeight) {\n      return 1;\n    }\n\n    return localHeight / globalHeight;\n  }\n\n  /**\n   * @param {Function} fn\n   * @private\n   */\n  _eachSeries (fn = () => {}) {\n    for (let i = 0; i < this._series.length; ++i) {\n      fn( this._series[ i ] );\n    }\n  }\n}\n","export class Clock {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateMs = 0;\n\n  constructor () {\n    this._lastUpdateMs = this.now;\n  }\n\n  /**\n   * @return {number}\n   */\n  getDelta () {\n    const now = this.now;\n    const delta = now - this._lastUpdateMs;\n    this._lastUpdateMs = now;\n\n    return delta;\n  }\n\n  /**\n   * @return {number}\n   */\n  get now () {\n    return (performance || Date).now();\n  }\n}\n","import './style/telechart.scss';\n\nimport { AnimationSource, AnimationSourceEvents } from './core/animation/AnimationSource';\nimport { SvgRenderer } from \"./core/SvgRenderer\";\nimport { Chart } from './core/chart/Chart';\nimport { Clock } from './core/misc/Clock';\n\nimport {\n  addClass,\n  interpolateThemeClass,\n  removeClass,\n  resolveElement,\n  ChartThemes,\n  setAttributesNS,\n  cssText, createElement, ROOT_CLASS_NAME\n} from \"./utils\";\n\nexport class Telechart {\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _rootElement = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _themeName = ChartThemes.default;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _title = '';\n\n  /**\n   * @type {SVGTextElement}\n   * @private\n   */\n  _titleElement = null;\n\n  /**\n   * @type {Clock}\n   * @private\n   */\n  _clock = null;\n\n  /**\n   * @type {AnimationSource}\n   * @private\n   */\n  _animationSource = null;\n\n  /**\n   * @static\n   * @param {Element | string} mountTo Element or selector\n   * @param {Object} options\n   */\n  static create (mountTo, options = {}) {\n    const chart = new Telechart();\n\n    chart.setOptions( options );\n    chart.mount( resolveElement( mountTo ) );\n    chart.initialize();\n\n    chart.firstRender();\n\n    return chart;\n  }\n\n  /**\n   * @param {Object} options\n   */\n  setOptions (options = {}) {\n    this._options = options;\n  }\n\n  /**\n   * @param {Element} parent\n   */\n  mount (parent) {\n    const root = createElement('div', {\n      attrs: {\n        class: ROOT_CLASS_NAME\n      }\n    });\n\n    parent.appendChild( root );\n\n    this._rootElement = root;\n    this._renderer = new SvgRenderer( root );\n  }\n\n  /**\n   * Initialize the chart\n   */\n  initialize () {\n    this.setTheme( this._options.theme || ChartThemes.default );\n    this.setTitle( this._options.title );\n\n    // create components\n    this._createChart();\n\n    // create animation loop\n    this._clock = new Clock();\n    this._animationSource = new AnimationSource( 60, 1 ); // fps, timeScale\n    this._animationSource.on(AnimationSourceEvents.UPDATE, deltaTime => {\n      this.update( deltaTime );\n    });\n\n    requestAnimationFrame(_ => {\n      this.animate();\n    });\n  }\n\n  /**\n   * Draws first frame\n   */\n  firstRender () {\n    this._chart.firstRender();\n  }\n\n  /**\n   * Animation loop\n   */\n  animate () {\n    const deltaTime = this._clock.getDelta();\n    this._animationSource.update( deltaTime );\n\n    requestAnimationFrame(_ => this.animate());\n  }\n\n  /**\n   * Update loop\n   */\n  update (deltaTime) {\n    this._chart.update( deltaTime );\n  }\n\n  /**\n   * @param {string} themeName\n   */\n  setTheme (themeName) {\n    const rootElement = this._rootElement;\n\n    removeClass(\n      rootElement,\n      Object.keys( ChartThemes )\n        .map( interpolateThemeClass )\n    );\n\n    addClass(\n      rootElement,\n      interpolateThemeClass( themeName )\n    );\n\n    this._themeName = themeName;\n  }\n\n  /**\n   * @param {string} title\n   */\n  setTitle (title) {\n    this._title = title;\n\n    !this._titleElement\n      ? this._createTitle( title )\n      : this._updateTitle( title );\n  }\n\n  /**\n   * Destroys the chart instance\n   */\n  destroy () {\n    this._renderer && this._renderer.destroy();\n    this._rootElement = null;\n    this._renderer = null;\n  }\n\n  /**\n   * @return {string}\n   */\n  get themeName () {\n    return this._themeName;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _createTitle (title = this._options.title) {\n    if (!title) {\n      return;\n    }\n\n    const text = this._renderer.createText(title, {\n      class: 'telechart-title',\n      x: 16,\n      y: 36,\n      textAnchor: 'start',\n      style: cssText({\n        opacity: 0\n      })\n    });\n\n    setTimeout(_ => {\n      setAttributesNS(text, {\n        style: cssText({\n          opacity: 1\n        })\n      });\n    }, 200);\n\n    this._titleElement = text;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _updateTitle (title) {\n    if (!this._titleElement) {\n      return;\n    }\n    const tspan = this._titleElement.querySelector( 'tspan' );\n    tspan.innerHTML = title;\n  }\n\n  /**\n   * @private\n   */\n  _createChart () {\n    this._chart = new Chart(\n      this._renderer,\n      this._options\n    );\n  }\n}\n","export * from './Telechart';\n","import sourceData from '../samples/chart_data.json';\nimport { Telechart } from '../src';\nimport {\n  addClass,\n  ChartThemes, ChartThemesColors,\n  createElement,\n  cssText,\n  parseQueryString,\n  removeClass,\n  setAttributes\n} from '../src/utils';\n\nconst chartData = sourceData[ 0 ];\n\nconst query = parseQueryString( location.search );\n\nconst initialTheme = query && query.theme || 'default';\n\nconst container = document.querySelector( '#telechart-1' );\n\nconst start = performance.now();\nconst chart = Telechart.create(container, {\n  title: 'Followers',\n  series: {\n    columns: chartData.columns,\n    names: chartData.names,\n    types: chartData.types,\n    colors: chartData.colors,\n  },\n  seriesOptions: {\n    grouping: {\n      pixels: 2\n    }\n  }\n});\nconsole.log( chart, performance.now() - start );\n\n// set initial theme\nchart.setTheme( initialTheme );\nupdatePageTheme();\n\nlet buttonContent = `\n  <span class=\"text-switcher\">\n    <span>Switch to </span>\n    <span class=\"text-switcher__switcher\">\n      <span>Night</span>\n      <span>Day</span>\n    </span>\n    <span> Mode</span>\n  </span>\n`;\n\nconst themeButton = createElement('button', {\n  attrs: {\n    class: 'demo-theme-button',\n    style: cssText({\n      opacity: 0\n    })\n  }\n}, buttonContent);\n\nwindow.addEventListener('load', _ => {\n  document.body.appendChild( themeButton );\n\n  themeButton.addEventListener('click', ev => {\n    const isDefaultTheme = chart.themeName === ChartThemes.default;\n    const newTheme = isDefaultTheme\n      ? ChartThemes.dark\n      : ChartThemes.default;\n\n    chart.setTheme( newTheme );\n\n    updatePageTheme();\n  });\n\n  setTimeout(_ => {\n    setAttributes(themeButton, {\n      style: cssText({\n        opacity: 1\n      })\n    });\n  }, 100);\n});\n\nfunction updatePageTheme () {\n  removeClass( document.body, [ 'default-theme', 'dark-theme' ] );\n  addClass( document.body, `${chart.themeName}-theme` );\n\n  const themeColor = ChartThemesColors[ chart.themeName ];\n\n  let metaTheme = document.querySelector( '[name=\"theme-color\"]' );\n\n  if (!metaTheme) {\n    metaTheme = createElement('meta', {\n      attrs: {\n        name: 'theme-color',\n        content: themeColor\n      }\n    });\n    document.head.appendChild( metaTheme );\n  } else {\n    metaTheme.setAttribute( 'content', themeColor );\n  }\n}\n"],"sourceRoot":""}