{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/animation.js","webpack:///./src/utils/base.js","webpack:///./src/utils/browser.js","webpack:///./src/utils/text.js","webpack:///./src/utils/dom.js","webpack:///./src/utils/themes.js","webpack:///./src/utils/algorithms.js","webpack:///./src/utils/index.js","webpack:///./src/core/misc/EventEmitter.js","webpack:///./src/core/animation/AnimationSource.js","webpack:///./src/core/SvgRenderer.js","webpack:///./src/core/chart/ChartTypes.js","webpack:///./src/core/point/Point.js","webpack:///./src/core/point/PointGroup.js","webpack:///./src/core/series/Series.js","webpack:///./src/core/chart/Chart.js","webpack:///./src/core/misc/Clock.js","webpack:///./src/Telechart.js","webpack:///./src/index.js","webpack:///./demo/telechart-demo.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","animationTimeout","timeoutMs","arguments","length","undefined","_len","args","Array","_key","Promise","resolve","fulfillmentCallback","apply","concat","cb","requestAnimationFrame","setTimeout","_","objectEachKey","fn","keys","forEach","clampNumber","min","Infinity","max","_ref","Math","ensureNumber","Number","isNaN","isDate","Date","valueOf","isBrowserSafari","test","navigator","userAgent","capitalize","text","String","toUpperCase","substr","cssText","styleObject","reduce","css","prop","camelToKebabCase","toLowerCase","replace","parseQueryString","href","queryString","split","slice","map","part","keyValue","result","obj","assign","createElement","tagName","options","children","element","document","createElementNS","attrs","useNS","setAttributesNS","attrsNS","setAttributes","isArray","node","innerHTML","appendChild","resolveElement","elementOrSelector","querySelector","getElementWidth","innerWidth","clientWidth","camelCaseAttrWhiteList","attr","includes","setAttribute","setAttributeNS","hasClass","className","classList","contains","RegExp","addClass","_element$classList","classNames","add","_toConsumableArray","trim","removeClass","_element$classList2","remove","existingClasses","classesToDelete","Set","has","ROOT_CLASS_NAME","interpolateThemeClass","themeName","ChartThemes","default","dark","ChartThemesColors","arraysEqual","arrayA","arrayB","arrayMinMax","array","_arrayMinMaxIndexes2","_slicedToArray","startIndex","endIndex","minIndex","maxIndex","arrayMinMaxIndexes","arrayAvg","sum","arraySum","binarySearchIndexes","order","left","right","mid","__webpack_exports__","EventEmitter","_classCallCheck","this","eventName","_fireEvent","context","addEventListener","addEventListenerOnce","_subscribeEvent","_this","listener","_len2","_key2","removeEventListener","_eventListeners","listenerIndex","findIndex","splice","_allocateEvent","push","eventListeners","_len3","_key3","_eventListeners$i","AnimationSourceEvents","AnimationSource","_EventEmitter","updatesPerSecond","timeScale","AnimationSource_classCallCheck","_getPrototypeOf","AnimationSource_defineProperty","_assertThisInitialized","_updatesPerSecond","_updateEach","FRAMES_PER_SECOND","_timeScale","_inherits","deltaTime","_paused","_timeElapsed","_updateInvokes","_callUpdate","_lastUpdateAt","removeAllListeners","emit","set","telechartTitle","TELECHART_NAME","TELECHART_VERSION","TELECHART_AUTHOR","INTERNAL_AUTOINCREMENT","SvgRenderer","contextElement","SvgRenderer_classCallCheck","SvgRenderer_getPrototypeOf","SvgRenderer_defineProperty","SvgRenderer_assertThisInitialized","_parentContainer","_init","SvgRenderer_inherits","parent","_svgContainer","group","NS","tspan","textElement","defs","pathText","pathElement","updatingAttrs","width","height","rectElement","selector","from","querySelectorAll","_detachEvents","_clearParentContainer","_isInitialized","_updateDimensions","_createSvgContainer","_insertSvgContainer","createDesc","_attachEvents","Error","xmlns","version","_width","_height","viewBox","class","_minWidth","_minHeight","ev","_attachResizeListener","_detachResizeListener","_resizeListener","_onResize","window","_id","join","ChartTypes","PointTypes","point","POINT_AUTOINCREMENT","Point","x","y","Point_classCallCheck","Point_defineProperty","_x","_y","pointType","_type","setX","setY","addX","addY","svgX","_svgX","svgY","_svgY","PointGroup","_Point","points","autoCompute","PointGroup_classCallCheck","PointGroup_getPrototypeOf","PointGroup_defineProperty","PointGroup_assertThisInitialized","setType","setPointsGroup","PointGroup_inherits","_pointsGroup","approximate","_approximateX","_approximateY","_approximationFn","SERIES_AUTOINCREMENT","Series","renderer","settings","Series_classCallCheck","Series_getPrototypeOf","Series_defineProperty","Series_assertThisInitialized","_renderer","_parent","_settings","_parseSettings","initialize","Series_inherits","_createPoints","_updateGlobalExtremes","_addEvents","_pathElement","regroupViewportPoints","updateViewportPoints","_createGroup","_createPath","chart","_chart","_pathText","_visible","setInvisible","setVisible","range","rangeIndexes","oldRangeIndexes","_viewportRangeIndexes","_viewportRange","_viewportDistance","_viewportPixelUpdateNeeded","_updateLocalExtremes","_viewportPoints","setSvgXY","_projectXToSvg","_projectYToSvg","_viewportPointsGroupingNeeded","_this$_viewportRangeI","Series_slicedToArray","_points","viewportPoints","groupingLimitValue","_groupingPixels","_viewportPixelX","groupStartIndex","pointGroup","currentYScale","desiredYScale","_currentYScale","_localYScale","_chartWidth","_viewportPixelY","globalExtremeDifference","_chartHeight","_this$_settings","xAxis","yAxis","label","color","type","_this$_settings$optio","_xAxis","_yAxis","_label","_color","_name","groupingOptions","grouping","pixels","_seriesOptions","_group","createGroup","id","_computePathText","createPath","fill","stroke","strokeWidth","strokeLinejoin","strokeLinecap","_arrayMinMax2","minValue","maxValue","_globalMinY","_globalMaxY","_this$_viewportRangeI2","rangeStartIndex","rangeEndIndex","_arrayMinMax4","_localMinY","_localMaxY","_toRelativeX","localMinY","_this2","on","_onRendererResize","updateViewportPixel","Chart","Chart_classCallCheck","Chart_getPrototypeOf","Chart_defineProperty","Chart_assertThisInitialized","_options","_initialize","Chart_inherits","_eachSeries","line","firstRender","minX","maxX","globalMinX","globalMaxX","getTime","padding","_updateViewportIndexes","setViewportRange","_updateExtremes","_updateSeriesScale","_createSeriesGroup","_createSeries","_setInitialRange","_seriesGroup","transform","data","series","_ref$seriesOptions","seriesOptions","columns","types","colors","names","xAxisIndex","column","yAxes","shift","chartWidth","chartHeight","setChart","_series","_this$_viewportRange","Chart_slicedToArray","rangeStart","rangeEnd","_binarySearchIndexes2","minUpperIndex","_binarySearchIndexes4","maxLowerIndex","localMaxY","globalMinY","globalMaxY","isVisible","_computeYScale","_this3","setScale","_this4","_onSeriesVisibleChange","difference","initialViewport","floor","viewportPadding","globalHeight","localHeight","localExtremeDifference","Clock","Clock_classCallCheck","_lastUpdateMs","now","delta","performance","Telechart","Telechart_classCallCheck","Telechart_defineProperty","mountTo","setOptions","mount","root","_rootElement","setTheme","theme","setTitle","title","_createChart","_clock","_animationSource","update","animate","getDelta","rootElement","_themeName","_title","_titleElement","_updateTitle","_createTitle","destroy","createText","textAnchor","style","opacity","Telechart_Telechart","query","location","search","currentThemeName","charts","sourceData","chartData","index","animation","then","_ref2","container","start","console","log","createChart","updatePageTheme","themeButton","body","themeColor","metaTheme","content","head","newTheme"],"mappings":"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","file":"demo.815276cdcff8a79a6d03.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","export const FRAMES_PER_SECOND = 60;\nexport const FRAMES_DELTA_SEC = 1 / 60;\nexport const FRAMES_DELTA_MS = 1000 / 60;\n\n/**\n * @param {number} value\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warp (value, deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return value * warpRatio( deltaTime, framesDeltaSec );\n}\n\n/**\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warpRatio (deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return deltaTime / framesDeltaSec;\n}\n\n/**\n * @param {number} timeoutMs\n * @param {*} args\n * @return {Promise<void>}\n */\nexport function animationTimeout (timeoutMs = 0, ...args) {\n  return new Promise(resolve => {\n    const fulfillmentCallback = resolve.bind( null, ...args );\n    const cb = () => requestAnimationFrame( fulfillmentCallback );\n\n    if (!timeoutMs) {\n      cb();\n    } else {\n      setTimeout( _ => cb(), timeoutMs );\n    }\n  });\n}\n\n// linear\nexport const linear = t => t;\n// accelerating from zero velocity\nexport const easeInQuad = t => t * t;\n// decelerating to zero velocity\nexport const easeOutQuad = t => t * (2 - t);\n// acceleration until halfway, then deceleration\nexport const easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n// accelerating from zero velocity\nexport const easeInCubic = t => t * t * t;\n// decelerating to zero velocity\nexport const easeOutCubic = t => --t * t * t + 1;\n// acceleration until halfway, then deceleration\nexport const easeInOutCubic = t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n// accelerating from zero velocity\nexport const easeInQuart = t => t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuart = t => 1 - --t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuart = t => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t);\n// accelerating from zero velocity\nexport const easeInQuint = t => t * t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuint = t => 1 + --t * t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuint = t => t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n","/**\n * @param {*} object\n * @param {Function} fn\n */\nexport function objectEachKey (object, fn = () => {}) {\n  Object.keys( object ).forEach( fn );\n}\n\n/**\n * @param {*} object\n * @param {Function} fn\n * @return {*[]}\n */\nexport function objectMapKey (object, fn = () => {}) {\n  return Object.keys( object ).map( fn );\n}\n\n/**\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nexport function clampNumber (value, min = -Infinity, max = Infinity) {\n  if (min > max) {\n    [ min, max ] = [ max, min ];\n  }\n  return Math.min(\n    Math.max(ensureNumber(value), min),\n    max\n  );\n}\n\n/**\n * @param {*} value\n * @return {number}\n */\nexport function ensureNumber (value) {\n  value = Number(value);\n  if (Number.isNaN(value)) {\n    return 0;\n  }\n  return value;\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nexport function isObject (value) {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * @param {Date|*} value\n * @return {boolean}\n */\nexport function isDate (value) {\n  return value instanceof Date && !isNaN( value.valueOf() );\n}\n","/**\n * @returns {boolean}\n */\nexport function isBrowserSafari () {\n  return /^((?!chrome|android|crios|fxios).)*safari/i.test( navigator.userAgent );\n}\n","/**\n * @param {string} text\n * @return {string}\n */\nexport function capitalize (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return text[ 0 ].toUpperCase() + text.substr(1);\n}\n\n/**\n * @param {Object} styleObject\n * @returns {string}\n */\nexport function cssText (styleObject) {\n  return Object.keys( styleObject ).reduce((css, prop) => {\n    return `${css ? css + ' ' : ''}${camelToKebabCase( prop )}: ${styleObject[ prop ]};`;\n  }, '');\n}\n\n/**\n * @param {string} text\n * @returns {string}\n */\nexport function camelToKebabCase (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return (\n    text[ 0 ].toLowerCase() + text.substr( 1 )\n  ).replace( /([A-Z])/g, '-$1' ).toLowerCase();\n}\n\n/**\n * @param {string} href\n * @return {*}\n */\nexport function parseQueryString (href) {\n  const queryString = href.split('?').slice(1);\n  if (!queryString.length) {\n    return {};\n  }\n\n  return queryString[ 0 ].split( '&' ).map(part => {\n    const keyValue = part.split( '=' );\n    return {\n      [keyValue[ 0 ]]: keyValue[ 1 ]\n    };\n  }).reduce((result, obj) => {\n    return Object.assign(result, obj);\n  })\n}\n","import { objectEachKey } from \"./base\";\nimport { camelToKebabCase } from './text';\n\n/**\n * @param {string} tagName\n * @param {Object} options\n * @param {Array|*} children\n * @param {string|*} ns\n * @return {Element}\n */\nexport function createElement (tagName, options = {}, children = [], ns = null) {\n  const element = !ns\n    ? document.createElement( tagName )\n    : document.createElementNS( ns, tagName );\n\n  if (options.attrs) {\n    !options.useNS\n      ? setAttributes( element, options.attrs )\n      : setAttributesNS( element, options.attrs, options.attrsNS || null );\n  }\n\n  if (children || Array.isArray( children )) {\n    children = [].concat( children );\n    children.forEach(node => {\n      if (typeof node === 'string') {\n        element.innerHTML += node;\n      } else {\n        element.appendChild( node );\n      }\n    });\n  }\n\n  return element;\n}\n\n/**\n * @param {Element|string} elementOrSelector\n * @return {Element | null}\n */\nexport function resolveElement (elementOrSelector) {\n  if (typeof elementOrSelector !== 'string') {\n    return elementOrSelector;\n  }\n  return document.querySelector( elementOrSelector );\n}\n\n/**\n * @param {Element} element\n * @return {{top: number, left: number}}\n */\nexport function getElementOffset (element) {\n  if (!element) {\n    return { top: 0, left: 0 };\n  }\n\n  // Return zeros for disconnected and hidden (display: none) elements\n  // Support: IE <= 11 only\n  // Running getBoundingClientRect on a\n  // disconnected node in IE throws an error\n  if (element.getClientRects && !element.getClientRects().length) {\n    return { top: 0, left: 0 };\n  }\n\n  // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n  const rect = element.getBoundingClientRect();\n  const win = element.ownerDocument.defaultView;\n  return {\n    top: rect.top + win.pageYOffset,\n    left: rect.left + win.pageXOffset\n  };\n}\n\n/**\n * @param {Element} targetElement\n * @param {Element} relativeElement\n * @return {{ top: number, left: number }}\n */\nexport function getElementRelativeOffset (targetElement, relativeElement) {\n  const targetOffset = getElementOffset(targetElement);\n  const relativeOffset = getElementOffset(relativeElement);\n\n  return {\n    top: targetOffset.top - relativeOffset.top + relativeElement.scrollTop,\n    left: targetOffset.left - relativeOffset.left + relativeElement.scrollLeft\n  };\n}\n\n/**\n * @returns {number}\n */\nexport function getDocumentHeight () {\n  return Math.max(\n    document.body.scrollHeight,\n    document.documentElement.scrollHeight,\n    document.body.offsetHeight,\n    document.documentElement.offsetHeight,\n    document.body.clientHeight,\n    document.documentElement.clientHeight\n  );\n}\n\n/**\n * @returns {number}\n */\nexport function getWindowHeight () {\n  return window.innerHeight ||\n    (document.documentElement || document.body).clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementHeight (element) {\n  return element.innerHeight || element.clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementWidth (element) {\n  return element.innerWidth || element.clientWidth;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollHeight (element) {\n  return Math.max(\n    element.scrollHeight,\n    element.offsetHeight,\n    element.clientHeight\n  );\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollWidth (element) {\n  return Math.max(\n    element.scrollWidth,\n    element.offsetWidth,\n    element.clientWidth\n  );\n}\n\nconst camelCaseAttrWhiteList = [\n  'viewBox'\n];\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n */\nexport function setAttributes (element, attrs = {}) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttribute( attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n * @param {string | *} ns\n */\nexport function setAttributesNS (element, attrs = {}, ns = null) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttributeNS( ns, attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {string} className\n */\nexport function hasClass (element, className) {\n  if (element.classList) {\n    return element.classList.contains( className );\n  }\n  return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test( element.className );\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function addClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    return element.classList.add( ...classNames );\n  }\n\n  let className = element.className;\n\n  for (let i = 0; i < classNames.length; ++i) {\n    if (!hasClass( element, classNames[ i ] )) {\n      className += ` ${classNames[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function removeClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    return element.classList.remove( ...classNames );\n  }\n\n  let existingClasses = element.className.split( ' ' );\n  let classesToDelete = new Set( classNames );\n  let className = '';\n\n  for (let i = 0; i < existingClasses.length; ++i) {\n    if (!classesToDelete.has( existingClasses[ i ] )) {\n      className += ` ${existingClasses[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n","export const ROOT_CLASS_NAME = 'telechart-root';\n\n/**\n * @param {string} themeName\n * @returns {string}\n */\nexport function interpolateThemeClass (themeName) {\n  return `${ROOT_CLASS_NAME}_theme_${themeName}`;\n}\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemes = {\n  default: 'default',\n  dark: 'dark'\n};\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemesColors = {\n  default: '#ffffff',\n  dark: '#242F3E'\n};\n","/**\n * @param {Array<*>} arrayA\n * @param {Array<*>} arrayB\n * @param {string | *} key\n * @return {boolean}\n */\nexport function arraysEqual (arrayA, arrayB, key = null) {\n  if (!Array.isArray(arrayA)\n    || !Array.isArray(arrayB)\n    || arrayA.length !== arrayB.length) {\n    return false;\n  }\n  for (let i = 0; i < arrayA.length; ++i) {\n    if (key) {\n      if (arrayA[ i ][ key ] !== arrayB[ i ][ key ]) {\n        return false;\n      }\n    } else if (arrayA[ i ] !== arrayB[ i ]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMinIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return minIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMin (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMinIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMaxIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n  }\n  return maxIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMax (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMaxIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMaxIndexes (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return [ minIndex, maxIndex ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMax (array, startIndex = 0, endIndex = array.length - 1) {\n  const [ minIndex, maxIndex ] = arrayMinMaxIndexes( array, startIndex, endIndex );\n  return [\n    array[ minIndex ],\n    array[ maxIndex ],\n  ];\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arraySum (array) {\n  let length = array.length;\n  let sum = 0;\n\n  while (length--) {\n    sum += array[ length ];\n  }\n\n  return sum;\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arrayAvg (array) {\n  let length = array.length;\n  let result = arraySum( array );\n\n  // prevent from dividing by zero\n  if (length) {\n    result = result / length;\n  }\n\n  return result;\n}\n\n/**\n * Finds boundary indexes in an array of numbers\n *\n * @param {Array<number>} array\n * @param {number} value\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchIndexes (array, value, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ] === value) {\n    left = right;\n  } else if (array[ left ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n\n/**\n * Finds boundary indexes in an array of objects\n *\n * @param {Array<Object>} array\n * @param {number} value\n * @param {string} key\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchObjectIndexes (array, value, key, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ][ key ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ][ key ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ][ key ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ][ key ] === value) {\n    left = right;\n  } else if (array[ left ][ key ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n","export * from './constants';\nexport * from './animation';\nexport * from './base';\nexport * from './browser';\nexport * from './dom';\nexport * from './events';\nexport * from './svg';\nexport * from './text';\nexport * from './themes';\nexport * from './algorithms';\n","/**\n * Simple event emitter for better performance and app size\n *\n * @author Alexander Belov\n */\nexport class EventEmitter {\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _eventListeners = {};\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   */\n  emit (eventName, ...args) {\n    this._fireEvent( eventName, ...args );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  on (eventName, cb, context = null) {\n    this.addEventListener( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  once (eventName, cb, context = null) {\n    this.addEventListenerOnce( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListener (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    this._subscribeEvent( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListenerOnce (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    const listener = (...args) => {\n      cb.apply( context, args );\n      this.removeEventListener( eventName, listener );\n    };\n\n    this.addEventListener( eventName, listener );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} listener\n   */\n  removeEventListener (eventName, listener) {\n    if (!this._eventListeners[ eventName ]) {\n      return;\n    }\n\n    const listenerIndex = this._eventListeners[ eventName ].findIndex(([ cb ]) => {\n      return listener === cb;\n    });\n\n    if (listenerIndex < 0) {\n      return;\n    }\n\n    this._eventListeners[ eventName ].splice( listenerIndex, 1 );\n  }\n\n  /**\n   * @param {string | *} eventName\n   */\n  removeAllListeners (eventName = null) {\n    if (!eventName) {\n      this._eventListeners = {};\n    } else if (this._eventListeners[ eventName ]) {\n      this._eventListeners[ eventName ] = null;\n      delete this._eventListeners[ eventName ];\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @private\n   */\n  _allocateEvent (eventName) {\n    this._eventListeners[ eventName ] = this._eventListeners[ eventName ] || []\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  _subscribeEvent (eventName, cb, context) {\n    this._allocateEvent( eventName );\n    this._eventListeners[ eventName ].push([ cb, context ]);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   * @private\n   */\n  _fireEvent (eventName, ...args) {\n    const eventListeners = this._eventListeners[ eventName ] || [];\n\n    for (let i = 0; i < eventListeners.length; ++i) {\n      const [ cb, context ] = eventListeners[ i ];\n      cb.apply( context, args );\n    }\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { FRAMES_PER_SECOND } from '../../utils';\n\nexport const AnimationSourceEvents = {\n  UPDATE: 'update'\n};\n\nexport class AnimationSource extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeElapsed = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateInvokes = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updatesPerSecond = 60;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateEach = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateAt = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _paused = false;\n\n  /**\n   * @param {number} updatesPerSecond\n   * @param {number} timeScale\n   */\n  constructor (updatesPerSecond = 60, timeScale = 1) {\n    super();\n\n    this._updatesPerSecond = Math.min( 60, Math.max( 1e-8, updatesPerSecond ) );\n    this._updateEach = FRAMES_PER_SECOND / this._updatesPerSecond;\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (this._paused) {\n      return;\n    }\n\n    this._timeElapsed += deltaTime;\n    this._updateInvokes++;\n\n    if (this._updateInvokes % this._updateEach < 1) {\n      this._callUpdate( (this._timeElapsed - this._lastUpdateAt) * this._timeScale );\n      this._lastUpdateAt = this._timeElapsed;\n    }\n  }\n\n  /**\n   * Disposes the instance\n   */\n  dispose () {\n    this._paused = true;\n    this.removeAllListeners();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._paused;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return !this._paused;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set timeScale (value) {\n    this._timeScale = value;\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _callUpdate (deltaTime) {\n    this.emit( AnimationSourceEvents.UPDATE, deltaTime );\n  }\n}\n","import { EventEmitter } from \"./misc/EventEmitter\";\nimport {\n  capitalize,\n  clampNumber,\n  createElement,\n  getElementWidth,\n  resolveElement,\n  setAttributes,\n  setAttributesNS\n} from \"../utils\";\n\nconst telechartTitle = `${capitalize( TELECHART_NAME )} ${TELECHART_VERSION} (c) ${TELECHART_AUTHOR}`;\n\nlet INTERNAL_AUTOINCREMENT = 1;\n\nexport class SvgRenderer extends EventEmitter {\n\n  static NS = 'http://www.w3.org/2000/svg';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = INTERNAL_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parentContainer = null;\n\n  /**\n   * @type {SVGElement}\n   * @private\n   */\n  _svgContainer = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minHeight = 400;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minWidth = 300;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _width = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _isInitialized = false;\n\n  /**\n   * @param {Element|string} contextElement\n   */\n  constructor (contextElement) {\n    super();\n\n    this._parentContainer = resolveElement( contextElement );\n    this._init();\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>} children\n   * @param {Element} parent\n   * @return {Element}\n   */\n  createGroup (attrs = {}, children = [], parent = this._svgContainer) {\n    const group = createElement('g', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Element} parent\n   * @return {SVGDescElement}\n   */\n  createDesc (text = '', parent = this._svgContainer) {\n    const group = createElement('desc', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGTextElement}\n   */\n  createText (text = '', attrs = {}, parent = this._svgContainer) {\n    const tspan = createElement('tspan', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n\n    const textElement = createElement('text', {\n      useNS: true,\n      attrs\n    }, tspan, SvgRenderer.NS);\n\n    parent.appendChild( textElement );\n\n    return textElement;\n  }\n\n  /**\n   * @param {Element[]} defs\n   * @param {Element} parent\n   * @return {SVGDefsElement}\n   */\n  createDefs (defs = [], parent = this._svgContainer) {\n    defs = [].concat( defs );\n\n    const element = createElement('defs', {\n      useNS: true\n    }, defs, SvgRenderer.NS);\n    parent.appendChild( element );\n\n    return element;\n  }\n\n  /**\n   * @param {string} pathText\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGPathElement}\n   */\n  createPath (pathText, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, { d: pathText });\n\n    const pathElement = createElement('path', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n    parent.appendChild( pathElement );\n\n    return pathElement;\n  }\n\n  /**\n   * @param {SVGPathElement} pathElement\n   * @param {Object} updatingAttrs\n   */\n  updatePath (pathElement, pathText, updatingAttrs = {}) {\n    updatingAttrs.d = pathText;\n    setAttributesNS( pathElement, updatingAttrs, null );\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   * @param {*} attrs\n   * @param {SVGElement | Element} parent\n   * @return {SVGRectElement}\n   */\n  createRect (width, height, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, {\n      width, height\n    });\n\n    const rectElement = createElement('rect', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( rectElement );\n\n    return rectElement;\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Element}\n   */\n  querySelector (selector) {\n    return this._svgContainer.querySelector( selector );\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Array<Element>}\n   */\n  querySelectorAll (selector) {\n    return Array.from( this._svgContainer.querySelectorAll( selector ) );\n  }\n\n  /**\n   * Destroy the renderer\n   */\n  destroy () {\n    this._detachEvents();\n    this._clearParentContainer();\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {Element}\n   */\n  get parentContainer () {\n    return this._parentContainer;\n  }\n\n  /**\n   * @return {SVGElement}\n   */\n  get svgContainer () {\n    return this._svgContainer;\n  }\n\n  /**\n   * @return {number}\n   */\n  get width () {\n    return this._width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get height () {\n    return this._height;\n  }\n\n  /**\n   * @return {string}\n   */\n  get viewBox () {\n    return [ 0, 0, this._width, this._height ].join( ' ' );\n  }\n\n  /**\n   * @private\n   */\n  _init () {\n    if (this._isInitialized) {\n      return;\n    }\n\n    this._updateDimensions();\n    this._svgContainer = this._createSvgContainer();\n    this._insertSvgContainer();\n\n    this.createDesc( telechartTitle );\n\n    this._attachEvents();\n\n    this._isInitialized = true;\n  }\n\n  /**\n   * @return {Element}\n   * @private\n   */\n  _createSvgContainer () {\n    const parentContainer = this._parentContainer;\n\n    if (!parentContainer) {\n      throw new Error( 'Parent container is not provided' );\n    }\n\n    return createElement('svg', {\n      useNS: false,\n      attrs: {\n        xmlns: SvgRenderer.NS,\n        version: '1.1',\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox,\n        class: 'telechart-render'\n      }\n    }, [], SvgRenderer.NS);\n  }\n\n  /**\n   * @private\n   */\n  _insertSvgContainer () {\n    this._clearParentContainer();\n    this._parentContainer.appendChild( this._svgContainer );\n  }\n\n  /**\n   * @private\n   */\n  _updateDimensions () {\n    this._width = clampNumber(\n      getElementWidth( this._parentContainer ),\n      this._minWidth\n    );\n    this._height = this._minHeight;\n\n    if (this._svgContainer) {\n      setAttributes(this._svgContainer, {\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  _clearParentContainer () {\n    // clears the child content\n    this._parentContainer.innerHTML = '';\n  }\n\n  /**\n   * @private\n   */\n  _onResize (ev) {\n    this.emit( 'resize', ev );\n    this._updateDimensions();\n  }\n\n  /**\n   * @private\n   */\n  _attachEvents () {\n    this._attachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _detachEvents () {\n    this._detachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _attachResizeListener () {\n    if (this._resizeListener) {\n      this._detachResizeListener();\n    }\n\n    this._resizeListener = this._onResize.bind( this );\n    window.addEventListener( 'resize', this._resizeListener );\n  }\n\n  /**\n   * @private\n   */\n  _detachResizeListener () {\n    if (!this._resizeListener) {\n      return;\n    }\n\n    window.removeEventListener( 'resize', this._resizeListener );\n    this._resizeListener = null;\n  }\n}\n","/**\n * @type {{x: string, line: string}}\n */\nexport const ChartTypes = {\n  x: 'x',\n  line: 'line'\n};\n","export const PointTypes = {\n  point: 'point',\n  group: 'group',\n};\n\nlet POINT_AUTOINCREMENT = 1;\n\nexport class Point {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = POINT_AUTOINCREMENT++;\n\n  /**\n   * @enum 'point' | 'group'\n   * @type {string}\n   * @private\n   */\n  _type = 'point';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _x = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _y = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgY = 0;\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor (x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n  }\n\n  /**\n   * @param {string} pointType\n   */\n  setType (pointType = 'point') {\n    this._type = pointType;\n  }\n\n  /**\n   * @param {number} x\n   */\n  setX (x) {\n    this._x = x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  setY (y) {\n    this._y = y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  setXY (x, y) {\n    this.setX( x );\n    this.setY( y );\n  }\n\n  /**\n   * @param {number} x\n   */\n  addX (x) {\n    this._x += x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  addY (y) {\n    this._y += y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  addXY (x, y) {\n    this.addX( x );\n    this.addY( y );\n  }\n\n  /**\n   * @param {number} svgX\n   */\n  setSvgX (svgX) {\n    this._svgX = svgX;\n  }\n\n  /**\n   * @param {number} svgY\n   */\n  setSvgY (svgY) {\n    this._svgY = svgY;\n  }\n\n  /**\n   * @param {number} svgX\n   * @param {number} svgY\n   */\n  setSvgXY (svgX, svgY) {\n    this._svgX = svgX;\n    this._svgY = svgY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get x () {\n    return this._x;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get y () {\n    return this._y;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgX () {\n    return this._svgX;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgY () {\n    return this._svgY;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get type () {\n    return this._type;\n  }\n}\n","import { Point, PointTypes } from './Point';\nimport { arrayAvg } from '../../utils/index';\n\nexport class PointGroup extends Point {\n\n  /**\n   * @type {Array<Point>}\n   * @private\n   */\n  _pointsGroup = [];\n\n  /**\n   * @type {arrayAvg}\n   * @private\n   */\n  _approximationFn = arrayAvg;\n\n  /**\n   * @param {Array<Point>} points\n   * @param {boolean?} autoCompute\n   */\n  constructor (points = [], autoCompute = true) {\n    super();\n    this.setType( PointTypes.group );\n    this.setPointsGroup( points, autoCompute );\n  }\n\n  /**\n   * @param {Array<Point>} points\n   * @param {boolean?} autoCompute\n   */\n  setPointsGroup (points, autoCompute = true) {\n    this._pointsGroup = points;\n\n    if (autoCompute) {\n      this.approximate();\n    }\n  }\n\n  /**\n   * @private\n   */\n  approximate () {\n    this.setX( this._approximateX() );\n    this.setY( this._approximateY() );\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  _approximateX () {\n    return this._approximationFn(\n      this._pointsGroup.map(p => p.x)\n    );\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  _approximateY () {\n    return this._approximationFn(\n      this._pointsGroup.map(p => p.y)\n    );\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { arrayMinMax, arraysEqual, ensureNumber } from '../../utils';\nimport { Point } from '../point/Point';\nimport { PointGroup } from '../point/PointGroup';\n\nlet SERIES_AUTOINCREMENT = 1;\n\nexport class Series extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = SERIES_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _group = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _pathText = null;\n\n  /**\n   * @type {SVGPathElement}\n   * @private\n   */\n  _pathElement = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parent = null;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _yAxis = [];\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _name = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _label = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _color = '#31a8dc';\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _visible = true;\n\n  /**\n   * @type {Array<Point>}\n   * @private\n   */\n  _points = [];\n\n  /**\n   * @type {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   * @private\n   */\n  _settings = {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _seriesOptions = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _groupingPixels = 2;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartWidth = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartHeight = null;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRange = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportDistance = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPixelX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPixelY = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportPixelUpdateNeeded = true;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRangeIndexes = [];\n\n  /**\n   * @type {Array<Point | PointGroup>}\n   * @private\n   */\n  _viewportPoints = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportPointsGroupingNeeded = true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentYScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localYScale = 1;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Element} parent\n   * @param {*} settings\n   */\n  constructor (renderer, parent, settings = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._parent = parent;\n    this._settings = settings;\n    this._parseSettings();\n\n    this.initialize();\n  }\n\n  /**\n   * Initializes series with options\n   */\n  initialize () {\n    this._createPoints();\n    this._updateGlobalExtremes();\n    this._addEvents();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n  }\n\n  /**\n   * Creates path\n   */\n  firstRender () {\n    if (this._pathElement) {\n      return;\n    }\n    // approximate viewport points for large data set\n    this.regroupViewportPoints();\n\n    // update svgX & svgY for each point\n    this.updateViewportPoints();\n\n    // creates and stores wrapper for following path element\n    this._createGroup();\n\n    // creates and stores initial path element\n    this._createPath();\n  }\n\n  /**\n   * @param {Chart} chart\n   */\n  setChart (chart) {\n    this._chart = chart;\n  }\n\n  /**\n   * @param {string} pathText\n   */\n  setPathText (pathText) {\n    this._pathText = pathText;\n  }\n\n  /**\n   * @param {SVGPathElement} pathElement\n   */\n  setPathElement (pathElement) {\n    this._pathElement = pathElement;\n  }\n\n  /**\n   * Shows series on the chart\n   */\n  setVisible () {\n    this._visible = true;\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Hides series from the chart\n   */\n  setInvisible () {\n    this._visible = false;\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Toggles series\n   */\n  toggleVisible () {\n    this._visible\n      ? this.setInvisible()\n      : this.setVisible();\n  }\n\n  /**\n   * @param {Array<number>} range\n   * @param {Array<number>} rangeIndexes\n   */\n  setViewportRange (range, rangeIndexes) {\n    const oldRangeIndexes = this._viewportRangeIndexes;\n\n    this._viewportRange = range;\n    this._viewportRangeIndexes = rangeIndexes;\n    this._viewportDistance = this._viewportRange[ 1 ] - this._viewportRange[ 0 ];\n\n    if (!arraysEqual( rangeIndexes, oldRangeIndexes )) {\n      // mark as we need to re-compute approximation in next animation tick\n      this._viewportPixelUpdateNeeded = true;\n    }\n\n    // update minY and maxY local values\n    this._updateLocalExtremes();\n  }\n\n  /**\n   * Updates points array of viewport\n   */\n  updateViewportPoints () {\n    for (let i = 0; i < this._viewportPoints.length; ++i) {\n      const point = this._viewportPoints[ i ];\n      point.setSvgXY(\n        this._projectXToSvg( point.x ),\n        this._projectYToSvg( point.y ),\n      );\n    }\n  }\n\n  regroupViewportPoints () {\n    if (!this._viewportPointsGroupingNeeded) {\n      return;\n    }\n\n    const [ startIndex, endIndex ] = this._viewportRangeIndexes;\n\n    // if we have no enough points\n    // then we don't need to approximate\n    if (endIndex - startIndex < 100) {\n      // just slice points from the original array\n      // [ startIndex, endIndex ]\n      this._viewportPoints = this._points.slice( startIndex, endIndex + 1 );\n\n      // all work done here\n      return;\n    }\n\n    let viewportPoints = [];\n    let groupingLimitValue = this._groupingPixels * this._viewportPixelX;\n    let groupStartIndex = startIndex;\n\n    for (let i = startIndex + 1; i <= endIndex; ++i) {\n      const point = this._points[ i ];\n\n      const groupStartDifference = point.x - this._points[ groupStartIndex ].x;\n      if (groupStartDifference >= groupingLimitValue || i === endIndex) {\n        if (groupStartIndex !== i - 1) {\n          // we have 2 or more points to group\n          // [ startIndex, lastIndex ] all indexes inclusive\n          const group = this._points.slice( groupStartIndex, i );\n          const pointGroup = new PointGroup( group, true );\n          viewportPoints.push( pointGroup );\n        } else {\n          if (startIndex === i - 1) {\n            // add first point\n            viewportPoints.push( this._points[ startIndex ] );\n          }\n          viewportPoints.push( point );\n        }\n\n        groupStartIndex = i;\n      }\n    }\n\n    this._viewportPointsGroupingNeeded = false;\n    this._viewportPoints = viewportPoints;\n  }\n\n  /**\n   * @param {number} currentYScale\n   * @param {number} desiredYScale\n   */\n  setScale (currentYScale, desiredYScale) {\n    this._currentYScale = currentYScale;\n    this._localYScale = desiredYScale;\n  }\n\n  /**\n   * Updates pixel value for each axis\n   */\n  updateViewportPixel () {\n    this._viewportPixelX = this._viewportDistance / this._chartWidth;\n    this._viewportPixelY = this._chart.globalExtremeDifference / this._chartHeight;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get xAxis () {\n    return this._xAxis;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get yAxis () {\n    return this._yAxis;\n  }\n\n  /**\n   * @return {string}\n   */\n  get pathText () {\n    return this._pathText;\n  }\n\n  /**\n   * @return {SVGPathElement}\n   */\n  get pathElement () {\n    return this._pathElement;\n  }\n\n  /**\n   * @return {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   */\n  get settings () {\n    return this._settings;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isVisible () {\n    return this._visible;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMinY () {\n    return this._globalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMaxY () {\n    return this._globalMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get viewportPixelUpdateNeeded () {\n    return this._viewportPixelUpdateNeeded;\n  }\n\n  /**\n   * @private\n   */\n  _parseSettings () {\n    const {\n      xAxis, yAxis,\n      label, type,\n      color, name,\n      width, height,\n      options = {}\n    } = this._settings;\n\n    this._xAxis = xAxis;\n    this._yAxis = yAxis;\n    this._label = label;\n    this._color = color;\n    this._name = name;\n\n    this._chartWidth = width;\n    this._chartHeight = height;\n\n    const groupingOptions = options.grouping;\n    if (groupingOptions) {\n      if (groupingOptions.pixels) {\n        this._groupingPixels = ensureNumber( groupingOptions.pixels );\n      }\n    }\n\n    this._seriesOptions = options;\n  }\n\n  /**\n   * @private\n   */\n  _createGroup () {\n    this._group = this._renderer.createGroup({\n      class: 'telechart-series-path-group',\n      id: `telechart-path-${this._id}`,\n      x: 0,\n      y: 0\n    }, [], this._parent);\n  }\n\n  /**\n   * @private\n   */\n  _createPath () {\n    this._pathText = this._computePathText( this._viewportPoints );\n\n    this._pathElement = this._renderer.createPath(this._pathText, {\n      class: 'telechart-series-path',\n      d: this._pathText,\n      fill: 'none',\n      stroke: this._color,\n      strokeWidth: '2',\n      strokeLinejoin: 'round',\n      strokeLinecap: 'round'\n    }, this._group);\n  }\n\n  /**\n   * @private\n   */\n  _createPoints () {\n    const xAxis = this._xAxis;\n    const yAxis = this._yAxis;\n\n    for (let i = 0; i < xAxis.length; ++i) {\n      this._points.push(\n        new Point( xAxis[ i ], yAxis[ i ] )\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateGlobalExtremes () {\n    const [ minValue, maxValue ] = arrayMinMax( this._yAxis );\n\n    this._globalMinY = Math.min( 0, minValue );\n    this._globalMaxY = maxValue;\n  }\n\n  /**\n   * @private\n   */\n  _updateLocalExtremes () {\n    const [ rangeStartIndex, rangeEndIndex ] = this._viewportRangeIndexes;\n\n    const [ minValue, maxValue ] = arrayMinMax(\n      this._yAxis, rangeStartIndex, rangeEndIndex\n    );\n\n    this._localMinY = Math.min( 0, minValue );\n    this._localMaxY = maxValue;\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   * @private\n   */\n  _projectXToSvg (x) {\n    return this._toRelativeX( x ) / this._viewportPixelX;\n  }\n\n  /**\n   * @param {number} y\n   * @return {number}\n   * @private\n   */\n  _projectYToSvg (y) {\n    return this._chartHeight\n      - (\n        y - this._chart.localMinY\n      ) / (\n        this._viewportPixelY * this._currentYScale\n      );\n  }\n\n  /**\n   * @private\n   */\n  _addEvents () {\n    this._renderer.on('resize', _ => {\n      this._onRendererResize();\n    });\n  }\n\n  /**\n   * @private\n   */\n  _onRendererResize () {\n    this._updateDimensions();\n  }\n\n  /**\n   * @private\n   */\n  _updateDimensions () {\n    this._chartWidth = this._renderer.width;\n\n    // update value-per-pixel and min-max distance\n    this.updateViewportPixel();\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   * @private\n   */\n  _toRelativeX (x) {\n    return x - this._viewportRange[ 0 ];\n  }\n\n  /**\n   * @param {Array<Point | PointGroup>} points\n   * @return {string}\n   * @private\n   */\n  _computePathText (points = []) {\n    let result = '';\n\n    if (!points.length) {\n      return result;\n    }\n\n    result += 'M ';\n\n    for (let i = 0; i < points.length; ++i) {\n      const point = points[ i ];\n\n      if (i !== 0) {\n        result += 'L ';\n      }\n\n      result += [ point.svgX, point.svgY ].join(' ') + ' ';\n    }\n\n    return result;\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { ChartTypes } from './ChartTypes';\nimport { Series } from '../series/Series';\nimport { binarySearchIndexes, isDate, TimeRanges } from '../../utils';\n\nexport class Chart extends EventEmitter {\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = 250; // chart height will be constant\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<Series>}\n   * @private\n   */\n  _series = [];\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRange = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRangeIndexes = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localYScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentYScale = null;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Object} options\n   */\n  constructor (renderer, options = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._options = options;\n\n    this._initialize();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n  }\n\n  /**\n   * Draws initial chart\n   */\n  firstRender () {\n    this._eachSeries(line => line.firstRender());\n  }\n\n  /**\n   * @param {number|Date} minX\n   * @param {number|Date} maxX\n   */\n  setViewportRange (minX, maxX) {\n    const xAxis = this._xAxis;\n\n    const globalMinX = xAxis[ 0 ];\n    const globalMaxX = xAxis[ xAxis.length - 1 ];\n\n    if (isDate( minX )) {\n      minX = minX.getTime();\n    }\n    if (isDate( maxX )) {\n      maxX = maxX.getTime();\n    }\n\n    const padding = ( maxX - minX ) * .05;\n\n    minX = Math.max( minX, globalMinX - padding );\n    maxX = Math.min( maxX, globalMaxX + padding );\n\n    this._viewportRange = [ minX, maxX ];\n\n    // recompute boundaries (indexes)\n    this._updateViewportIndexes();\n\n    this._eachSeries(line => {\n      // set X viewport interval for line\n      line.setViewportRange( this._viewportRange, this._viewportRangeIndexes );\n    });\n\n    // update global and local extremes\n    // update local scale\n    this._updateExtremes();\n\n    // update scales for each line\n    this._updateSeriesScale();\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRange () {\n    return this._viewportRange;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRangeIndexes () {\n    return this._viewportRangeIndexes;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalExtremeDifference () {\n    return this._globalMaxY - this._globalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localExtremeDifference () {\n    return this._localMaxY - this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMinY () {\n    return this._globalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMaxY () {\n    return this._globalMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartWidth () {\n    return this._renderer.width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return this._height;\n  }\n\n  /**\n   * @private\n   */\n  _initialize () {\n    this._createSeriesGroup();\n    this._createSeries();\n    this._addEvents();\n    this._setInitialRange();\n  }\n\n  /**\n   * @private\n   */\n  _createSeriesGroup () {\n    this._seriesGroup = this._renderer.createGroup({\n      class: 'telechart-series-group',\n      transform: `translate(0, 70) scale(1 1)`\n    });\n  }\n\n  /**\n   * @private\n   */\n  _createSeries () {\n    const {\n      series: data,\n      seriesOptions: options = {}\n    } = this._options || {};\n\n    const {\n      columns,\n      types,\n      colors,\n      names\n    } = data;\n\n    const xAxisIndex = columns.findIndex(column => {\n      return types[ column[ 0 ] ] === ChartTypes.x;\n    });\n    const xAxis = this._xAxis = columns[ xAxisIndex ].slice( 1 );\n\n    let yAxes = columns.slice(); // copy an array to change later\n    yAxes.splice( xAxisIndex, 1 ); // remove x axis from the array\n\n    for (let i = 0; i < yAxes.length; ++i) {\n      const yAxis = yAxes[ i ];\n      const label = yAxis.shift();\n      const type = types[ label ];\n      const color = colors[ label ];\n      const name = names[ label ];\n\n      // prepare series settings\n      const settings = {\n        xAxis, yAxis, label, type,\n        color, name, options,\n        width: this.chartWidth,\n        height: this.chartHeight\n      };\n\n      // create instance\n      const series = new Series( this._renderer, this._seriesGroup, settings );\n\n      // provide context for each series\n      series.setChart( this );\n\n      this._series.push( series );\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateViewportIndexes () {\n    const [ rangeStart, rangeEnd ] = this._viewportRange;\n    const [ minLowerIndex, minUpperIndex ] = binarySearchIndexes( this._xAxis, rangeStart );\n    const [ maxLowerIndex, maxUpperIndex ] = binarySearchIndexes( this._xAxis, rangeEnd );\n\n    this._viewportRangeIndexes = [ minUpperIndex, maxLowerIndex ];\n  }\n\n  /**\n   * @private\n   */\n  _updateExtremes () {\n    let localMinY = 0;\n    let localMaxY = 0;\n    let globalMinY = 0;\n    let globalMaxY = 0;\n\n    this._eachSeries(line => {\n      if (!line.isVisible) {\n        // filter only visible series\n        return;\n      }\n\n      if (localMinY > line.localMinY) {\n        localMinY = line.localMinY;\n      }\n      if (localMaxY < line.localMaxY) {\n        localMaxY = line.localMaxY;\n      }\n\n      if (globalMinY > line.globalMinY) {\n        globalMinY = line.globalMinY;\n      }\n      if (globalMaxY < line.globalMaxY) {\n        globalMaxY = line.globalMaxY;\n      }\n    });\n\n    this._localMinY = localMinY;\n    this._localMaxY = localMaxY;\n\n    this._globalMinY = globalMinY;\n    this._globalMaxY = globalMaxY;\n\n    this._localYScale = this._computeYScale();\n\n    if (typeof this._currentYScale !== 'number') {\n      // set initial scale\n      this._currentYScale = this._localYScale;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateSeriesScale () {\n    this._eachSeries(line => {\n      line.setScale( this._currentYScale, this._localYScale );\n      line.updateViewportPixel();\n    });\n  }\n\n  /**\n   * @private\n   */\n  _addEvents () {\n    this._renderer.on('resize', _ => {\n      this._onRendererResize();\n    });\n\n    this._eachSeries(line => {\n      line.on('visibleChange', _ => {\n        this._onSeriesVisibleChange( line );\n      });\n    });\n  }\n\n  /**\n   * @private\n   */\n  _setInitialRange () {\n    const globalMinX = this._xAxis[ 0 ];\n    const globalMaxX = this._xAxis[ this._xAxis.length - 1 ];\n    const difference = globalMaxX - globalMinX;\n    const initialViewport = Math.floor( difference );\n    const viewportPadding = Math.floor( initialViewport * .05 );\n\n    // set initial range\n    this.setViewportRange( globalMaxX - initialViewport - viewportPadding, globalMaxX + viewportPadding );\n  }\n\n  /**\n   * @private\n   */\n  _onRendererResize () {\n  }\n\n  /**\n   * @param {Series} series\n   * @private\n   */\n  _onSeriesVisibleChange (series) {\n    // find new extremes and scale\n    this._updateExtremes();\n\n    // setup new scale for each line\n    this._updateSeriesScale();\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  _computeYScale () {\n    const globalHeight = this.globalExtremeDifference;\n    const localHeight = this.localExtremeDifference;\n\n    // prevent dividing by zero\n    if (!globalHeight) {\n      return 1;\n    }\n\n    return localHeight / globalHeight;\n  }\n\n  /**\n   * @param {Function} fn\n   * @private\n   */\n  _eachSeries (fn = () => {}) {\n    for (let i = 0; i < this._series.length; ++i) {\n      fn( this._series[ i ] );\n    }\n  }\n}\n","export class Clock {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateMs = 0;\n\n  constructor () {\n    this._lastUpdateMs = this.now;\n  }\n\n  /**\n   * @return {number}\n   */\n  getDelta () {\n    const now = this.now;\n    const delta = now - this._lastUpdateMs;\n    this._lastUpdateMs = now;\n\n    return delta;\n  }\n\n  /**\n   * @return {number}\n   */\n  get now () {\n    return (performance || Date).now();\n  }\n}\n","import './style/telechart.scss';\n\nimport { AnimationSource, AnimationSourceEvents } from './core/animation/AnimationSource';\nimport { SvgRenderer } from \"./core/SvgRenderer\";\nimport { Chart } from './core/chart/Chart';\nimport { Clock } from './core/misc/Clock';\n\nimport {\n  addClass,\n  interpolateThemeClass,\n  removeClass,\n  resolveElement,\n  ChartThemes,\n  setAttributesNS,\n  cssText, createElement, ROOT_CLASS_NAME\n} from \"./utils\";\n\nexport class Telechart {\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _rootElement = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _themeName = ChartThemes.default;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _title = '';\n\n  /**\n   * @type {SVGTextElement}\n   * @private\n   */\n  _titleElement = null;\n\n  /**\n   * @type {Clock}\n   * @private\n   */\n  _clock = null;\n\n  /**\n   * @type {AnimationSource}\n   * @private\n   */\n  _animationSource = null;\n\n  /**\n   * @static\n   * @param {Element | string} mountTo Element or selector\n   * @param {Object} options\n   */\n  static create (mountTo, options = {}) {\n    const chart = new Telechart();\n\n    chart.setOptions( options );\n    chart.mount( resolveElement( mountTo ) );\n    chart.initialize();\n\n    chart.firstRender();\n\n    return chart;\n  }\n\n  /**\n   * @param {Object} options\n   */\n  setOptions (options = {}) {\n    this._options = options;\n  }\n\n  /**\n   * @param {Element} parent\n   */\n  mount (parent) {\n    const root = createElement('div', {\n      attrs: {\n        class: ROOT_CLASS_NAME\n      }\n    });\n\n    parent.appendChild( root );\n\n    this._rootElement = root;\n    this._renderer = new SvgRenderer( root );\n  }\n\n  /**\n   * Initialize the chart\n   */\n  initialize () {\n    this.setTheme( this._options.theme || ChartThemes.default );\n    this.setTitle( this._options.title );\n\n    // create components\n    this._createChart();\n\n    // create animation loop\n    this._clock = new Clock();\n    this._animationSource = new AnimationSource( 60, 1 ); // fps, timeScale\n    this._animationSource.on(AnimationSourceEvents.UPDATE, deltaTime => {\n      this.update( deltaTime );\n    });\n\n    requestAnimationFrame(_ => {\n      this.animate();\n    });\n  }\n\n  /**\n   * Draws first frame\n   */\n  firstRender () {\n    this._chart.firstRender();\n  }\n\n  /**\n   * Animation loop\n   */\n  animate () {\n    const deltaTime = this._clock.getDelta();\n    this._animationSource.update( deltaTime );\n\n    requestAnimationFrame(_ => this.animate());\n  }\n\n  /**\n   * Update loop\n   */\n  update (deltaTime) {\n    this._chart.update( deltaTime );\n  }\n\n  /**\n   * @param {string} themeName\n   */\n  setTheme (themeName) {\n    const rootElement = this._rootElement;\n\n    removeClass(\n      rootElement,\n      Object.keys( ChartThemes )\n        .map( interpolateThemeClass )\n    );\n\n    addClass(\n      rootElement,\n      interpolateThemeClass( themeName )\n    );\n\n    this._themeName = themeName;\n  }\n\n  /**\n   * @param {string} title\n   */\n  setTitle (title) {\n    this._title = title;\n\n    !this._titleElement\n      ? this._createTitle( title )\n      : this._updateTitle( title );\n  }\n\n  /**\n   * Destroys the chart instance\n   */\n  destroy () {\n    this._renderer && this._renderer.destroy();\n    this._rootElement = null;\n    this._renderer = null;\n  }\n\n  /**\n   * @return {string}\n   */\n  get themeName () {\n    return this._themeName;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _createTitle (title = this._options.title) {\n    if (!title) {\n      return;\n    }\n\n    const text = this._renderer.createText(title, {\n      class: 'telechart-title',\n      x: 16,\n      y: 36,\n      textAnchor: 'start',\n      style: cssText({\n        opacity: 0\n      })\n    });\n\n    setTimeout(_ => {\n      setAttributesNS(text, {\n        style: cssText({\n          opacity: 1\n        })\n      });\n    }, 200);\n\n    this._titleElement = text;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _updateTitle (title) {\n    if (!this._titleElement) {\n      return;\n    }\n    const tspan = this._titleElement.querySelector( 'tspan' );\n    tspan.innerHTML = title;\n  }\n\n  /**\n   * @private\n   */\n  _createChart () {\n    this._chart = new Chart(\n      this._renderer,\n      this._options\n    );\n  }\n}\n","export * from './Telechart';\n","import sourceData from '../samples/chart_data.json';\nimport { Telechart } from '../src';\nimport {\n  addClass, animationTimeout,\n  ChartThemes, ChartThemesColors,\n  createElement,\n  cssText, isBrowserSafari,\n  parseQueryString,\n  removeClass,\n  setAttributes\n} from '../src/utils';\n\nconst query = parseQueryString( location.search );\nlet currentThemeName = query && query.theme || 'default';\n\nconst charts = [];\n\nconst from = 0;\nconst count = 5;\n\n// initialize charts using requestAnimationFrame\n// for better user experience\nsourceData\n  .slice(from, from + count)\n  .map((chartData, index) => {\n    return animationTimeout( 20 * index, [ chartData, index ] );\n  })\n  .map(animation => {\n    animation.then(([ chartData, index ]) => createChart( chartData, index ));\n    return animation;\n  });\n\nupdatePageTheme();\n\nlet buttonContent = `\n  <span class=\"text-switcher\">\n    <span>Switch to </span>\n    <span class=\"text-switcher__switcher\">\n      <span>Night</span>\n      <span>Day</span>\n    </span>\n    <span> Mode</span>\n  </span>\n`;\n\nconst themeButton = createElement('button', {\n  attrs: {\n    class: 'demo-theme-button',\n    style: cssText({\n      opacity: 0\n    })\n  }\n}, buttonContent);\n\nwindow.addEventListener('load', _ => {\n  document.body.appendChild( themeButton );\n\n  themeButton.addEventListener('click', ev => {\n    updateChartsTheme();\n    updatePageTheme();\n  });\n\n  setTimeout(_ => {\n    setAttributes(themeButton, {\n      style: cssText({\n        opacity: 1\n      })\n    });\n  }, 100);\n});\n\nfunction updateChartsTheme () {\n  const isDefaultTheme = currentThemeName === ChartThemes.default;\n  const newTheme = isDefaultTheme\n    ? ChartThemes.dark\n    : ChartThemes.default;\n  currentThemeName = newTheme;\n\n  charts.forEach(chart => {\n    chart.setTheme( newTheme );\n  });\n}\n\nfunction updatePageTheme () {\n  removeClass( document.body, [ 'default-theme', 'dark-theme' ] );\n  addClass( document.body, `${currentThemeName}-theme` );\n\n  if (isBrowserSafari()) {\n    addClass( document.body, 'browser-safari' );\n  }\n\n  setTimeout(_ => {\n    updatePageThemeColor();\n  }, 300);\n}\n\nfunction updatePageThemeColor () {\n  const themeColor = ChartThemesColors[ currentThemeName ];\n\n  let metaTheme = document.querySelector( '[name=\"theme-color\"]' );\n\n  if (!metaTheme) {\n    metaTheme = createElement('meta', {\n      attrs: {\n        name: 'theme-color',\n        content: themeColor\n      }\n    });\n    document.head.appendChild( metaTheme );\n  } else {\n    metaTheme.setAttribute( 'content', themeColor );\n  }\n}\n\nfunction createChart (chartData, index) {\n  const container = document.querySelector( `#telechart-${index + 1}` );\n\n  const start = performance.now();\n  const chart = Telechart.create(container, {\n    title: 'Followers',\n    series: {\n      columns: chartData.columns,\n      names: chartData.names,\n      types: chartData.types,\n      colors: chartData.colors,\n    },\n    seriesOptions: {\n      grouping: {\n        pixels: 2\n      }\n    }\n  });\n\n  console.log( `#${index}`, performance.now() - start );\n\n  // set initial theme\n  chart.setTheme( currentThemeName );\n\n  charts.push( chart );\n}\n"],"sourceRoot":""}