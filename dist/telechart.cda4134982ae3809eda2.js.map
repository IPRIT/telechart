{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/core/misc/EventEmitter.js","webpack:///./src/utils/constants.js","webpack:///./src/utils/animation.js","webpack:///./src/utils/browser.js","webpack:///./src/utils/ripple.js","webpack:///./src/utils/base.js","webpack:///./src/utils/text.js","webpack:///./src/utils/dom.js","webpack:///./src/utils/events.js","webpack:///./src/utils/themes.js","webpack:///./src/utils/algorithms.js","webpack:///./src/core/animation/AnimationSource.js","webpack:///./src/core/SvgRenderer.js","webpack:///./src/core/series/SeriesTypes.js","webpack:///./src/core/point/Point.js","webpack:///./src/core/animation/Tween.js","webpack:///./src/core/chart/ChartTypes.js","webpack:///./src/core/series/Series.js","webpack:///./src/core/chart/events/ChartEvents.js","webpack:///./src/core/chart/Label.js","webpack:///./src/core/chart/axis/ChartAxis.js","webpack:///./src/core/chart/axis/ChartAxisY.js","webpack:///./src/core/chart/axis/ChartAxisX.js","webpack:///./src/core/chart/BaseChart.js","webpack:///./src/core/chart/Chart.js","webpack:///./src/core/misc/Clock.js","webpack:///./src/core/chart/events/NavigatorChartEvents.js","webpack:///./src/core/chart/NavigatorChart.js","webpack:///./src/core/chart/LabelButtons.js","webpack:///./src/Telechart.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EventEmitter","this","_eventListeners","_proto","emit","eventName","_len","arguments","length","args","Array","_key","_fireEvent","apply","concat","on","cb","context","addEventListener","once","addEventListenerOnce","_subscribeEvent","_this","listener","_len2","_key2","removeEventListener","listenerIndex","findIndex","_ref","splice","removeAllListeners","_allocateEvent","push","eventListeners","_len3","_key3","_eventListeners$i","TimeRanges","second","minute","hour","day","week","month","year","FRAMES_PER_SECOND","FRAMES_DELTA_SEC","FRAMES_DELTA_MS","warp","deltaTime","framesDeltaSec","warpRatio","animationTimeout","timeoutMs","Promise","resolve","fulfillmentCallback","requestAnimationFrame","setTimeout","_","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","isBrowserSafari","test","navigator","userAgent","isTouchEventsSupported","document","documentElement","passiveSupported","options","passive","window","err","isPassiveEventSupported","passiveIfSupported","passiveIfSupportedFn","isTransformAvailable","div","createElement","undefined","style","isTransformSupported","el","rippleAttribute","ripple","show","e","_temp","_ref$value","getAttribute","container","animation","appendChild","className","size","clientWidth","clientHeight","width","center","height","computed","getComputedStyle","position","offset","getBoundingClientRect","x","clientX","left","y","clientY","top","classList","add","dataset","activated","Date","now","remove","hide","ripples","getElementsByClassName","delay","Number","parentNode","removeChild","attachRipple","binding","setAttribute","detachRipple","objectEachKey","fn","keys","forEach","objectMapKey","map","clampNumber","min","max","Infinity","Math","ensureNumber","isNaN","isObject","isDate","valueOf","capitalize","text","String","toUpperCase","substr","cssText","styleObject","reduce","css","prop","camelToKebabCase","toLowerCase","replace","parseQueryString","href","queryString","split","slice","part","keyValue","result","obj","assign","tagName","children","element","createElementNS","attrs","useNS","setAttributesNS","attrsNS","setAttributes","isArray","node","innerHTML","textContent","resolveElement","elementOrSelector","querySelector","getElementOffset","rect","win","ownerDocument","defaultView","pageYOffset","pageXOffset","getElementRelativeOffset","targetElement","relativeElement","targetOffset","relativeOffset","scrollTop","scrollLeft","getDocumentHeight","body","scrollHeight","offsetHeight","getDocumentScrollTop","supportPageOffset","isCSS1Compat","compatMode","getWindowHeight","innerHeight","getElementHeight","getElementWidth","innerWidth","getElementScrollHeight","getElementScrollWidth","scrollWidth","offsetWidth","camelCaseAttrWhiteList","attr","includes","setAttributeNS","removeElement","hasClass","RegExp","addClass","classNames","trim","removeClass","existingClasses","classesToDelete","Set","has","console","warn","ev","ROOT_CLASS_NAME","interpolateThemeClass","themeName","ChartThemes","default","dark","ChartThemesColors","arraysEqual","arrayA","arrayB","arrayMinIndex","array","startIndex","endIndex","minIndex","arrayMin","arrayMaxIndex","maxIndex","arrayMax","arrayMinMaxIndexes","arrayMinMax","_arrayMinMaxIndexes","arraySum","sum","arrayAvg","binarySearchIndexes","order","right","mid","binarySearchObjectIndexes","arrayDiff","dict","AnimationSourceEvents","AnimationSource","_EventEmitter","updatesPerSecond","timeScale","_timeElapsed","_timeScale","_updateInvokes","_updatesPerSecond","_updateEach","_lastUpdateAt","_paused","update","_callUpdate","dispose","set","telechartTitle","TELECHART_NAME","INTERNAL_AUTOINCREMENT","SvgRenderer","contextElement","_id","_parentContainer","_svgContainer","_minHeight","_minWidth","_width","_height","_isInitialized","_init","createGroup","parent","group","NS","createClipPath","clipPath","createMask","mask","createLinearGradient","stops","stopElements","stopAttrs","gradient","createDesc","createText","tspan","textElement","createDefs","createPath","pathText","pathElement","updatePath","createRect","rectElement","createCircle","cx","cy","radius","circleElement","selector","querySelectorAll","from","destroy","_detachEvents","_clearParentContainer","_updateDimensions","_createSvgContainer","_insertSvgContainer","_attachEvents","Error","xmlns","version","viewBox","class","_onResize","_attachResizeListener","_detachResizeListener","_resizeListener","join","SeriesTypes","POINT_AUTOINCREMENT","Point","_type","_x","_y","_svgX","_svgY","setType","pointType","setX","setY","setXY","addX","addY","addXY","setSvgX","svgX","setSvgY","svgY","setSvgXY","TWEEN_ID","TweenState","NOT_STARTED","RUNNING","PAUSED","COMPLETED","CANCELLED","TweenEvents","DEFAULT_PARAMS","duration","timingFunction","Tween","target","properties","targetValues","params","_params","_state","_duration","_timingFunctionName","_timingFunction","_target","_properties","_targetValues","_startValues","_initParams","_construct","isRunning","_updateAnimation","_checkDuration","start","isNotStarted","_getPropertyValues","pause","finish","_dispose","cancel","patchAnimation","setTimeScale","_this$_params","_getTimingFunction","progress","timingProgress","delta","values","_getPropertyValue","functionName","defaultFunctionName","timingFunctions","ChartTypes","chart","navigatorChart","SERIES_AUTOINCREMENT","OpacityAnimationType","Series","renderer","settings","_parent","_renderer","_chart","_isSimpleChart","_settings","_seriesOptions","_xAxis","_yAxis","_name","_label","_color","_strokeWidth","_visible","_group","_pathText","_pathElement","_pathUpdateNeeded","_marker","_markersGroup","_markerVisible","_markerAnimation","_markerRadius","_maxMarkerRadius","_markerPointIndex","_markerPositionUpdateNeeded","_points","_localMaxY","_localMinY","_opacity","_opacityAnimation","_opacityAnimationType","_parseSettings","initialize","_createPoints","_addEvents","pathUpdated","updateViewportPoints","updatePathOpacity","_updateMarkerPosition","markerAnimation","updateMarkerRadius","firstRender","_createGroup","_createPath","_createMarker","setChart","chartType","setVisible","_createShowAnimation","setInvisible","_createHideAnimation","toggleVisible","showMarker","_createMarkerShowAnimation","hideMarker","_createMarkerHideAnimation","toggleMarker","updateLocalExtremes","_this$_chart$_viewpor","_viewportRangeIndexes","rangeStartIndex","rangeEndIndex","_arrayMinMax","minValue","maxValue","_useViewportPointsInterval","updateViewportPointsByInterval","updateViewportPointsByArray","indexes","_viewportPointsIndexes","pointIndex","point","projectXToSvg","projectYToSvg","_this$_chart$_viewpor2","_updatePathText","requestPathUpdate","setMarkerPointIndex","index","_this$_settings","xAxis","yAxis","label","color","type","_this$_settings$optio","_options$strokeWidth","strokeWidth","id","fill","stroke","strokeLinejoin","strokeLinecap","_computePathTextByInterval","_computePathTextByArray","_markerGroup","_resolveMarkersGroup","markersGroup","svgContainer","transform","_seriesGroupTop","_this2","_onRendererResize","interval","_createOpacityAnimation","opacity","_this3","onFinished","_createMarkerAnimation","_this4","ChartEvents","LABEL_ID","Label","_container","_containerPosition","translateX","translateY","_dateElement","_tableElement","_dataArray","_yearVisible","_hasVisibleData","_createContainer","_createContent","_positionUpdateNeeded","updateDimensions","updatePosition","setData","data","_hasVisibleItems","_updateContent","showLabel","hideLabel","showYear","hideYear","_clampPosition","_setLabelPosition","requestUpdatePosition","parentContainer","_generateTable","items","dataItem","_createTableItem","_toPrecise","title","_getTableItemId","display","visible","_updateTitle","_updateTableItem","ms","date","dateMatch","toUTCString","match","getDate","getFullYear","titleElement","valueElement","precise","toFixed","chartWidth","labelWidth","labelHeight","_this$_getCursorOffse","_getCursorOffset","cursorLeft","cursorTop","labelTranslateX","labelLeft","labelTop","possibleLabelLeft1","possibleLabelLeft2","possibleLabelTop1","documentScrollTop","chartOffsetTop","chartOffsetY","minY","filter","item","AxisElementState","ChartAxis","valuesGroup","axesGroup","axesValues","elements","positionUpdateNeeded","createAxesGroup","createValuesGroup","updateValues","_updateElementsAnimations","updatePositions","updateAnimations","oldValues","valuesToDelete","valuesToCreate","indexOf","createNewElements","deleteOldElements","_getElementByValue","created","state","hiddenFromSearch","createNewElement","createShowingAnimation","showing","createHidingAnimation","detachElement","axisElement","indexToDelete","_getElementIndexByValue","computeAxisValues","onChartResize","eachElement","_this$elements$i","elementValue","_this$elements$i$hidd","_updateElementAnimation","ChartAxisY","_ChartAxis","_updatePathElementPosition","_updateValueElementPosition","seriesGroupTop","chartMaskId","insertBefore","_seriesGroup","viewportMinY","localMinY","viewportMaxY","localMaxY","distance","deltaY","divider","pow","toString","floor","currentValue","unshift","initial","_createAxisElement","_createValueElement","_computePathText","dataValue","strokeOpacity","valueText","_computeValuePosition","viewportPadding","textAnchor","transitionDuration","transitionProperty","ChartAxisX","axesValuesMapping","_interval","chartHeight","pixelX","viewportPixelX","viewportMinX","viewportRange","viewportMaxX","maxAvailableLabels","intervalInPixels","minLabelWidth","currentLastValue","prevValue","nextValue","dates","_toDateString","timestamp","lastValue","datePart","CHART_ID","BaseChart","_options","_chartHeight","_groupingPixels","_series","_defs","_chartMask","_chartMaskId","_chartMaskPadding","_viewportRange","_viewportDistance","_viewportPixelX","_viewportPixelY","_viewportPadding","_viewportLeftPaddingScale","_viewportRightPaddingScale","_viewportRangeUpdateNeeded","_viewportPointsGroupingNeeded","_currentLocalMinY","_currentLocalMaxY","_minMaxYAnimation","_minMaxYAnimationSign","_rangeAnimation","_rangeAnimationObject","_cursorInsideChart","_axisCursor","_axisCursorPositionX","_axisCursorPointIndex","_axisCursorUpdateNeeded","_yAxisView","_xAxisView","resolveDefs","createChartMask","createSeriesGroup","createSeries","addEvents","setInitialRange","approximateViewportPoints","isChart","initializeAxisCursor","initializeLabel","initializeAxisY","initializeAxisX","minMaxYAnimation","extremesUpdated","hasRangeAnimation","updateViewportRange","to","skipExtremes","updateViewportPixel","_updateAxisCursor","eachSeries","line","hasOpacityAnimation","isHiding","isNavigatorPath","series","_ref$seriesOptions","seriesOptions","groupingOptions","grouping","pixels","columns","types","colors","names","xAxisIndex","column","yAxes","shift","extendSeriesOptions","defs","padding","gradientId","sharpGradient","gradientTransform","stopColor","stopOpacity","_createAxisCursor","_addAxisCursorEvents","yAxisView","xAxisView","setViewportRange","animateViewportRangeTo","minX","maxX","_options$duration","_options$timingFuncti","_options$preservePadd","preservePadding","_this$_clampViewportR","_clampViewportRange","newMinX","newMaxX","_ref2","_ref2$skipExtremes","_ref2$preservePadding","_setViewportRange","oldRangeIndexes","_updateViewportIndexes","localExtremesUpdateRequested","updateExtremes","_options2","_options2$skipExtreme","_options2$preservePad","_this$_viewportRangeI","groupingDistanceLimitX","viewportIndexes","groupStartIndex","middleIndex","isVisible","oldLocalMinY","oldLocalMaxY","updateAnimation","_updateOrCreateMinMaxYAnimation","computeViewportPixelX","currentLocalExtremeDifference","computeViewportPadding","localMinX","localMaxX","onRendererResize","onSeriesVisibleChange","_updateMaskDimensions","getSeriesByLabel","findSeries","setSeriesVisible","setSeriesInvisible","toggleSeries","predicate","setChartType","toRelativeX","projectCursorToX","_ref3","_ref3$pageX","pageX","chartLeft","pageY","_this$_viewportRange","rangeStart","rangeEnd","_binarySearchIndexes","minUpperIndex","_binarySearchIndexes2","maxLowerIndex","_this$_clampViewportR2","globalMinX","globalMaxX","getTime","_ref4","actualPaddingX","receivedLeftPaddingX","receivedRightPaddingX","localExtremeDifference","_createMinMaxYAnimation","_patchMinMaxYAnimation","_this5","_updateMinMaxAnimationSign","_computeAxisCursorPath","_axisCursorGroup","mouseMoveListener","_onMouseMove","mouseLeaveListener","_onMouseLeave","touchStartListener","_onTouchStart","touchMoveListener","_onTouchMove","touchEndListener","_onTouchEnd","_onCursorMove","_onCursorLeave","targetTouch","targetTouches","_touchStartPosition","_isScrollingAction","_this$_touchStartPosi","startPageX","startPageY","abs","deltaX","preventDefault","cancelable","cursorPosition","_this6","insideChart","_insideChart","_setInsideChartState","oldIndex","_findPointIndexByCursor","_updateLabel","changed","_prepareLabelData","date1","date2","cursorX","_binarySearchIndexes3","lowerIndex","upperIndex","isLowerCloser","isLowerVisible","isUpperVisible","isInside","_this7","_markerHideTimeout","clearTimeout","change","_onCursorInsideChartChanged","_showMarkers","_showCursor","_hideMarkers","_hideCursor","_ref5","_getElementOffset2","chartTop","_this8","Chart","_BaseChart","setNavigationRange","_this$_resolveNavigat","_resolveNavigationRange","animateNavigationRangeTo","_this$_resolveNavigat2","initialViewport","globalDistance","Clock","_lastUpdateMs","performance","getDelta","NavigatorChartEvents","NavigatorChart","_offsetY","_paddingTopBottom","_paddingLeftRight","_navigatorGroup","_sliderGroup","_slider","_sliderControllerLeft","_sliderControllerRight","_sliderControllerWidth","_sliderControllerOffset","_sliderWidth","_sliderLeftRightBorderWidth","_overlayLeft","_overlayRight","_overlayLeftWidth","_overlayRightWidth","_overlayColor","_sliderUpdateNeeded","_navigatorRange","_navigatorRangeAnimation","_navigationRangeAnimationObject","_navigatorMinRangeDistance","_navigatorChangeDirection","_updateNavigatorDimensions","_createNavigatorGroup","_createOverlays","_createSliderEventsListeners","updateNavigationRange","_updateNavigatorElements","_this$_clampNavigatio","_clampNavigationRange","newMin","newMax","_ref$emitChange","emitChange","_this$_clampNavigatio2","overlayLeftScale","overlayRightScale","navigatorWidth","offsetY","navigatorHeight","maskId","_sliderMask","_sliderMaskOuter","_sliderMaskInner","preserveDistance","preservedDistance","isRightController","minDistance","_onSliderTouchStart","_onSliderTouchMove","mouseDownListener","_onSliderMouseDown","controllerLeftTouchStartListener","_onSliderControllerTouchStart","controllerLeftTouchMoveListener","_onSliderControllerTouchMove","controllerLeftMouseDownListener","_onSliderControllerMouseDown","controllerRightTouchStartListener","controllerRightTouchMoveListener","controllerRightMouseDownListener","overlayLeftClickListener","_onSliderOverlayClick","overlayRightClickListener","_ev$targetTouches$","_sliderStartEvent","_sliderStartPosition","_targetTouch$pageX","positionDelta","startPosition","_this$_clampNavigatio3","sliderMouseMoveListener","_onSliderMouseMove","lastBodyStyle","cursor","removeAttribute","_ev$pageX","_this$_clampNavigatio4","direction","_ev$targetTouches$2","_sliderControllerStartPosition","_sliderControllerStartEvent","_targetTouch$pageX2","isLeft","_this$_clampNavigatio5","_onSliderControllerMouseMove","_ev$pageX2","_this$_clampNavigatio6","_resolveNavigatorPosition","halfDistance","_this$_clampNavigatio7","LABEL_BUTTONS_ID","LabelButtons","_createButtons","_createButton","buttonIcon","_createSvgIcon","buttonText","button","selectedClass","animatingClass","hasSelectedClass","iconSize","strokeMiterlimit","TELECHART_ID","Telechart","_rootElement","_navigatorChart","_labelButtons","_themeName","_title","_titleElement","_clock","_animationSource","mountTo","setOptions","mount","root","setTheme","theme","setTitle","_createChart","_createNavigatorChart","_createLabelButtons","_addEventsListeners","animate","rootElement","_createTitle","labelButtons","range","_this3$_chart","_this3$_chart2","__webpack_exports__","Telechart_Telechart"],"mappings":"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","file":"telechart.cda4134982ae3809eda2.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * Simple event emitter for better performance and app size\n *\n * @author Alexander Belov\n */\nexport class EventEmitter {\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _eventListeners = {};\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   */\n  emit (eventName, ...args) {\n    this._fireEvent( eventName, ...args );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  on (eventName, cb, context = null) {\n    this.addEventListener( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  once (eventName, cb, context = null) {\n    this.addEventListenerOnce( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListener (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    this._subscribeEvent( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListenerOnce (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    const listener = (...args) => {\n      cb.apply( context, args );\n      this.removeEventListener( eventName, listener );\n    };\n\n    this.addEventListener( eventName, listener );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} listener\n   */\n  removeEventListener (eventName, listener) {\n    if (!this._eventListeners[ eventName ]) {\n      return;\n    }\n\n    const listenerIndex = this._eventListeners[ eventName ].findIndex(([ cb ]) => {\n      return listener === cb;\n    });\n\n    if (listenerIndex < 0) {\n      return;\n    }\n\n    this._eventListeners[ eventName ].splice( listenerIndex, 1 );\n  }\n\n  /**\n   * @param {string | *} eventName\n   */\n  removeAllListeners (eventName = null) {\n    if (!eventName) {\n      this._eventListeners = {};\n    } else if (this._eventListeners[ eventName ]) {\n      this._eventListeners[ eventName ] = null;\n      delete this._eventListeners[ eventName ];\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @private\n   */\n  _allocateEvent (eventName) {\n    this._eventListeners[ eventName ] = this._eventListeners[ eventName ] || []\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  _subscribeEvent (eventName, cb, context) {\n    this._allocateEvent( eventName );\n    this._eventListeners[ eventName ].push([ cb, context ]);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   * @private\n   */\n  _fireEvent (eventName, ...args) {\n    const eventListeners = this._eventListeners[ eventName ] || [];\n\n    for (let i = 0; i < eventListeners.length; ++i) {\n      const [ cb, context ] = eventListeners[ i ];\n      cb.apply( context, args );\n    }\n  }\n}\n","const hour = 3600 * 1000;\n\n/**\n * @type {{second: number, minute: number, hour: number, day: number, week: number, month: number, year: number}}\n */\nexport const TimeRanges = {\n  second: 1000,\n  minute: hour / 60,\n  hour,\n  day: hour * 24,\n  week: hour * 24 * 7,\n  month: hour * 24 * 30, // rude\n  year: hour * 24 * 365\n};\n","export const FRAMES_PER_SECOND = 60;\nexport const FRAMES_DELTA_SEC = 1 / 60;\nexport const FRAMES_DELTA_MS = 1000 / 60;\n\n/**\n * @param {number} value\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warp (value, deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return value * warpRatio( deltaTime, framesDeltaSec );\n}\n\n/**\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warpRatio (deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return deltaTime / framesDeltaSec;\n}\n\n/**\n * @param {number} timeoutMs\n * @param {*} args\n * @return {Promise<void>}\n */\nexport function animationTimeout (timeoutMs = 0, ...args) {\n  return new Promise(resolve => {\n    const fulfillmentCallback = resolve.bind( null, ...args );\n    const cb = () => requestAnimationFrame( fulfillmentCallback );\n\n    if (!timeoutMs) {\n      cb();\n    } else {\n      setTimeout( _ => cb(), timeoutMs );\n    }\n  });\n}\n\n// linear\nexport const linear = t => t;\n// accelerating from zero velocity\nexport const easeInQuad = t => t * t;\n// decelerating to zero velocity\nexport const easeOutQuad = t => t * (2 - t);\n// acceleration until halfway, then deceleration\nexport const easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n// accelerating from zero velocity\nexport const easeInCubic = t => t * t * t;\n// decelerating to zero velocity\nexport const easeOutCubic = t => --t * t * t + 1;\n// acceleration until halfway, then deceleration\nexport const easeInOutCubic = t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n// accelerating from zero velocity\nexport const easeInQuart = t => t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuart = t => 1 - --t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuart = t => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t);\n// accelerating from zero velocity\nexport const easeInQuint = t => t * t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuint = t => 1 + --t * t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuint = t => t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n","/**\n * @returns {boolean}\n */\nexport function isBrowserSafari () {\n  return /^((?!chrome|android|crios|fxios).)*safari/i.test( navigator.userAgent );\n}\n\n/**\n * @return {boolean}\n */\nexport function isTouchEventsSupported () {\n  return 'ontouchstart' in document.documentElement;\n}\n\nlet passiveSupported = false;\n\ntry {\n  const options = {\n    get passive() { // This function will be called when the browser\n      //   attempts to access the passive property.\n      passiveSupported = true;\n    }\n  };\n\n  window.addEventListener('test', options, options);\n  window.removeEventListener('test', options, options);\n} catch(err) {\n  passiveSupported = false;\n}\n\nexport const isPassiveEventSupported = passiveSupported;\nexport const passiveIfSupported = passiveSupported ? { passive: true } : false;\nexport const passiveIfSupportedFn = (passive = true) => passiveSupported ? { passive } : false;\n\n/**\n * @return {*}\n */\nexport function isTransformAvailable () {\n  const prefix = 'transform';\n  const div = document.createElement('div');\n\n  return div && div.style[ prefix ] !== undefined;\n}\n\nexport const isTransformSupported = isTransformAvailable();\n","import { isTouchEventsSupported, isTransformSupported } from './browser';\n\nfunction style (el, value) {\n  el.style['transform'] = value;\n  el.style['webkitTransform'] = value;\n}\n\nconst rippleAttribute = 'data-ripple';\n\nconst ripple = {\n  show: (e, el, { value = {} } = {}) => {\n    if (el.getAttribute(rippleAttribute) !== 'true') {\n      return;\n    }\n\n    const container = document.createElement('span');\n    const animation = document.createElement('span');\n\n    container.appendChild(animation);\n    container.className = 'telechart-ripple__container';\n\n    const size = el.clientWidth > el.clientHeight\n      ? el.clientWidth\n      : el.clientHeight;\n    animation.className = 'telechart-ripple__animation';\n    animation.style.width = `${size * (value.center ? 1 : 2)}px`;\n    animation.style.height = animation.style.width;\n\n    el.appendChild(container);\n\n    const computed = window.getComputedStyle(el);\n    if (computed.position !== 'absolute' &&\n      computed.position !== 'fixed') {\n      el.style.position = 'relative';\n    }\n\n    const offset = el.getBoundingClientRect();\n    const x = value.center ? '50%' : `${e.clientX - offset.left}px`;\n    const y = value.center ? '50%' : `${e.clientY - offset.top}px`;\n\n    animation.classList.add('telechart-ripple__animation_enter');\n    animation.classList.add('telechart-ripple__animation_visible');\n    style(animation, `translate(-50%, -50%) translate(${x}, ${y}) scale3d(0.01,0.01,0.01)`);\n    animation.dataset.activated = Date.now();\n\n    setTimeout(() => {\n      animation.classList.remove('telechart-ripple__animation_enter');\n      style(animation, `translate(-50%, -50%) translate(${x}, ${y})  scale3d(0.99,0.99,0.99)`);\n    }, 0);\n  },\n\n  hide: (el) => {\n    if (el.getAttribute(rippleAttribute) !== 'true') {\n      return;\n    }\n\n    const ripples = el.getElementsByClassName('telechart-ripple__animation');\n\n    if (ripples.length === 0) {\n      return;\n    }\n\n    const animation = ripples[ripples.length - 1];\n    const diff = Date.now() - Number(animation.dataset.activated);\n    let delay = 400 - diff;\n\n    delay = delay < 0 ? 0 : delay;\n\n    setTimeout(() => {\n      animation.classList.remove('telechart-ripple__animation_visible');\n\n      setTimeout(() => {\n        // Need to figure out a new way to do this\n        try {\n          if (ripples.length < 1) {\n            el.style.position = null;\n          }\n          animation.parentNode && el.removeChild(animation.parentNode);\n        } catch (e) {}\n      }, 300);\n    }, delay);\n  }\n};\n\n/**\n * @param el\n * @param binding\n */\nexport function attachRipple (el, binding) {\n  if (!isTransformSupported) {\n    return;\n  }\n\n  el.setAttribute( rippleAttribute, true );\n\n  if (isTouchEventsSupported()) {\n    el.addEventListener('touchend', () => ripple.hide(el), false);\n    el.addEventListener('touchcancel', () => ripple.hide(el), false);\n  }\n\n  el.addEventListener('mousedown', e => ripple.show(e, el, binding), false);\n  el.addEventListener('mouseup', () => ripple.hide(el), false);\n  el.addEventListener('mouseleave', () => ripple.hide(el), false);\n  el.addEventListener('dragstart', () => ripple.hide(el), false);\n}\n\n/**\n * @param el\n * @param binding\n */\nexport function detachRipple (el, binding) {\n  el.removeEventListener('touchstart', e => ripple.show(e, el, binding), false);\n  el.removeEventListener('mousedown', e => ripple.show(e, el, binding), false);\n  el.removeEventListener('touchend', () => ripple.hide(el), false);\n  el.removeEventListener('touchcancel', () => ripple.hide(el), false);\n  el.removeEventListener('mouseup', () => ripple.hide(el), false);\n  el.removeEventListener('mouseleave', () => ripple.hide(el), false);\n  el.removeEventListener('dragstart', () => ripple.hide(el), false);\n}\n","/**\n * @param {*} object\n * @param {Function} fn\n */\nexport function objectEachKey (object, fn = () => {}) {\n  Object.keys( object ).forEach( fn );\n}\n\n/**\n * @param {*} object\n * @param {Function} fn\n * @return {*[]}\n */\nexport function objectMapKey (object, fn = () => {}) {\n  return Object.keys( object ).map( fn );\n}\n\n/**\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nexport function clampNumber (value, min = -Infinity, max = Infinity) {\n  if (min > max) {\n    [ min, max ] = [ max, min ];\n  }\n  return Math.min( Math.max( value, min ), max );\n}\n\n/**\n * @param {*} value\n * @return {number}\n */\nexport function ensureNumber (value) {\n  value = Number(value);\n  if (Number.isNaN(value)) {\n    return 0;\n  }\n  return value;\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nexport function isObject (value) {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * @param {Date|*} value\n * @return {boolean}\n */\nexport function isDate (value) {\n  return value instanceof Date && !isNaN( value.valueOf() );\n}\n","/**\n * @param {string} text\n * @return {string}\n */\nexport function capitalize (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return text[ 0 ].toUpperCase() + text.substr(1);\n}\n\n/**\n * @param {Object} styleObject\n * @returns {string}\n */\nexport function cssText (styleObject = {}) {\n  return Object.keys( styleObject ).reduce((css, prop) => {\n    return `${css ? css + ' ' : ''}${camelToKebabCase( prop )}: ${styleObject[ prop ]};`;\n  }, '');\n}\n\n/**\n * @param {string} text\n * @returns {string}\n */\nexport function camelToKebabCase (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return (\n    text[ 0 ].toLowerCase() + text.substr( 1 )\n  ).replace( /([A-Z])/g, '-$1' ).toLowerCase();\n}\n\n/**\n * @param {string} href\n * @return {*}\n */\nexport function parseQueryString (href) {\n  const queryString = href.split('?').slice(1);\n  if (!queryString.length) {\n    return {};\n  }\n\n  return queryString[ 0 ].split( '&' ).map(part => {\n    const keyValue = part.split( '=' );\n    return {\n      [keyValue[ 0 ]]: keyValue[ 1 ]\n    };\n  }).reduce((result, obj) => {\n    return Object.assign(result, obj);\n  })\n}\n","import { objectEachKey } from \"./base\";\nimport { camelToKebabCase } from './text';\n\n/**\n * @param {string} tagName\n * @param {Object} options\n * @param {Array|*} children\n * @param {string|*} ns\n * @return {Element}\n */\nexport function createElement (tagName, options = {}, children = [], ns = null) {\n  const element = !ns\n    ? document.createElement( tagName )\n    : document.createElementNS( ns, tagName );\n\n  if (options.attrs) {\n    !options.useNS\n      ? setAttributes( element, options.attrs )\n      : setAttributesNS( element, options.attrs, options.attrsNS || null );\n  }\n\n  if (children || Array.isArray( children )) {\n    children = [].concat( children );\n    children.forEach(node => {\n      if (typeof node === 'string') {\n        // optimistic way\n        if (/[<>]/i.test( node )) {\n          element.innerHTML += node;\n        } else {\n          element.textContent += node;\n        }\n      } else {\n        element.appendChild( node );\n      }\n    });\n  }\n\n  return element;\n}\n\n/**\n * @param {Element|string} elementOrSelector\n * @return {Element | null}\n */\nexport function resolveElement (elementOrSelector) {\n  if (typeof elementOrSelector !== 'string') {\n    return elementOrSelector;\n  }\n  return document.querySelector( elementOrSelector );\n}\n\n/**\n * @param {Element} element\n * @return {{top: number, left: number}}\n */\nexport function getElementOffset (element) {\n  if (!element) {\n    return { top: 0, left: 0 };\n  }\n\n  try {\n    // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n    const rect = element.getBoundingClientRect();\n    const win = element.ownerDocument.defaultView;\n    return {\n      top: rect.top + win.pageYOffset,\n      left: rect.left + win.pageXOffset\n    };\n  } catch (e) {\n    return { top: 0, left: 0 };\n  }\n}\n\n/**\n * @param {Element} targetElement\n * @param {Element} relativeElement\n * @return {{ top: number, left: number }}\n */\nexport function getElementRelativeOffset (targetElement, relativeElement) {\n  const targetOffset = getElementOffset(targetElement);\n  const relativeOffset = getElementOffset(relativeElement);\n\n  return {\n    top: targetOffset.top - relativeOffset.top + relativeElement.scrollTop,\n    left: targetOffset.left - relativeOffset.left + relativeElement.scrollLeft\n  };\n}\n\n/**\n * @returns {number}\n */\nexport function getDocumentHeight () {\n  return Math.max(\n    document.body.scrollHeight,\n    document.documentElement.scrollHeight,\n    document.body.offsetHeight,\n    document.documentElement.offsetHeight,\n    document.body.clientHeight,\n    document.documentElement.clientHeight\n  );\n}\n\n/**\n * @return {number}\n */\nexport function getDocumentScrollTop () {\n  const supportPageOffset = window.pageXOffset !== undefined;\n  const isCSS1Compat = ((document.compatMode || \"\") === \"CSS1Compat\");\n\n  return supportPageOffset\n    ? window.pageYOffset\n    : isCSS1Compat\n      ? document.documentElement.scrollTop\n      : document.body.scrollTop;\n}\n\n/**\n * @returns {number}\n */\nexport function getWindowHeight () {\n  return window.innerHeight ||\n    (document.documentElement || document.body).clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementHeight (element) {\n  return element.innerHeight || element.clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementWidth (element) {\n  return element.innerWidth || element.clientWidth;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollHeight (element) {\n  return Math.max(\n    element.scrollHeight,\n    element.offsetHeight,\n    element.clientHeight\n  );\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollWidth (element) {\n  return Math.max(\n    element.scrollWidth,\n    element.offsetWidth,\n    element.clientWidth\n  );\n}\n\nconst camelCaseAttrWhiteList = [\n  'viewBox',\n  'gradientTransform'\n];\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n */\nexport function setAttributes (element, attrs = {}) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttribute( attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n * @param {string | *} ns\n */\nexport function setAttributesNS (element, attrs = {}, ns = null) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttributeNS( ns, attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {string} attr\n * @param {*} value\n * @param {string | *} ns\n */\nexport function setAttributeNS (element, attr, value, ns) {\n  // it's a magic but it increases speed for 1-2ms on slow devices\n  // prevent from babel optimisation\n  ns = ns || null;\n  element.setAttributeNS( ns, attr, value );\n}\n\n/**\n * @param element\n */\nexport function removeElement (element) {\n  if (element && element.parentNode) {\n    element.parentNode.removeChild( element );\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} className\n */\nexport function hasClass (element, className) {\n  if (element.classList) {\n    // return element.classList.contains( className );\n  }\n  return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test( element.className );\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function addClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    // return element.classList.add( ...classNames );\n  }\n\n  let className = element.className;\n\n  for (let i = 0; i < classNames.length; ++i) {\n    if (!hasClass( element, classNames[ i ] )) {\n      className += ` ${classNames[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function removeClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    // return element.classList.remove( ...classNames );\n  }\n\n  let existingClasses = element.className.split( ' ' );\n  let classesToDelete = new Set( classNames );\n  let className = '';\n\n  for (let i = 0; i < existingClasses.length; ++i) {\n    if (!classesToDelete.has( existingClasses[ i ] )) {\n      className += ` ${existingClasses[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n","/**\n * @param {Element | Window} element\n * @param {string} eventName\n * @param {Function} cb\n */\nexport function addEventListenerOnce (element, eventName, cb) {\n  if (!element) {\n    return console.warn( 'Element is missing' );\n  }\n\n  const listener = ev => {\n    cb( ev );\n    element.removeEventListener( eventName, listener );\n  };\n\n  element.addEventListener( eventName, listener );\n}\n","export const ROOT_CLASS_NAME = 'telechart-root';\n\n/**\n * @param {string} themeName\n * @returns {string}\n */\nexport function interpolateThemeClass (themeName) {\n  return `${ROOT_CLASS_NAME}_theme_${themeName}`;\n}\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemes = {\n  default: 'default',\n  dark: 'dark'\n};\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemesColors = {\n  default: '#ffffff',\n  dark: '#242F3E'\n};\n","/**\n * @param {Array<*>} arrayA\n * @param {Array<*>} arrayB\n * @param {string | *} key\n * @return {boolean}\n */\nexport function arraysEqual (arrayA, arrayB, key = null) {\n  if (!Array.isArray(arrayA)\n    || !Array.isArray(arrayB)\n    || arrayA.length !== arrayB.length) {\n    return false;\n  }\n  for (let i = 0; i < arrayA.length; ++i) {\n    if (key) {\n      if (arrayA[ i ][ key ] !== arrayB[ i ][ key ]) {\n        return false;\n      }\n    } else if (arrayA[ i ] !== arrayB[ i ]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMinIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return minIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMin (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMinIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMaxIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n  }\n  return maxIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMax (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMaxIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMaxIndexes (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return [ minIndex, maxIndex ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMax (array, startIndex = 0, endIndex = array.length - 1) {\n  const [ minIndex, maxIndex ] = arrayMinMaxIndexes( array, startIndex, endIndex );\n  return [\n    array[ minIndex ],\n    array[ maxIndex ],\n  ];\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arraySum (array) {\n  let length = array.length;\n  let sum = 0;\n\n  while (length--) {\n    sum += array[ length ];\n  }\n\n  return sum;\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arrayAvg (array) {\n  let length = array.length;\n  let result = arraySum( array );\n\n  // prevent from dividing by zero\n  if (length) {\n    result = result / length;\n  }\n\n  return result;\n}\n\n/**\n * Finds boundary indexes in an array of numbers\n *\n * @param {Array<number>} array\n * @param {number} value\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchIndexes (array, value, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ] === value) {\n    left = right;\n  } else if (array[ left ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n\n/**\n * Finds boundary indexes in an array of objects\n *\n * @param {Array<Object>} array\n * @param {number} value\n * @param {string} key\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchObjectIndexes (array, value, key, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ][ key ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ][ key ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ][ key ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ][ key ] === value) {\n    left = right;\n  } else if (array[ left ][ key ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n\n/**\n * @param {Array} arrayA\n * @param {Array} arrayB\n * @return {Array}\n */\nexport function arrayDiff (arrayA = [], arrayB = []) {\n  const dict = Object.create( null );\n\n  for (let i = 0; i < arrayA.length; ++i) {\n    dict[ arrayA[ i ] ] = true;\n  }\n\n  const result = [];\n  for (let i = 0; i < arrayB.length; ++i) {\n    if (!dict[ arrayB[ i ] ]) {\n      result.push( arrayB[ i ] );\n    }\n  }\n\n  return result;\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { FRAMES_PER_SECOND } from '../../utils';\n\nexport const AnimationSourceEvents = {\n  UPDATE: 'update'\n};\n\nexport class AnimationSource extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeElapsed = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateInvokes = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updatesPerSecond = 60;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateEach = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateAt = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _paused = false;\n\n  /**\n   * @param {number} updatesPerSecond\n   * @param {number} timeScale\n   */\n  constructor (updatesPerSecond = 60, timeScale = 1) {\n    super();\n\n    this._updatesPerSecond = Math.min( 60, Math.max( 1e-8, updatesPerSecond ) );\n    this._updateEach = FRAMES_PER_SECOND / this._updatesPerSecond;\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (this._paused) {\n      return;\n    }\n\n    this._timeElapsed += deltaTime;\n    this._updateInvokes++;\n\n    if (this._updateInvokes % this._updateEach < 1) {\n      this._callUpdate( ( this._timeElapsed - this._lastUpdateAt ) * this._timeScale );\n      this._lastUpdateAt = this._timeElapsed;\n    }\n  }\n\n  /**\n   * Disposes the instance\n   */\n  dispose () {\n    this._paused = true;\n    this.removeAllListeners();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._paused;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return !this._paused;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set timeScale (value) {\n    this._timeScale = value;\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _callUpdate (deltaTime) {\n    this.emit( AnimationSourceEvents.UPDATE, deltaTime );\n  }\n}\n","import { EventEmitter } from \"./misc/EventEmitter\";\nimport {\n  capitalize,\n  clampNumber,\n  createElement,\n  getElementWidth,\n  resolveElement, setAttributeNS,\n  setAttributes,\n  setAttributesNS\n} from \"../utils\";\n\nconst telechartTitle = `${capitalize( TELECHART_NAME )} ${TELECHART_VERSION} (c) ${TELECHART_AUTHOR}`;\n\nlet INTERNAL_AUTOINCREMENT = 1;\n\nexport class SvgRenderer extends EventEmitter {\n\n  static NS = 'http://www.w3.org/2000/svg';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = INTERNAL_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parentContainer = null;\n\n  /**\n   * @type {SVGElement}\n   * @private\n   */\n  _svgContainer = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minHeight = 440;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minWidth = 100;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _width = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _isInitialized = false;\n\n  /**\n   * @param {Element|string} contextElement\n   */\n  constructor (contextElement) {\n    super();\n\n    this._parentContainer = resolveElement( contextElement );\n    this._init();\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>} children\n   * @param {Element} parent\n   * @return {Element}\n   */\n  createGroup (attrs = {}, children = [], parent = this._svgContainer) {\n    const group = createElement('g', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>|*} children\n   * @param {Element} parent\n   * @return {SVGClipPathElement}\n   */\n  createClipPath (attrs = {}, children = [], parent = this._svgContainer) {\n    const clipPath = createElement('clipPath', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n\n    parent.appendChild( clipPath );\n\n    return clipPath;\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>|*} children\n   * @param {Element} parent\n   * @return {SVGMaskElement}\n   */\n  createMask (attrs = {}, children = [], parent = this._svgContainer) {\n    const mask = createElement('mask', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n\n    parent.appendChild( mask );\n\n    return mask;\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<*>} stops\n   * @param {Element} parent\n   * @return {SVGLinearGradientElement}\n   */\n  createLinearGradient (attrs = {}, stops = [], parent = this._svgContainer) {\n    const stopElements = stops.map(stopAttrs => {\n      return createElement('stop', {\n        useNS: true,\n        attrs: stopAttrs\n      }, [], SvgRenderer.NS);\n    });\n\n    const gradient = createElement('linearGradient', {\n      useNS: true,\n      attrs\n    }, stopElements, SvgRenderer.NS);\n\n    parent.appendChild( gradient );\n\n    return gradient;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Element} parent\n   * @return {SVGDescElement}\n   */\n  createDesc (text = '', parent = this._svgContainer) {\n    const group = createElement('desc', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGTextElement}\n   */\n  createText (text = '', attrs = {}, parent = this._svgContainer) {\n    const tspan = createElement('tspan', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n\n    const textElement = createElement('text', {\n      useNS: true,\n      attrs\n    }, tspan, SvgRenderer.NS);\n\n    parent.appendChild( textElement );\n\n    return textElement;\n  }\n\n  /**\n   * @param {Element} parent\n   * @return {SVGDefsElement}\n   */\n  createDefs (parent = this._svgContainer) {\n    const element = createElement('defs', {\n      useNS: true\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( element );\n\n    return element;\n  }\n\n  /**\n   * @param {string} pathText\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGPathElement}\n   */\n  createPath (pathText, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, { d: pathText });\n\n    const pathElement = createElement('path', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n    parent.appendChild( pathElement );\n\n    return pathElement;\n  }\n\n  /**\n   * @param {SVGPathElement} pathElement\n   * @param {string} pathText\n   */\n  updatePath (pathElement, pathText) {\n    setAttributeNS( pathElement, 'd', pathText, null );\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   * @param {*} attrs\n   * @param {SVGElement | Element} parent\n   * @return {SVGRectElement}\n   */\n  createRect (width, height, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, {\n      width, height\n    });\n\n    const rectElement = createElement('rect', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( rectElement );\n\n    return rectElement;\n  }\n\n  /**\n   * @param {number} cx\n   * @param {number} cy\n   * @param {number} radius\n   * @param {*} attrs\n   * @param {SVGElement | Element} parent\n   * @return {SVGCircleElement}\n   */\n  createCircle (cx = 0, cy = 0, radius = 1, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, {\n      cx, cy, r: radius\n    });\n\n    const circleElement = createElement('circle', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( circleElement );\n\n    return circleElement;\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Element}\n   */\n  querySelector (selector) {\n    return this._svgContainer.querySelector( selector );\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Array<Element>}\n   */\n  querySelectorAll (selector) {\n    return Array.from( this._svgContainer.querySelectorAll( selector ) );\n  }\n\n  /**\n   * Destroy the renderer\n   */\n  destroy () {\n    this._detachEvents();\n    this._clearParentContainer();\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {Element}\n   */\n  get parentContainer () {\n    return this._parentContainer;\n  }\n\n  /**\n   * @return {SVGElement}\n   */\n  get svgContainer () {\n    return this._svgContainer;\n  }\n\n  /**\n   * @return {number}\n   */\n  get width () {\n    return this._width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get height () {\n    return this._height;\n  }\n\n  /**\n   * @return {string}\n   */\n  get viewBox () {\n    return [ 0, 0, this._width, this._height ].join( ' ' );\n  }\n\n  /**\n   * @private\n   */\n  _init () {\n    if (this._isInitialized) {\n      return;\n    }\n\n    this._updateDimensions();\n    this._svgContainer = this._createSvgContainer();\n    this._insertSvgContainer();\n\n    this.createDesc( telechartTitle );\n\n    this._attachEvents();\n\n    this._isInitialized = true;\n  }\n\n  /**\n   * @return {Element}\n   * @private\n   */\n  _createSvgContainer () {\n    const parentContainer = this._parentContainer;\n\n    if (!parentContainer) {\n      throw new Error( 'Parent container is not provided' );\n    }\n\n    return createElement('svg', {\n      useNS: false,\n      attrs: {\n        xmlns: SvgRenderer.NS,\n        version: '1.1',\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox,\n        class: 'telechart-render'\n      }\n    }, [], SvgRenderer.NS);\n  }\n\n  /**\n   * @private\n   */\n  _insertSvgContainer () {\n    this._clearParentContainer();\n    this._parentContainer.appendChild( this._svgContainer );\n  }\n\n  /**\n   * @private\n   */\n  _updateDimensions () {\n    this._width = clampNumber(\n      getElementWidth( this._parentContainer ),\n      this._minWidth\n    );\n    this._height = this._minHeight;\n\n    if (this._svgContainer) {\n      setAttributes(this._svgContainer, {\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  _clearParentContainer () {\n    // clears the child content\n    this._parentContainer.innerHTML = '';\n  }\n\n  /**\n   * @private\n   */\n  _onResize (ev) {\n    this._updateDimensions();\n    this.emit( 'resize', ev );\n  }\n\n  /**\n   * @private\n   */\n  _attachEvents () {\n    this._attachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _detachEvents () {\n    this._detachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _attachResizeListener () {\n    if (this._resizeListener) {\n      this._detachResizeListener();\n    }\n\n    this._resizeListener = this._onResize.bind( this );\n    window.addEventListener( 'resize', this._resizeListener );\n  }\n\n  /**\n   * @private\n   */\n  _detachResizeListener () {\n    if (!this._resizeListener) {\n      return;\n    }\n\n    window.removeEventListener( 'resize', this._resizeListener );\n    this._resizeListener = null;\n  }\n}\n","/**\n * @type {{x: string, line: string}}\n */\nexport const SeriesTypes = {\n  x: 'x',\n  line: 'line'\n};\n","export const PointTypes = {\n  point: 'point',\n  group: 'group',\n};\n\nlet POINT_AUTOINCREMENT = 1;\n\nexport class Point {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = POINT_AUTOINCREMENT++;\n\n  /**\n   * @enum 'point' | 'group'\n   * @type {string}\n   * @private\n   */\n  _type = 'point';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _x = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _y = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgY = 0;\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor (x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n  }\n\n  /**\n   * @param {string} pointType\n   */\n  setType (pointType = 'point') {\n    this._type = pointType;\n  }\n\n  /**\n   * @param {number} x\n   */\n  setX (x) {\n    this._x = x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  setY (y) {\n    this._y = y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  setXY (x, y) {\n    this.setX( x );\n    this.setY( y );\n  }\n\n  /**\n   * @param {number} x\n   */\n  addX (x) {\n    this._x += x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  addY (y) {\n    this._y += y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  addXY (x, y) {\n    this.addX( x );\n    this.addY( y );\n  }\n\n  /**\n   * @param {number} svgX\n   */\n  setSvgX (svgX) {\n    this._svgX = svgX;\n  }\n\n  /**\n   * @param {number} svgY\n   */\n  setSvgY (svgY) {\n    this._svgY = svgY;\n  }\n\n  /**\n   * @param {number} svgX\n   * @param {number} svgY\n   */\n  setSvgXY (svgX, svgY) {\n    this._svgX = svgX;\n    this._svgY = svgY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get x () {\n    return this._x;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get y () {\n    return this._y;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgX () {\n    return this._svgX;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgY () {\n    return this._svgY;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get type () {\n    return this._type;\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport * as timingFunctions from '../../utils';\n\nlet TWEEN_ID = 1;\n\nexport const TweenState = {\n  NOT_STARTED: 1,\n  RUNNING: 2,\n  PAUSED: 3,\n  COMPLETED: 4,\n  CANCELLED: 5\n};\n\nexport const TweenEvents = {\n  STARTED: 'started',\n  PAUSED: 'paused',\n  COMPLETE: 'complete',\n  CANCELLED: 'cancelled'\n};\n\nconst DEFAULT_PARAMS = {\n  timeScale: 1,\n  duration: 500,\n  timingFunction: 'linear'\n};\n\nexport class Tween extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = TWEEN_ID++;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _params = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _state = TweenState.NOT_STARTED;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeScale = DEFAULT_PARAMS.timeScale;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeElapsed = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _duration = DEFAULT_PARAMS.duration;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _timingFunctionName = DEFAULT_PARAMS.timingFunction;\n\n  /**\n   * @type {Function}\n   * @private\n   */\n  _timingFunction = () => {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _target = null;\n\n  /**\n   * @type {Array<string | number>}\n   * @private\n   */\n  _properties = [];\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  _targetValues = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _startValues = [];\n\n  /**\n   * @param {Array<*>} args\n   * @returns {Tween}\n   */\n  static create (...args) {\n    return new Tween( ...args );\n  }\n\n  /**\n   * @param {*} target\n   * @param {string|Array<string | number>} properties\n   * @param {number|Array<number>} targetValues\n   * @param {*} params\n   */\n  constructor (target, properties = [], targetValues = [], params = {}) {\n    super();\n\n    this._target = target;\n    this._properties = [].concat( properties );\n    this._targetValues = [].concat( targetValues );\n    this._initParams( params );\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (!this.isRunning) {\n      return;\n    }\n\n    deltaTime *= this._timeScale;\n    this._timeElapsed += deltaTime;\n\n    this._updateAnimation( deltaTime );\n    this._checkDuration();\n  }\n\n  /**\n   * Runs animation\n   */\n  start () {\n    if (this.isNotStarted) {\n      this._startValues = this._getPropertyValues( this._properties );\n    }\n    this._state = TweenState.RUNNING;\n    this.emit( TweenEvents.STARTED );\n  }\n\n  /**\n   * Stops animation\n   */\n  pause () {\n    this._state = TweenState.PAUSED;\n    this.emit( TweenEvents.PAUSED );\n  }\n\n  /**\n   * Finish & dispose the tween\n   */\n  finish () {\n    this._state = TweenState.COMPLETED;\n    this.emit( TweenEvents.COMPLETE, this._timeElapsed );\n    this._dispose();\n  }\n\n  /**\n   * Cancels current animation\n   */\n  cancel () {\n    this._state = TweenState.CANCELLED;\n    this.emit( TweenEvents.CANCELLED, this._timeElapsed );\n    this._dispose();\n  }\n\n  /**\n   * @param {Array<number>} targetValues\n   */\n  patchAnimation (targetValues = []) {\n    this._targetValues = targetValues;\n    this._startValues = this._getPropertyValues( this._properties );\n    this._timeElapsed = 0;\n  }\n\n  /**\n   * @param {number} timeScale\n   */\n  setTimeScale (timeScale = 1) {\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isNotStarted () {\n    return this._state === TweenState.NOT_STARTED;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return this._state === TweenState.RUNNING;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._state === TweenState.PAUSED;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isCompleted () {\n    return this._state === TweenState.COMPLETED;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get duration () {\n    return this._duration;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get timingFunctionName () {\n    return this._timingFunctionName;\n  }\n\n  /**\n   * @returns {Function}\n   */\n  get timingFunction () {\n    return this._timingFunction;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeRemaining () {\n    return Math.max( 0, Math.min( this._duration, this._duration - this._timeElapsed ) );\n  }\n\n  /**\n   * @returns {number}\n   */\n  get progress () {\n    return Math.min( 1, Math.max( 0, this._timeElapsed / this._duration ) );\n  }\n\n  /**\n   * @param {*} params\n   * @private\n   */\n  _initParams (params) {\n    let {\n      timeScale,\n      duration,\n      timingFunction\n    } = this._params = Object.assign( {}, DEFAULT_PARAMS, params );\n\n    this._timeScale = timeScale;\n    this._duration = duration;\n    this._timingFunctionName = timingFunction;\n    this._timingFunction = this._getTimingFunction( timingFunction );\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _updateAnimation (deltaTime) {\n    const progress = this.progress;\n    const timingProgress = this._timingFunction( progress );\n\n    for (let i = 0, length = this._properties.length; i < length; ++i) {\n      const property = this._properties[ i ];\n      const delta = ( this._targetValues[ i ] - this._startValues[ i ] ) * timingProgress;\n      this._target[ property ] = this._startValues[ i ] + delta;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _checkDuration () {\n    if (this._timeElapsed >= this._duration) {\n      this.finish();\n    }\n  }\n\n  /**\n   * @param {Array<string>} properties\n   * @returns {Array<number>}\n   * @private\n   */\n  _getPropertyValues (properties = []) {\n    let values = [];\n    for (let i = 0, length = properties.length; i < length; ++i) {\n      values[ i ] = this._getPropertyValue( properties[i] );\n    }\n    return values;\n  }\n\n  /**\n   * @param {string} property\n   * @returns {number}\n   * @private\n   */\n  _getPropertyValue (property) {\n    return this._target[ property ] || 0;\n  }\n\n  /**\n   * @param {string} functionName\n   * @returns {Function}\n   * @private\n   */\n  _getTimingFunction (functionName) {\n    const defaultFunctionName = DEFAULT_PARAMS.timingFunction;\n    return timingFunctions[ functionName ] || timingFunctions[ defaultFunctionName ];\n  }\n\n  /**\n   * Disposes the object\n   *\n   * @private\n   */\n  _dispose () {\n    this._params = null;\n    this._timingFunction = null;\n    this._targetValues = null;\n    this._startValues = null;\n    this._properties = null;\n    this._target = null;\n\n    this.removeAllListeners();\n  }\n}\n","/**\n * @type {{navigatorChart: string, chart: string}}\n */\nexport const ChartTypes = {\n  chart: 'chart',\n  navigatorChart: 'navigatorChart'\n};\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { arrayMinMax, arraysEqual, setAttributeNS, setAttributesNS } from '../../utils';\nimport { Point } from '../point/Point';\nimport { PointGroup } from '../point/PointGroup';\nimport { Tween, TweenEvents } from '../animation/Tween';\nimport { ChartTypes } from '../chart/ChartTypes';\n\nlet SERIES_AUTOINCREMENT = 1;\n\nexport const OpacityAnimationType = {\n  hiding: 1,\n  showing: 2\n};\n\nexport class Series extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = SERIES_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parent = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _isSimpleChart = false;\n\n  /**\n   * @type {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   * @private\n   */\n  _settings = {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _seriesOptions = {};\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _yAxis = [];\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _name = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _label = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _color = '#31a8dc';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _strokeWidth = 1;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _visible = true;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _group = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _pathText = null;\n\n  /**\n   * @type {SVGPathElement}\n   * @private\n   */\n  _pathElement = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _pathUpdateNeeded = false;\n\n  /**\n   * @type {SVGCircleElement}\n   * @private\n   */\n  _marker = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _markersGroup = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _markerVisible = false;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _markerAnimation = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _markerRadius = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _maxMarkerRadius = 4;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _markerPointIndex = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _markerPositionUpdateNeeded = false;\n\n  /**\n   * @type {Array<Point>}\n   * @private\n   */\n  _points = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _opacity = 1;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _opacityAnimation = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _opacityAnimationType = null;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Element} parent\n   * @param {*} settings\n   */\n  constructor (renderer, parent, settings = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._parent = parent;\n    this._settings = settings;\n    this._parseSettings();\n  }\n\n  /**\n   * Initializes series with options\n   */\n  initialize () {\n    this._createPoints();\n    this._addEvents();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    let pathUpdated = false;\n\n    if (this._pathUpdateNeeded) {\n      this.updateViewportPoints();\n      this.updatePath();\n\n      this._pathUpdateNeeded = false;\n      pathUpdated = true;\n    }\n\n    if (this._opacityAnimation\n      && this._opacityAnimation.isRunning) {\n      this._opacityAnimation.update( deltaTime );\n      this.updatePathOpacity();\n    }\n\n    // only base charts has markers\n    if (this._isSimpleChart) {\n      if (this._markerPositionUpdateNeeded || pathUpdated) {\n        this._updateMarkerPosition();\n\n        this._markerPositionUpdateNeeded = false;\n      }\n\n      const markerAnimation = this._markerAnimation;\n      const hasMarkerAnimation = markerAnimation && markerAnimation.isRunning;\n      if (hasMarkerAnimation) {\n        markerAnimation.update( deltaTime );\n\n        this.updateMarkerRadius();\n      }\n    }\n  }\n\n  /**\n   * Creates path\n   */\n  firstRender () {\n    if (this._pathElement) {\n      return;\n    }\n\n    // update svgX & svgY for each point\n    this.updateViewportPoints();\n\n    // creates and stores wrapper for following path element\n    this._createGroup();\n\n    // creates and stores initial path element\n    this._createPath();\n\n    if (this._isSimpleChart) {\n      this._createMarker();\n    }\n  }\n\n  /**\n   * @param {Chart | NavigatorChart | BaseChart} chart\n   */\n  setChart (chart) {\n    this._chart = chart;\n    this._isSimpleChart = chart.chartType === ChartTypes.chart;\n  }\n\n  /**\n   * Shows series on the chart\n   */\n  setVisible () {\n    this._visible = true;\n    this._createShowAnimation();\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Hides series from the chart\n   */\n  setInvisible () {\n    this._visible = false;\n    this._createHideAnimation();\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Toggles series\n   */\n  toggleVisible () {\n    this._visible\n      ? this.setInvisible()\n      : this.setVisible();\n  }\n\n  showMarker () {\n    this._createMarkerShowAnimation();\n    this._markerVisible = true;\n  }\n\n  hideMarker () {\n    this._createMarkerHideAnimation();\n    this._markerVisible = false;\n  }\n\n  toggleMarker () {\n    this._markerVisible\n      ? this.hideMarker()\n      : this.showMarker();\n  }\n\n  /**\n   * @private\n   */\n  updateLocalExtremes () {\n    const [ rangeStartIndex, rangeEndIndex ] = this._chart._viewportRangeIndexes;\n\n    const [ minValue, maxValue ] = arrayMinMax(\n      this._yAxis, rangeStartIndex, rangeEndIndex\n    );\n\n    this._localMinY = minValue;\n    this._localMaxY = maxValue;\n  }\n\n  /**\n   * Updates viewport points\n   */\n  updateViewportPoints () {\n    this._chart._useViewportPointsInterval\n      ? this.updateViewportPointsByInterval()\n      : this.updateViewportPointsByArray();\n  }\n\n  /**\n   * Updates points by array of points\n   */\n  updateViewportPointsByArray () {\n    const indexes = this._chart._viewportPointsIndexes;\n\n    for (let i = 0; i < indexes.length; ++i) {\n      const pointIndex = indexes[ i ];\n      const point = this._points[ pointIndex ];\n      point.setSvgXY(\n        this._chart.projectXToSvg( point.x ),\n        this._chart.projectYToSvg( point.y ),\n      );\n    }\n  }\n\n  /**\n   * Updates points by interval\n   */\n  updateViewportPointsByInterval () {\n    const [ startIndex, endIndex ] = this._chart._viewportPointsIndexes;\n    for (let i = startIndex; i <= endIndex; ++i) {\n      const point = this._points[ i ];\n      point.setSvgXY(\n        this._chart.projectXToSvg( point.x ),\n        this._chart.projectYToSvg( point.y ),\n      );\n    }\n  }\n\n  /**\n   * Recompute path text\n   */\n  updatePath () {\n    this._updatePathText();\n    this._renderer.updatePath( this._pathElement, this._pathText );\n  }\n\n  /**\n   * Recompute path text\n   */\n  updatePathOpacity () {\n    setAttributeNS( this._pathElement, 'opacity', this._opacity, null );\n  }\n\n  /**\n   * Recompute path text\n   */\n  updateMarkerRadius () {\n    setAttributeNS( this._marker, 'r', this._markerRadius, null );\n  }\n\n  /**\n   * Mark to update path in next animation frame\n   */\n  requestPathUpdate () {\n    this._pathUpdateNeeded = true;\n  }\n\n  /**\n   * Mark to update marker in next animation frame\n   */\n  setMarkerPointIndex (index) {\n    this._markerPointIndex = index;\n    this._markerPositionUpdateNeeded = true;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {string}\n   */\n  get label () {\n    return this._label;\n  }\n\n  /**\n   * @return {string}\n   */\n  get color () {\n    return this._color;\n  }\n\n  /**\n   * @return {string}\n   */\n  get name () {\n    return this._name;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isVisible () {\n    return this._visible;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @return {string}\n   */\n  get opacityAnimationType () {\n    return this._opacityAnimationType;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isShowing () {\n    return this._opacityAnimationType === OpacityAnimationType.showing;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isHiding () {\n    return this._opacityAnimationType === OpacityAnimationType.hiding;\n  }\n\n  /**\n   * @private\n   */\n  _parseSettings () {\n    const {\n      xAxis, yAxis,\n      label, type,\n      color, name,\n      options = {}\n    } = this._settings;\n\n    this._xAxis = xAxis;\n    this._yAxis = yAxis;\n    this._label = label;\n    this._color = color;\n    this._name = name;\n\n    const {\n      strokeWidth = 1\n    } = options;\n\n    this._strokeWidth = strokeWidth;\n\n    this._seriesOptions = options;\n  }\n\n  /**\n   * @private\n   */\n  _createGroup () {\n    this._group = this._renderer.createGroup({\n      class: 'telechart-series-path-group',\n      id: `telechart-path-${this._id}`,\n      x: 0,\n      y: 0\n    }, [], this._parent);\n  }\n\n  /**\n   * @private\n   */\n  _createPath () {\n    this._updatePathText();\n\n    this._pathElement = this._renderer.createPath(this._pathText, {\n      class: 'telechart-series-path',\n      d: this._pathText,\n      fill: 'none',\n      stroke: this._color,\n      strokeWidth: this._strokeWidth,\n      strokeLinejoin: 'round',\n      strokeLinecap: 'round'\n    }, this._group);\n  }\n\n  /**\n   * @private\n   */\n  _updatePathText () {\n    this._pathText = this._chart._useViewportPointsInterval\n      ? this._computePathTextByInterval( this._chart._viewportPointsIndexes )\n      : this._computePathTextByArray( this._chart._viewportPointsIndexes );\n  }\n\n  /**\n   * @private\n   */\n  _createPoints () {\n    const xAxis = this._xAxis;\n    const yAxis = this._yAxis;\n\n    for (let i = 0; i < xAxis.length; ++i) {\n      this._points.push(\n        new Point( xAxis[ i ], yAxis[ i ] )\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  _createMarker () {\n    if (!this._markerGroup) {\n      this._markerGroup = this._resolveMarkersGroup();\n    }\n\n    this._marker = this._renderer.createCircle(0, 0, this._markerRadius, {\n      class: 'telechart-chart-marker',\n      stroke: this._color,\n      strokeWidth: 2,\n      fill: 'white'\n    }, this._markerGroup);\n  }\n\n  /**\n   * @return {Element}\n   * @private\n   */\n  _resolveMarkersGroup () {\n    const markersGroupClass = 'telechart-chart-markers';\n    const markersGroup = this._renderer.svgContainer.querySelector( `.${markersGroupClass}` );\n\n    if (markersGroup) {\n      return markersGroup;\n    }\n\n    return this._renderer.createGroup({\n      class: markersGroupClass,\n      transform: `translate(0, ${this._chart._seriesGroupTop}) scale(1 1)`,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _updateMarkerPosition () {\n    const x = this._xAxis[ this._markerPointIndex ];\n    const y = this._yAxis[ this._markerPointIndex ];\n\n    const svgX = this._chart.projectXToSvg( x );\n    const svgY = this._chart.projectYToSvg( y );\n\n    setAttributesNS(this._marker, {\n      cx: svgX,\n      cy: svgY\n    });\n  }\n\n  /**\n   * @private\n   */\n  _addEvents () {\n    this._renderer.on('resize', _ => {\n      this._onRendererResize();\n    });\n  }\n\n  /**\n   * @private\n   */\n  _onRendererResize () {\n    this._pathUpdateNeeded = true;\n  }\n\n  /**\n   * @param {Array<number>} indexes\n   * @return {string}\n   * @private\n   */\n  _computePathTextByArray (indexes) {\n    let result = '';\n\n    if (!indexes.length) {\n      return result;\n    }\n\n    result += 'M';\n\n    let point;\n\n    for (let i = 0; i < indexes.length; ++i) {\n      if (i !== 0) {\n        result += 'L';\n      }\n\n      point = this._points[ indexes[ i ] ];\n\n      result += point.svgX + ' ' + point.svgY;\n    }\n\n    return result;\n  }\n\n  /**\n   * @param {Array<number>} interval\n   * @return {string}\n   * @private\n   */\n  _computePathTextByInterval (interval) {\n    let result = '';\n\n    if (!interval.length\n      || interval[ 1 ] - interval[ 0 ] <= 0) {\n      return result;\n    }\n\n    result += 'M';\n\n    const [ startIndex, endIndex ] = interval;\n\n    for (let i = startIndex; i <= endIndex; ++i) {\n      const point = this._points[ i ];\n\n      if (i !== startIndex) {\n        result += 'L';\n      }\n\n      result += point.svgX + ' ' + point.svgY;\n    }\n\n    return result;\n  }\n\n  /**\n   * @private\n   */\n  _createShowAnimation () {\n    if (this._opacityAnimation\n      && this._opacityAnimationType === OpacityAnimationType.showing) {\n      return;\n    }\n    this._createOpacityAnimation( 1 );\n    this._opacityAnimationType = OpacityAnimationType.showing;\n  }\n\n  /**\n   * @private\n   */\n  _createHideAnimation () {\n    if (this._opacityAnimation\n      && this._opacityAnimationType === OpacityAnimationType.hiding) {\n      return;\n    }\n    this._createOpacityAnimation( 0 );\n    this._opacityAnimationType = OpacityAnimationType.hiding;\n  }\n\n  /**\n   * @param {number} opacity\n   * @private\n   */\n  _createOpacityAnimation (opacity) {\n    this._opacityAnimation = new Tween(this, '_opacity', opacity, {\n      duration: 300,\n      timingFunction: 'easeInOutQuad'\n    });\n\n    const onFinished = _ => {\n      this._opacityAnimation = null;\n      this._opacityAnimationType = null;\n      this.requestPathUpdate();\n    };\n\n    this._opacityAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._opacityAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._opacityAnimation.start();\n  }\n\n  /**\n   * @private\n   */\n  _createMarkerShowAnimation () {\n    if (this._markerAnimation && this._markerVisible) {\n      // already have animation\n      return;\n    }\n\n    this._createMarkerAnimation( this._maxMarkerRadius );\n  }\n\n  /**\n   * @private\n   */\n  _createMarkerHideAnimation () {\n    if (this._markerAnimation && !this._markerVisible) {\n      // already have animation\n      return;\n    }\n\n    this._createMarkerAnimation( 0 );\n  }\n\n  /**\n   * @param {number} radius\n   * @private\n   */\n  _createMarkerAnimation (radius) {\n    this._markerAnimation = new Tween(this, '_markerRadius', radius, {\n      duration: this._markerVisible ? 300 : 100,\n      timingFunction: 'easeInOutCubic'\n    });\n\n    const onFinished = _ => {\n      this._markerAnimation = null;\n    };\n\n    this._markerAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._markerAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._markerAnimation.start();\n  }\n}\n","export const ChartEvents = {\n  SERIES_VISIBLE_CHANGE: 'seriesVisibleChange'\n};\n","import { EventEmitter } from '../misc/EventEmitter';\nimport {\n  addClass, clampNumber,\n  createElement,\n  cssText, getDocumentScrollTop,\n  getElementHeight, getElementOffset,\n  getElementWidth, isTransformSupported,\n  removeClass,\n  setAttributes\n} from '../../utils';\n\nlet LABEL_ID = 1;\n\nexport class Label extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = LABEL_ID++;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _container = null;\n\n  /**\n   * @type {{top: number, left: number, translateY: number, translateX: number}}\n   * @private\n   */\n  _containerPosition = {\n    translateX: 0,\n    translateY: 0,\n    top: 0,\n    left: 0\n  };\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _dateElement = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _tableElement = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _width = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = 0;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  _dataArray = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _yearVisible = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _hasVisibleData = false;\n\n  /**\n   * @param {SvgRenderer} renderer\n   */\n  constructor (renderer) {\n    super();\n\n    this._renderer = renderer;\n  }\n\n  /**\n   * @param {Chart | BaseChart} chart\n   */\n  setChart (chart) {\n    this._chart = chart;\n  }\n\n  initialize () {\n    this._createContainer();\n    this._createContent();\n  }\n\n  /**\n   * @param {*} deltaTime\n   */\n  update (deltaTime) {\n    if (this._positionUpdateNeeded) {\n      if (this._hasVisibleData) {\n        this.updateDimensions();\n        this.updatePosition();\n      }\n\n      this._positionUpdateNeeded = false;\n    }\n  }\n\n  /**\n   * @param {Array} data\n   */\n  setData (data = []) {\n    this._dataArray = data;\n    this._hasVisibleData = this._hasVisibleItems();\n\n    this._updateContent();\n  }\n\n  showLabel () {\n    addClass(this._container, 'telechart-chart-label_visible');\n  }\n\n  hideLabel () {\n    removeClass(this._container, 'telechart-chart-label_visible');\n  }\n\n  showYear () {\n    this._yearVisible = true;\n  }\n\n  hideYear () {\n    this._yearVisible = false;\n  }\n\n  updateDimensions () {\n    if (!this._hasVisibleData) {\n      return;\n    }\n\n    this._width = getElementWidth( this._container );\n    this._height = getElementHeight( this._container );\n  }\n\n  updatePosition () {\n    if (!this._hasVisibleData) {\n      return;\n    }\n\n    const position = this._clampPosition( this._width, this._height );\n    this._setLabelPosition( position );\n  }\n\n  requestUpdatePosition () {\n    this._positionUpdateNeeded = true;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get hasVisibleData () {\n    return this._hasVisibleData;\n  }\n\n  /**\n   * @private\n   */\n  _createContainer () {\n    const parent = this._renderer.parentContainer;\n    const container = createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label',\n        style: cssText({\n          opacity: 0\n        })\n      }\n    });\n\n    parent.appendChild( container );\n\n    this._container = container;\n  }\n\n  /**\n   * @private\n   */\n  _createContent () {\n    this._dateElement = createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label__date'\n      }\n    });\n\n    this._tableElement = createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label__table'\n      }\n    }, this._generateTable());\n\n    this._container.appendChild( this._dateElement );\n    this._container.appendChild( this._tableElement );\n  }\n\n  /**\n   * @private\n   */\n  _generateTable () {\n    const items = [];\n\n    for (let i = 0; i < this._dataArray.length; ++i) {\n      const dataItem = this._dataArray[ i ];\n      items.push( this._createTableItem( dataItem ) );\n    }\n\n    return items;\n  }\n\n  /**\n   * @param {*} dataItem\n   * @return {Element}\n   * @private\n   */\n  _createTableItem (dataItem) {\n    const value = createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label__table-item-value'\n      }\n    }, String( this._toPrecise( dataItem.y ) ));\n\n    const title = createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label__table-item-title'\n      }\n    }, dataItem.name);\n\n    return createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label__table-item',\n        id: this._getTableItemId( dataItem.label ),\n        style: cssText({\n          color: dataItem.color,\n          display: dataItem.visible ? 'block' : 'none'\n        })\n      }\n    }, [ value, title ]);\n  }\n\n  /**\n   * @param {string} label\n   * @return {string}\n   * @private\n   */\n  _getTableItemId (label) {\n    return `telechart-chart-label-${this._id}-${label}`;\n  }\n\n  /**\n   * @private\n   */\n  _updateContent () {\n    // update inner content\n    const data = this._dataArray;\n\n    this._updateTitle( data[ 0 ].x );\n\n    for (let i = 0; i < data.length; ++i) {\n      const dataItem = data[ i ];\n      if (dataItem.visible) {\n        const label = dataItem.label;\n        this._updateTableItem( label, dataItem );\n      }\n    }\n\n    if (!this._hasVisibleData) {\n      this.hideLabel();\n    }\n  }\n\n  /**\n   * @param ms\n   * @private\n   */\n  _updateTitle (ms) {\n    const date = new Date( ms );\n    const dateFormatted = date.toUTCString();\n    const dateRegex = /([a-zA-Z]+),\\s?\\d{1,2}\\s([a-zA-Z]+)/i;\n    const dateMatch = dateFormatted.match( dateRegex );\n    const dayText = dateMatch[ 1 ];\n    const monthText = dateMatch[ 2 ];\n\n    let title = `${dayText}, ${monthText} ${date.getDate()}`;\n\n    if (this._yearVisible) {\n      title += ` ${date.getFullYear()}`;\n    }\n\n    this._dateElement.innerHTML = title;\n  }\n\n  /**\n   * @private\n   */\n  _updateTableItem (label, dataItem) {\n    const id = this._getTableItemId( label );\n    let element = this._tableElement.querySelector( `#${id}` );\n\n    if (!element) {\n      element = this._createTableItem( dataItem );\n      this._tableElement.appendChild( element );\n    }\n\n    const titleElement = element.querySelector( '.telechart-chart-label__table-item-title' );\n    const valueElement = element.querySelector( '.telechart-chart-label__table-item-value' );\n\n    // update styles\n    setAttributes(element, {\n      style: cssText({\n        color: dataItem.color,\n        display: dataItem.visible ? 'block' : 'none'\n      })\n    });\n\n    titleElement.innerHTML = dataItem.name;\n    valueElement.innerHTML = String( this._toPrecise( dataItem.y ) );\n  }\n\n  /**\n   * @param {number} value\n   * @param {number} precise\n   * @return {number}\n   * @private\n   */\n  _toPrecise (value, precise = 2) {\n    return 1 * value.toFixed( precise );\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   * @return {{top: number, left: number, translateY: number, translateX: number}}\n   * @private\n   */\n  _clampPosition (width, height) {\n    const chartWidth = this._renderer.width;\n    const labelWidth = this._width;\n    const labelHeight = this._height;\n    const { left: cursorLeft, top: cursorTop } = this._getCursorOffset();\n    const leftRightPadding = 4;\n    const labelPadding = 8;\n\n    let labelTranslateX = clampNumber( cursorLeft - 30, leftRightPadding, chartWidth - labelWidth - leftRightPadding );\n    let labelTranslateY = 40;\n\n    let labelLeft = labelTranslateX;\n    let labelTop = labelTranslateY;\n\n    let labelBottomLine = labelTranslateY + labelHeight + leftRightPadding;\n\n    if (labelBottomLine > cursorTop) {\n      let possibleLabelLeft1 = cursorLeft + labelPadding;\n      if (possibleLabelLeft1 + labelWidth <= chartWidth) {\n        labelLeft = possibleLabelLeft1;\n      } else {\n        let possibleLabelLeft2 = cursorLeft - labelWidth - labelPadding;\n        if (possibleLabelLeft2 >= 0) {\n          labelLeft = possibleLabelLeft2;\n        } else {\n          let possibleLabelTop1 = cursorTop - labelHeight - labelPadding;\n          let documentScrollTop = getDocumentScrollTop();\n          let { top: chartOffsetTop } = getElementOffset( this._renderer.parentContainer );\n\n          if (chartOffsetTop + possibleLabelTop1 >= documentScrollTop) {\n            labelTop = possibleLabelTop1;\n          } else {\n            labelTop = documentScrollTop - chartOffsetTop;\n          }\n        }\n      }\n    }\n\n    if (isTransformSupported) {\n      labelTop -= labelTranslateY;\n      labelLeft -= labelTranslateX;\n    }\n\n    return {\n      translateX: labelTranslateX,\n      translateY: labelTranslateY,\n\n      top: labelTop,\n      left: labelLeft\n    };\n  }\n\n  /**\n   * @return {{top: number, left: number}}\n   * @private\n   */\n  _getCursorOffset () {\n    const noop = { left: 0, top: 0 };\n\n    if (!this._dataArray.length) {\n      return noop;\n    }\n\n    const chartOffsetY = this._chart._seriesGroupTop || 0;\n\n    let minIndex = -1;\n    let minY = 1e9;\n    for (let i = 0; i < this._dataArray.length; ++i) {\n      const dataItem = this._dataArray[ i ];\n      if (dataItem.visible && minY > dataItem.svgY) {\n        minIndex = i;\n        minY = dataItem.svgY;\n      }\n    }\n\n    const point = this._dataArray[ minIndex ];\n\n    return {\n      left: point.svgX,\n      top: point.svgY + chartOffsetY\n    };\n  }\n\n  /**\n   * @param {{top: number, left: number, translateY: number, translateX: number}} position\n   * @private\n   */\n  _setLabelPosition (position) {\n    const style = {\n      transform: `translate(${position.translateX}px, ${position.translateY}px)`,\n      top: `${position.top}px`,\n      left: `${position.left}px`,\n    };\n\n    if (!isTransformSupported) {\n      delete style.transform;\n    }\n\n    setAttributes(this._container, {\n      style: cssText( style )\n    });\n\n    this._containerPosition = position;\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  _hasVisibleItems () {\n    return this._dataArray.length > 0\n      && this._dataArray.filter(item => item.visible).length > 0;\n  }\n}\n","import { EventEmitter } from '../../misc/EventEmitter';\nimport { arrayDiff, removeElement, setAttributeNS } from '../../../utils';\nimport { Tween, TweenEvents } from '../../animation/Tween';\n\nexport const AxisElementState = {\n  pending: 1,\n  showing: 2,\n  hiding: 3\n};\n\nexport class ChartAxis extends EventEmitter {\n\n  /**\n   * @type {SvgRenderer}\n   */\n  renderer = null;\n\n  /**\n   * @type {Chart | BaseChart}\n   */\n  chart = null;\n\n  /**\n   * @type {Element}\n   */\n  valuesGroup = null;\n\n  /**\n   * @type {Element}\n   */\n  axesGroup = null;\n\n  /**\n   * @type {Array<string | number>}\n   */\n  axesValues = [];\n\n  /**\n   * Active elements (current + showing)\n   * @type {Array<{state: *, value: *, valueElement: Element, axisElement: Element}>}\n   */\n  elements = [];\n\n  /**\n   * @type {boolean}\n   */\n  positionUpdateNeeded = false;\n\n  /**\n   * @param {SvgRenderer} renderer\n   */\n  constructor (renderer) {\n    super();\n\n    this.renderer = renderer;\n  }\n\n  initialize () {\n    this.createAxesGroup();\n    this.createValuesGroup();\n\n    this.updateValues();\n\n    this.create();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    this._updateElementsAnimations( deltaTime );\n\n    if (this.positionUpdateNeeded) {\n      this.updatePositions();\n\n      this.positionUpdateNeeded = false;\n    }\n  }\n\n  /**\n   * Update position in next animation frame\n   */\n  requestUpdatePosition () {\n    this.positionUpdateNeeded = true;\n  }\n\n  updatePositions () {\n  }\n\n  updateAnimations () {\n    const oldValues = this.axesValues;\n\n    this.updateValues();\n\n    const valuesToDelete = arrayDiff( this.axesValues, oldValues );\n    const valuesToCreate = this.axesValues.filter(value => {\n      return oldValues.indexOf( value ) === -1;\n    });\n\n    this.createNewElements( valuesToCreate );\n    this.deleteOldElements( valuesToDelete );\n  }\n\n  /**\n   * @param valuesToCreate\n   */\n  createNewElements (valuesToCreate) {\n    for (let i = 0; i < valuesToCreate.length; ++i) {\n      const value = valuesToCreate[ i ];\n      let element = this._getElementByValue( value );\n      let created = false;\n\n      if (element) {\n        if (element.state === AxisElementState.pending) {\n          // already attached\n          continue;\n        }\n\n        if (element.state === AxisElementState.hiding) {\n          // prevent from searching element again\n          element.hiddenFromSearch = true;\n          element = null;\n        }\n      }\n\n      if (!element) {\n        element = this.createNewElement( value );\n        created = true;\n      }\n\n      this.createShowingAnimation( element );\n\n      if (created) {\n        this.elements.push( element );\n      }\n    }\n  }\n\n  /**\n   * @param value\n   */\n  createNewElement (value) {\n  }\n\n  /**\n   * @param valuesToDelete\n   */\n  deleteOldElements (valuesToDelete) {\n    for (let i = 0; i < valuesToDelete.length; ++i) {\n      const value = valuesToDelete[ i ];\n      let element = this._getElementByValue( value );\n\n      if (!element\n        || element.state === AxisElementState.hiding) {\n        // already hiding or deleted\n        continue;\n      }\n\n      if (element.state === AxisElementState.showing) {\n        const { animation: showing } = element;\n        showing && showing.cancel();\n      }\n\n      this.createHidingAnimation( element );\n    }\n  }\n\n  /**\n   * @param {*} element\n   * @return {number}\n   */\n  createShowingAnimation (element) {\n    if (element.opacity === 1) {\n      return ( element.state = AxisElementState.pending );\n    }\n\n    const onComplete = _ => {\n      element.animation = null;\n      element.state = AxisElementState.pending;\n    };\n\n    const animation = new Tween(element, 'opacity', 1, {\n      duration: 300,\n      timingFunction: 'easeInOutQuad'\n    });\n    animation.on( TweenEvents.COMPLETE, onComplete );\n    animation.start();\n\n    element.animation = animation;\n    element.state = AxisElementState.showing;\n  }\n\n  /**\n   * @param {*} element\n   */\n  createHidingAnimation (element) {\n    const onComplete = _ => {\n      this.detachElement( element );\n    };\n\n    const animation = new Tween(element, 'opacity', 0, {\n      duration: 300,\n      timingFunction: 'easeInOutQuad'\n    });\n\n    animation.on( TweenEvents.COMPLETE, onComplete );\n    animation.start();\n\n    element.animation = animation;\n    element.state = AxisElementState.hiding;\n  }\n\n  /**\n   * @param {{state: *, value: *, valueElement: Element, axisElement: Element}} element\n   */\n  detachElement (element) {\n    const { value, valueElement, axisElement } = element;\n    const indexToDelete = this._getElementIndexByValue( value );\n\n    if (indexToDelete < 0) {\n      return;\n    }\n\n    valueElement && removeElement( valueElement );\n    axisElement && removeElement( axisElement );\n\n    this.elements.splice( indexToDelete, 1 );\n  }\n\n  /**\n   * @param {Chart | BaseChart} chart\n   */\n  setChart (chart) {\n    this.chart = chart;\n  }\n\n  /**\n   * @abstract\n   */\n  createValuesGroup () {\n  }\n\n  /**\n   * @abstract\n   */\n  createAxesGroup () {\n  }\n\n  create () {\n    const values = this.axesValues;\n\n    for (let i = 0; i < values.length; ++i) {\n      const element = this.createNewElement( values[ i ], true );\n\n      // without animation\n      element.state = AxisElementState.pending;\n      element.opacity = 1;\n\n      this.elements.push( element );\n    }\n  }\n\n  /**\n   * @return {Array<string | number>}\n   */\n  computeAxisValues () {\n    return [];\n  }\n\n  /**\n   * Updates axes values\n   */\n  updateValues () {\n    this.axesValues = this.computeAxisValues();\n  }\n\n  onChartResize () {\n  }\n\n  /**\n   * @param {Function} fn\n   */\n  eachElement (fn = () => {}) {\n    for (let i = 0; i < this.elements.length; ++i) {\n      fn( this.elements[ i ] );\n    }\n  }\n\n  /**\n   * @param value\n   * @return {{state: *, value: *, valueElement: Element, axisElement: Element}}\n   * @private\n   */\n  _getElementByValue (value) {\n    for (let i = 0; i < this.elements.length; ++i) {\n      const { value: elementValue, hiddenFromSearch = false } = this.elements[ i ];\n      if (value === elementValue && !hiddenFromSearch) {\n        return this.elements[ i ];\n      }\n    }\n  }\n\n  /**\n   * @param value\n   * @return {number}\n   * @private\n   */\n  _getElementIndexByValue (value) {\n    for (let i = 0; i < this.elements.length; ++i) {\n      if (value === this.elements[ i ].value) {\n        return i;\n      }\n    }\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _updateElementsAnimations (deltaTime) {\n    this.eachElement(element => {\n      this._updateElementAnimation( element, deltaTime );\n    })\n  }\n\n  /**\n   * @param element\n   * @param deltaTime\n   * @private\n   */\n  _updateElementAnimation (element, deltaTime) {\n    if (!element.animation) {\n      return;\n    }\n\n    const { axisElement, valueElement, animation } = element;\n\n    animation.update( deltaTime );\n\n    axisElement && setAttributeNS( axisElement, 'stroke-opacity', element.opacity, null );\n    valueElement && setAttributeNS( valueElement, 'opacity', element.opacity, null );\n  }\n}\n","import { AxisElementState, ChartAxis } from './ChartAxis';\nimport { cssText, setAttributeNS } from '../../../utils';\n\nexport class ChartAxisY extends ChartAxis {\n\n  updatePositions () {\n    this.eachElement(element => {\n      const { valueElement, axisElement, value } = element;\n\n      this._updatePathElementPosition( axisElement, value );\n      this._updateValueElementPosition( valueElement, value );\n    });\n  }\n\n  createValuesGroup () {\n    this.valuesGroup = this.renderer.createGroup({\n      class: 'telechart-chart-axes-values-y',\n      transform: `translate(0, ${this.chart.seriesGroupTop}) scale(1 1)`,\n      mask: `url(#${this.chart.chartMaskId})`\n    }, []);\n  }\n\n  createAxesGroup () {\n    this.axesGroup = this.renderer.createGroup({\n      class: 'telechart-chart-axes-y',\n      transform: `translate(0, ${this.chart.seriesGroupTop}) scale(1 1)`,\n      mask: `url(#${this.chart.chartMaskId})`\n    }, []);\n\n    this.renderer.svgContainer.insertBefore( this.axesGroup, this.chart._seriesGroup );\n  }\n\n  computeAxisValues () {\n    const chart = this.chart;\n    const viewportMinY = chart.localMinY;\n    const viewportMaxY = chart.localMaxY;\n    const distance = viewportMaxY - viewportMinY;\n\n    if (!distance) {\n      return [];\n    }\n\n    let deltaY = distance / 5;\n    let divider = Math.pow(10, Math.max(0, ( distance | 0 ).toString().length - 2) );\n    deltaY = Math.floor( deltaY / divider ) * divider;\n\n    let currentValue = 0;\n    let result = [ currentValue ];\n\n    while (currentValue + deltaY <= viewportMaxY) {\n      result.unshift( currentValue + deltaY );\n      currentValue += deltaY;\n    }\n\n    const maxLength = 6;\n    if (result.length < maxLength) {\n      currentValue = 0;\n      while (currentValue - deltaY >= viewportMinY) {\n        result.push( currentValue - deltaY );\n        currentValue -= deltaY;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @param value\n   * @param {boolean} initial\n   * @return {{axisElement: SVGPathElement, valueElement: SVGTextElement, state: number, opacity: number, value: *}}\n   */\n  createNewElement (value, initial = false) {\n    const axisElement = this._createAxisElement( value, initial );\n    const valueElement = this._createValueElement( value, initial );\n\n    return {\n      value,\n      opacity: 0,\n      animation: null,\n      state: AxisElementState.showing,\n      axisElement,\n      valueElement\n    };\n  }\n\n  onChartResize () {\n    super.onChartResize();\n\n    this._updateDimensions();\n  }\n\n  /**\n   * @param value\n   * @param {boolean} initial\n   * @return {SVGPathElement}\n   * @private\n   */\n  _createAxisElement (value, initial = false) {\n    const pathText = this._computePathText( value );\n\n    return this.renderer.createPath(pathText, {\n      class: 'telechart-chart-axis-path',\n      dataValue: value,\n      stroke: 'rgba(163, 196, 220, 0.2)',\n      strokeWidth: 1,\n      strokeOpacity: initial ? 1 : 0,\n      strokeLinejoin: 'round',\n      strokeLinecap: 'round'\n    }, this.axesGroup);\n  }\n\n  /**\n   * @param value\n   * @param initial\n   * @return {SVGTextElement}\n   * @private\n   */\n  _createValueElement (value, initial = false) {\n    const valueText = String( value );\n    const svgY = this._computeValuePosition( value );\n\n    const text = this.renderer.createText(valueText, {\n      class: 'telechart-chart-axis-value',\n      x: this.chart.viewportPadding,\n      y: svgY,\n      textAnchor: 'start',\n      opacity: initial ? 1 : 0,\n      style: initial\n        ? cssText({\n          opacity: 0,\n        }) : ''\n    }, this.valuesGroup);\n\n    if (initial) {\n      setTimeout(_ => {\n        setAttributeNS(text, 'style', cssText({\n          opacity: 1,\n          transitionDuration: '.3s',\n          transitionProperty: 'all'\n        }), null);\n\n        setTimeout(_ => {\n          setAttributeNS( text, 'style', '', null );\n        }, 300);\n      }, 200);\n    }\n\n    return text;\n  }\n\n  /**\n   * @param value\n   * @return {number}\n   * @private\n   */\n  _computeValuePosition (value) {\n    const fontOffsetY = 6;\n    return ( this.chart.projectYToSvg( value ) || 1e6 ) - fontOffsetY;\n  }\n\n  /**\n   * @param {number} value\n   * @return {string}\n   * @private\n   */\n  _computePathText (value) {\n    const svgY = this.chart.projectYToSvg( value ) || 1e6;\n    const startSvgX = this.chart.viewportPadding;\n    const endSvgX = this.chart.chartWidth - this.chart.viewportPadding;\n\n    return `M${startSvgX} ${svgY}L${endSvgX} ${svgY}`;\n  }\n\n  /**\n   * @private\n   */\n  _updateDimensions () {\n    for (let i = 0; i < this.elements.length; ++i) {\n      const { axisElement, value } = this.elements[ i ];\n      this._updatePathElementPosition( axisElement, value );\n    }\n  }\n\n  /**\n   * @param axisElement\n   * @param value\n   * @private\n   */\n  _updatePathElementPosition (axisElement, value) {\n    const pathText = this._computePathText( value );\n    this.renderer.updatePath( axisElement, pathText );\n  }\n\n  /**\n   * @param valueElement\n   * @param value\n   * @private\n   */\n  _updateValueElementPosition (valueElement, value) {\n    const svgY = this._computeValuePosition( value );\n\n    setAttributeNS( valueElement, 'y', svgY, null );\n  }\n}\n\n","import { AxisElementState, ChartAxis } from './ChartAxis';\nimport { arrayDiff, clampNumber, cssText, setAttributeNS, setAttributesNS } from '../../../utils';\n\nexport class ChartAxisX extends ChartAxis {\n\n  /**\n   * @type {*}\n   */\n  axesValuesMapping = {};\n\n  /**\n   * @type {number}\n   */\n  labelWidth = 37;\n\n  /**\n   * @type {number|null}\n   * @private\n   */\n  _interval = null;\n\n  /**\n   * Update values positions\n   */\n  updatePositions () {\n    this.eachElement(element => {\n      const { valueElement, value } = element;\n\n      this._updateValueElementPosition( valueElement, this.axesValuesMapping[ value ] );\n    });\n  }\n\n  createValuesGroup () {\n    this.valuesGroup = this.renderer.createGroup({\n      class: 'telechart-chart-axes-values-x',\n      transform: `translate(0, ${this.chart.seriesGroupTop + this.chart.chartHeight + 18}) scale(1 1)`\n    }, []);\n  }\n\n  createAxesGroup () {\n  }\n\n  computeAxisValues () {\n    const chart = this.chart;\n    const chartWidth = chart.chartWidth;\n    const minLabelWidth = 70;\n    const pixelX = this.chart.viewportPixelX;\n    const viewportMinX = chart.viewportRange[ 0 ];\n    const viewportMaxX = chart.viewportRange[ 1 ];\n    const distance = viewportMaxX - viewportMinX;\n\n    if (!distance) {\n      return [];\n    }\n\n    const maxAvailableLabels = chartWidth / minLabelWidth;\n\n    if (this._interval == null) {\n      this._interval = pixelX * chartWidth / maxAvailableLabels;\n    }\n\n    const intervalInPixels = this._interval / pixelX;\n    if (intervalInPixels < minLabelWidth) {\n      this._interval *= 2;\n    } else if (intervalInPixels > minLabelWidth * 2) {\n      this._interval *= .5;\n    }\n\n    let currentValue = viewportMaxX - pixelX * minLabelWidth / 2;\n\n    if (this.axesValues.length > 0) {\n      for (let i = this.axesValues.length - 1; i >= 0; --i) {\n        const currentLastValue = this.axesValuesMapping[ this.axesValues[ i ] ];\n        const prevValue = currentLastValue - this._interval;\n        const nextValue = currentLastValue + this._interval;\n\n        if (viewportMaxX > prevValue && viewportMaxX < nextValue) {\n          currentValue = currentLastValue;\n        }\n      }\n    }\n\n    let result = [];\n\n    while (currentValue >= viewportMinX) {\n      result.unshift( currentValue );\n      currentValue -= this._interval;\n    }\n\n    return result;\n  }\n\n  /**\n   * @param value\n   * @param {boolean} initial\n   * @return {{axisElement: SVGPathElement, valueElement: SVGTextElement, state: number, opacity: number, value: *}}\n   */\n  createNewElement (value, initial = false) {\n    const valueElement = this._createValueElement( value, initial );\n\n    return {\n      value,\n      opacity: 0,\n      animation: null,\n      state: AxisElementState.showing,\n      axisElement: null,\n      valueElement\n    };\n  }\n\n  onChartResize () {\n    super.onChartResize();\n  }\n\n  updateValues () {\n    super.updateValues();\n\n    const dates = this.axesValues.map(value => {\n      return this._toDateString( value );\n    });\n\n    for (let i = 0; i < dates.length; ++i) {\n      this.axesValuesMapping[ dates[ i ] ] = this.axesValues[ i ];\n    }\n\n    this.axesValues = dates;\n  }\n\n  /**\n   * @param value\n   * @param initial\n   * @return {SVGTextElement}\n   * @private\n   */\n  _createValueElement (value, initial = false) {\n    const timestamp = this.axesValuesMapping[ value ];\n    const svgX = this._computeValuePosition( timestamp );\n\n    const text = this.renderer.createText(value, {\n      class: 'telechart-chart-axis-value',\n      x: svgX,\n      y: 0,\n      textAnchor: 'start',\n      opacity: initial ? 1 : 0,\n      style: initial\n        ? cssText({\n          opacity: 0,\n        }) : ''\n    }, this.valuesGroup);\n\n    // initial font load glitch workaround\n    if (initial) {\n      setTimeout(_ => {\n        setAttributeNS(text, 'style', cssText({\n          opacity: 1,\n          transitionDuration: '.3s',\n          transitionProperty: 'all'\n        }), null);\n\n        setTimeout(_ => {\n          setAttributeNS( text, 'style', '', null );\n        }, 300);\n      }, 200);\n    }\n\n    return text;\n  }\n\n  /**\n   * @param value\n   * @param lastValue\n   * @return {number}\n   * @private\n   */\n  _computeValuePosition (value, lastValue = false) {\n    return this.chart.projectXToSvg( value ) - this.labelWidth / 2;\n  }\n\n  /**\n   * @param valueElement\n   * @param value\n   * @private\n   */\n  _updateValueElementPosition (valueElement, value) {\n    setAttributeNS( valueElement, 'x', this._computeValuePosition( value ), null );\n  }\n\n  /**\n   * @param {number} value\n   * @return {string}\n   * @private\n   */\n  _toDateString (value) {\n    const date = new Date( value );\n    const datePart = date.toUTCString().split( ' ' );\n\n    return `${datePart[ 2 ]} ${datePart[ 1 ]}`;\n  }\n}\n\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { SeriesTypes } from '../series/SeriesTypes';\nimport { Series } from '../series/Series';\nimport { Tween, TweenEvents } from '../animation/Tween';\nimport { ChartTypes } from './ChartTypes';\nimport { ChartEvents } from './events/ChartEvents';\nimport { Label } from './Label';\n\nimport {\n  arraysEqual,\n  binarySearchIndexes,\n  clampNumber,\n  ensureNumber,\n  getElementOffset,\n  isDate,\n  setAttributeNS\n} from '../../utils';\nimport { ChartAxisY } from './axis/ChartAxisY';\nimport { ChartAxisX } from './axis/ChartAxisX';\n\nlet CHART_ID = 1;\n\nexport class BaseChart extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = CHART_ID++;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _type = '';\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartHeight = 280;\n\n  /**\n   * @type {number}\n   * @private\n   * @default 2\n   */\n  _groupingPixels = 2;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<Series>}\n   * @private\n   */\n  _series = [];\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {SVGDefsElement}\n   * @private\n   */\n  _defs = null;\n\n  /**\n   * @type {SVGMaskElement}\n   * @private\n   */\n  _chartMask = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _chartMaskId = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartMaskPadding = 0;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRange = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRangeIndexes = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportPointsIndexes = [ 0, 0 ];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _useViewportPointsInterval = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportDistance = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPixelX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPixelY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPadding = 13;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportLeftPaddingScale = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportRightPaddingScale = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportRangeUpdateNeeded = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportPointsGroupingNeeded = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentLocalMinY = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentLocalMaxY = null;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _minMaxYAnimation = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minMaxYAnimationSign = null;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _rangeAnimation = null;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _rangeAnimationObject = {};\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _cursorInsideChart = false;\n\n  /**\n   * @type {SVGPathElement}\n   * @private\n   */\n  _axisCursor = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _axisCursorPositionX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _axisCursorPointIndex = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _axisCursorUpdateNeeded = false;\n\n  /**\n   * @type {Label}\n   * @private\n   */\n  _label = null;\n\n  /**\n   * @type {ChartAxisY}\n   * @private\n   */\n  _yAxisView = null;\n\n  /**\n   * @type {ChartAxisX}\n   * @private\n   */\n  _xAxisView = null;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Object} options\n   */\n  constructor (renderer, options = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._options = options;\n  }\n\n  initialize () {\n    this.resolveDefs();\n    this.createChartMask();\n\n    this.createSeriesGroup();\n    this.createSeries();\n\n    this.addEvents();\n\n    this.setInitialRange();\n    this.approximateViewportPoints();\n\n    if (this.isChart) {\n      this.initializeAxisCursor();\n      this.initializeLabel();\n\n      this.initializeAxisY();\n      this.initializeAxisX();\n    }\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    const minMaxYAnimation = this._minMaxYAnimation;\n    const extremesUpdated = minMaxYAnimation && minMaxYAnimation.isRunning;\n\n    if (extremesUpdated) {\n      this._minMaxYAnimation.update( deltaTime );\n    }\n\n    const hasRangeAnimation = this._rangeAnimation && this._rangeAnimation.isRunning;\n\n    if (this._viewportRangeUpdateNeeded || hasRangeAnimation) {\n      if (hasRangeAnimation) {\n        this._rangeAnimation.update( deltaTime );\n\n        this.updateViewportRange([\n          this._rangeAnimationObject.from,\n          this._rangeAnimationObject.to\n        ], { skipExtremes: true });\n\n      } else {\n        this.updateViewportRange();\n      }\n\n      this._viewportRangeUpdateNeeded = false;\n    }\n\n    if (this._viewportPointsGroupingNeeded) {\n      this.approximateViewportPoints();\n\n      this._viewportPointsGroupingNeeded = false;\n    }\n\n    if (extremesUpdated) {\n      this.updateViewportPixel();\n    }\n\n    // cursor updating\n    if (this._axisCursorUpdateNeeded && this.isChart) {\n      this._updateAxisCursor();\n\n      this._axisCursorUpdateNeeded = false;\n    }\n\n    this.eachSeries(line => {\n      const hasOpacityAnimation = line.isHiding;\n      const isNavigatorPath = this._type === ChartTypes.navigatorChart;\n\n      if (extremesUpdated && !(isNavigatorPath && hasOpacityAnimation)) {\n        line.requestPathUpdate();\n      }\n\n      line.update( deltaTime );\n    });\n\n    if (this._label) {\n      this._label.update( deltaTime );\n    }\n\n    if (this._yAxisView) {\n      if (extremesUpdated) {\n        this._yAxisView.requestUpdatePosition();\n      }\n\n      this._yAxisView.update( deltaTime );\n    }\n\n    if (this._xAxisView) {\n      this._xAxisView.update( deltaTime );\n    }\n  }\n\n  /**\n   * Draws initial chart\n   */\n  firstRender () {\n    this.eachSeries(line => line.firstRender());\n  }\n\n  /**\n   * Creates SVG group for storing series paths\n   * @abstract\n   */\n  createSeriesGroup () {\n  }\n\n  /**\n   * Creates array of series\n   */\n  createSeries () {\n    const {\n      series: data,\n      seriesOptions: options = {}\n    } = this._options || {};\n\n    const groupingOptions = options.grouping;\n    if (groupingOptions) {\n      if (groupingOptions.pixels) {\n        this._groupingPixels = ensureNumber( groupingOptions.pixels );\n      }\n    }\n\n    const {\n      columns,\n      types,\n      colors,\n      names\n    } = data;\n\n    const xAxisIndex = columns.findIndex(column => {\n      return types[ column[ 0 ] ] === SeriesTypes.x;\n    });\n    const xAxis = this._xAxis = columns[ xAxisIndex ].slice( 1 );\n\n    let yAxes = columns.slice(); // copy an array to change later\n    yAxes.splice( xAxisIndex, 1 ); // remove x axis from the array\n\n    for (let i = 0; i < yAxes.length; ++i) {\n      const yAxis = yAxes[ i ].slice();\n      const label = yAxis.shift();\n      const type = types[ label ];\n      const color = colors[ label ];\n      const name = names[ label ];\n\n      // prepare series settings\n      const settings = {\n        xAxis, yAxis, label, type,\n        color, name, options: this.extendSeriesOptions( options )\n      };\n\n      // create instance\n      const series = new Series( this._renderer, this._seriesGroup, settings );\n      // provide context for each series\n      series.setChart( this );\n      series.initialize();\n\n      this._series.push( series );\n    }\n  }\n\n  /**\n   * Creates or resolves defs element in SVG container\n   */\n  resolveDefs () {\n    if (this._defs) {\n      return;\n    }\n    const defs = this._renderer.svgContainer.querySelector( 'defs' );\n    this._defs = !defs\n      ? this._renderer.createDefs()\n      : defs;\n  }\n\n  /**\n   * Creates clip mask for the chart and top-bottom shadow mask\n   */\n  createChartMask () {\n    const padding = this._chartMaskPadding;\n\n    this._chartMaskId = `telechart-mask-${this.id}`;\n\n    this._chartMask = this.renderer.createMask({\n      id: this._chartMaskId\n    }, [], this.defs);\n\n    const gradientId = `telechart-mask-gradient-${this.id}`;\n    const sharpGradient = this._type === ChartTypes.navigatorChart;\n\n    // create gradient for rectangle\n    this.renderer.createLinearGradient({\n      id: gradientId,\n      gradientTransform: 'rotate(90)'\n    }, [\n      { offset: '0', stopColor: 'white', stopOpacity: 0 },\n      { offset: sharpGradient ? '0.1%' : '2%', stopColor: 'white', stopOpacity: 1 },\n      { offset: '99.9%', stopColor: 'white', stopOpacity: 1 },\n      { offset: '100%', stopColor: 'white', stopOpacity: 0 },\n    ], this.defs);\n\n    // create rectangle with gradient and append to mask\n    this.renderer.createRect(this.chartWidth, this.chartHeight + padding + 1, {\n      fill: `url(#${gradientId})`,\n      x: 0,\n      y: -padding,\n    }, this._chartMask);\n  }\n\n  /**\n   * Creates chart cursor\n   */\n  initializeAxisCursor () {\n    this._createAxisCursor();\n    this._addAxisCursorEvents();\n  }\n\n  /**\n   * Creates label\n   */\n  initializeLabel () {\n    const label = new Label( this._renderer );\n\n    label.setChart( this );\n    label.initialize();\n\n    this._label = label;\n  }\n\n  /**\n   * Creates y axis\n   */\n  initializeAxisY () {\n    const yAxisView = new ChartAxisY( this._renderer );\n\n    yAxisView.setChart( this );\n    yAxisView.initialize();\n\n    this._yAxisView = yAxisView;\n  }\n\n  /**\n   * Creates y axis\n   */\n  initializeAxisX () {\n    const xAxisView = new ChartAxisX( this._renderer );\n\n    xAxisView.setChart( this );\n    xAxisView.initialize();\n\n    this._xAxisView = xAxisView;\n  }\n\n  /**\n   * Sets initial viewport range for the chart\n   */\n  setInitialRange () {\n    this.setViewportRange();\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   * @param {*} options\n   */\n  animateViewportRangeTo (minX = -Infinity, maxX = Infinity, options = {}) {\n    const {\n      duration = 300,\n      timingFunction = 'easeInOutQuad',\n      preservePadding = false\n    } = options;\n\n    const [ newMinX, newMaxX ] = this._clampViewportRange( minX, maxX, preservePadding );\n\n    if (this._rangeAnimation) {\n      return this._rangeAnimation.patchAnimation( [ newMinX, newMaxX ] );\n    }\n\n    this._rangeAnimationObject = {\n      from: this._viewportRange[ 0 ],\n      to: this._viewportRange[ 1 ]\n    };\n\n    this._rangeAnimation = new Tween(this._rangeAnimationObject, [ 'from', 'to' ], [\n      newMinX, newMaxX\n    ], {\n      duration, timingFunction\n    });\n\n    const onFinished = _ => {\n      this._rangeAnimation = null;\n    };\n\n    this._rangeAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._rangeAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._rangeAnimation.start();\n  }\n\n  /**\n   * @param {number|Date} minX\n   * @param {number|Date} maxX\n   * @param {boolean} skipExtremes\n   * @param {boolean} preservePadding\n   */\n  setViewportRange (minX = -Infinity, maxX = Infinity, { skipExtremes = false, preservePadding = false } = {}) {\n    // recompute X boundaries\n    this._setViewportRange( minX, maxX, preservePadding );\n\n    // remember last indexes\n    const oldRangeIndexes = this._viewportRangeIndexes;\n\n    // recompute indexes range\n    this._updateViewportIndexes();\n\n    let localExtremesUpdateRequested = false;\n\n    if (!arraysEqual( this._viewportRangeIndexes, oldRangeIndexes )) {\n      // do not recompute groups while first render\n      if (oldRangeIndexes.length > 0) {\n        // recompute approximation in next animation update\n        this._viewportPointsGroupingNeeded = true;\n      }\n\n      if (this._xAxisView) {\n        this._xAxisView.updateAnimations();\n      }\n\n      localExtremesUpdateRequested = true;\n    }\n\n    const updateExtremes = !skipExtremes && localExtremesUpdateRequested;\n\n    this.eachSeries(line => {\n      // update local extremes only if indexes range changed\n      if (updateExtremes) {\n        // update minY and maxY local values for each line\n        line.updateLocalExtremes();\n      }\n\n      // recompute and repaint path in next animation update\n      line.requestPathUpdate();\n    });\n\n    if (updateExtremes) {\n      // update local extremes on chart level\n      this.updateLocalExtremes();\n    }\n\n    // recompute pixel values\n    this.updateViewportPixel();\n\n    // update cursor in next animation frame\n    this._axisCursorUpdateNeeded = true;\n\n    if (this._xAxisView) {\n      this._xAxisView.requestUpdatePosition();\n    }\n  }\n\n  /**\n   * Recompute key variables for viewport range\n   *\n   * @param {Array<number>} viewportRange\n   * @param {*} options\n   */\n  updateViewportRange (viewportRange = this._viewportRange, options = {}) {\n    const {\n      skipExtremes = true,\n      preservePadding = true\n    } = options;\n\n    // recompute X boundaries\n    this.setViewportRange(\n      viewportRange[ 0 ],\n      viewportRange[ 1 ], {\n        skipExtremes,\n        preservePadding\n      }\n    );\n  }\n\n  /**\n   * Approximate points for better performance\n   */\n  approximateViewportPoints () {\n    let [ startIndex, endIndex ] = this._viewportRangeIndexes;\n\n    startIndex = Math.max( 0, startIndex - 1 );\n    endIndex = Math.min( this._xAxis.length - 1, endIndex + 1 );\n\n    // if we have no enough points\n    // then we don't need to approximate\n    if (endIndex - startIndex < 400) {\n      // just save indexes of points for increase performance\n      // [ startIndex, endIndex ]\n      this._viewportPointsIndexes[ 0 ] = startIndex;\n      this._viewportPointsIndexes[ 1 ] = endIndex;\n      this._useViewportPointsInterval = true;\n\n      // all work done here\n      return;\n    }\n\n    const boostLimit = 500;\n    const boostScale = 1 + this._xAxis.length > boostLimit\n      ? Math.max(0, ( endIndex - startIndex ) / this._xAxis.length ) * 2\n      : 0;\n\n    let groupingDistanceLimitX = boostScale * this._groupingPixels * this._viewportPixelX;\n\n    let viewportIndexes = [];\n    let groupStartIndex = startIndex;\n\n    for (let i = startIndex + 1; i <= endIndex; ++i) {\n      const pointX = this._xAxis[ i ];\n\n      const groupStartDifferenceX = pointX - this._xAxis[ groupStartIndex ];\n\n      if (groupStartDifferenceX >= groupingDistanceLimitX || i === endIndex) {\n        if (groupStartIndex !== i - 1) {\n          // we have 2 or more points to group\n          // [ startIndex, lastIndex ] all indexes inclusive\n          const endIndex = i - 1;\n          const middleIndex = ( groupStartIndex + endIndex ) >> 1;\n          viewportIndexes.push( middleIndex );\n        } else {\n          if (startIndex === i - 1) {\n            // add first point\n            viewportIndexes.push( startIndex );\n          }\n\n          viewportIndexes.push( i );\n        }\n\n        groupStartIndex = i;\n      }\n    }\n\n    this._viewportPointsIndexes = viewportIndexes;\n    this._useViewportPointsInterval = false;\n  }\n\n  /**\n   * Find new local min and max extremes among visible series\n   */\n  updateLocalExtremes () {\n    let localMinY = 0;\n    let localMaxY = 0;\n\n    this.eachSeries(line => {\n      if (!line.isVisible) {\n        // find among visible series\n        return;\n      }\n\n      if (localMinY > line.localMinY) {\n        localMinY = line.localMinY;\n      }\n      if (localMaxY < line.localMaxY) {\n        localMaxY = line.localMaxY;\n      }\n    });\n\n    let oldLocalMinY = this._localMinY;\n    let oldLocalMaxY = this._localMaxY;\n\n    this._localMinY = localMinY;\n    this._localMaxY = localMaxY;\n\n    let updateAnimation = false;\n\n    if (typeof this._currentLocalMinY !== 'number') {\n      // set initial local min y\n      this._currentLocalMinY = this._localMinY;\n    } else if (this._localMinY !== oldLocalMinY) {\n      updateAnimation = true;\n    }\n\n    if (typeof this._currentLocalMaxY !== 'number') {\n      // set initial local max y\n      this._currentLocalMaxY = this._localMaxY;\n    } else if (this._localMaxY !== oldLocalMaxY) {\n      updateAnimation = true;\n    }\n\n    if (updateAnimation) {\n      this._updateOrCreateMinMaxYAnimation();\n\n      if (this._yAxisView) {\n        this._yAxisView.updateAnimations();\n      }\n    }\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   * @return {number}\n   */\n  computeViewportPixelX (minX = this._viewportRange[ 0 ], maxX = this._viewportRange[ 1 ]) {\n    return ( maxX - minX ) / this.chartWidth;\n  }\n\n  /**\n   * Updates pixel value for each axis\n   */\n  updateViewportPixel () {\n    this._viewportPixelX = this._viewportDistance / this.chartWidth;\n    this._viewportPixelY = this.currentLocalExtremeDifference / this.chartHeight;\n  }\n\n  /**\n   * @param {number} localMinX\n   * @param {number} localMaxX\n   * @return {number}\n   */\n  computeViewportPadding (localMinX, localMaxX) {\n    return this.computeViewportPixelX( localMinX, localMaxX ) * this._viewportPadding;\n  }\n\n  /**\n   * Initialize chart events\n   */\n  addEvents () {\n    this._renderer.on('resize', _ => {\n      this.onRendererResize();\n    });\n\n    this.eachSeries(line => {\n      line.on('visibleChange', _ => {\n        this.onSeriesVisibleChange( line );\n      });\n    });\n  }\n\n  /**\n   * Resize event handler\n   */\n  onRendererResize () {\n    // making requests for future animation update\n    this._viewportRangeUpdateNeeded = true;\n    this._viewportPointsGroupingNeeded = true;\n    this._axisCursorUpdateNeeded = true;\n\n    this._updateMaskDimensions();\n\n    if (this._yAxisView) {\n      this._yAxisView.onChartResize();\n    }\n\n    if (this._xAxisView) {\n      this._xAxisView.onChartResize();\n    }\n  }\n\n  /**\n   * @param {Series} line\n   */\n  onSeriesVisibleChange (line) {\n    // find new extremes and scale\n    this.updateLocalExtremes();\n    \n    this.emit( ChartEvents.SERIES_VISIBLE_CHANGE, line );\n  }\n\n  /**\n   * @param {string} label\n   * @return {Series}\n   */\n  getSeriesByLabel (label) {\n    return this.findSeries(line => {\n      return line.label === label;\n    });\n  }\n\n  /**\n   * @param {string} label\n   */\n  setSeriesVisible (label) {\n    const series = this.getSeriesByLabel( label );\n    if (series) {\n      series.setVisible();\n    }\n  }\n\n  /**\n   * @param {string} label\n   */\n  setSeriesInvisible (label) {\n    const series = this.getSeriesByLabel( label );\n    if (series) {\n      series.setInvisible();\n    }\n  }\n\n  /**\n   * @param {string} label\n   */\n  toggleSeries (label) {\n    const series = this.getSeriesByLabel( label );\n    if (series) {\n      series.toggleVisible();\n    }\n  }\n\n  /**\n   * @param {Function} predicate\n   * @return {Series}\n   */\n  findSeries (predicate) {\n    for (let i = 0; i < this._series.length; ++i) {\n      if (predicate( this._series[ i ] )) {\n        return this._series[ i ];\n      }\n    }\n  }\n\n  /**\n   * @param {Function} fn\n   */\n  eachSeries (fn = () => {}) {\n    for (let i = 0; i < this._series.length; ++i) {\n      fn( this._series[ i ], i );\n    }\n  }\n\n  /**\n   * @param {Object} options\n   * @return {*}\n   */\n  extendSeriesOptions (options) {\n    return options;\n  }\n\n  /**\n   * @param {string} type\n   */\n  setChartType (type) {\n    this._type = type;\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   */\n  projectXToSvg (x) {\n    return this.toRelativeX( x ) / this._viewportPixelX;\n  }\n\n  /**\n   * @param {number} y\n   * @return {number}\n   */\n  projectYToSvg (y) {\n    const svgY = this.chartHeight - ( y - this._currentLocalMinY ) / this._viewportPixelY;\n    return clampNumber( svgY, -1e6, 1e6 );\n  }\n\n  /**\n   * @param {number} pageX\n   * @param {number} pageY\n   * @return {number}\n   */\n  projectCursorToX ({ pageX = 0, pageY = 0 }) {\n    const { left } = getElementOffset( this.renderer.svgContainer );\n    const chartLeft = pageX - left;\n\n    return this.viewportRange[ 0 ] + chartLeft * this.viewportPixelX;\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   * @private\n   */\n  toRelativeX (x) {\n    return x - this._viewportRange[ 0 ];\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {string}\n   */\n  get chartType () {\n    return this._type;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isChart () {\n    return this._type === ChartTypes.chart;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isNavigatorChart () {\n    return this._type === ChartTypes.navigatorChart;\n  }\n\n  /**\n   * @return {SvgRenderer}\n   */\n  get renderer () {\n    return this._renderer;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get xAxis () {\n    return this._xAxis;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRange () {\n    return this._viewportRange;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRangeIndexes () {\n    return this._viewportRangeIndexes;\n  }\n\n  /**\n   * @return {number}\n   */\n  get viewportPixelX () {\n    return this._viewportPixelX;\n  }\n\n  /**\n   * @return {number}\n   */\n  get viewportPixelY () {\n    return this._viewportPixelY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get viewportPadding () {\n    return this._viewportPadding;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localExtremeDifference () {\n    return this._localMaxY - this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalExtremeDifference () {\n    return this._currentLocalMaxY - this._currentLocalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalMinY () {\n    return this._currentLocalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalMaxY () {\n    return this._currentLocalMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartWidth () {\n    return this._renderer.width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return this._chartHeight;\n  }\n\n  /**\n   * @return {string}\n   */\n  get chartMaskId () {\n    return this._chartMaskId;\n  }\n\n  /**\n   * @return {Tween}\n   */\n  get minMaxYAnimation () {\n    return this._minMaxYAnimation;\n  }\n\n  /**\n   * @return {SVGDefsElement}\n   */\n  get defs () {\n    return this._defs;\n  }\n\n  /**\n   * @return {number}\n   */\n  get seriesGroupTop () {\n    return this._seriesGroupTop;\n  }\n\n  /**\n   * @private\n   */\n  _updateViewportIndexes () {\n    const [ rangeStart, rangeEnd ] = this._viewportRange;\n    const [ minLowerIndex, minUpperIndex ] = binarySearchIndexes( this._xAxis, rangeStart );\n    const [ maxLowerIndex, maxUpperIndex ] = binarySearchIndexes( this._xAxis, rangeEnd );\n\n    this._viewportRangeIndexes = [ minUpperIndex, maxLowerIndex ];\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   * @param {boolean} preservePadding\n   * @private\n   */\n  _setViewportRange (minX, maxX, preservePadding = false) {\n    const [ newMinX, newMaxX ] = this._clampViewportRange( minX, maxX, preservePadding );\n\n    this._viewportRange = [ newMinX, newMaxX ];\n    this._viewportDistance = newMaxX - newMinX;\n  }\n\n  /**\n   * @param {number | Date} minX\n   * @param {number | Date} maxX\n   * @param {boolean} preservePadding\n   * @private\n   */\n  _clampViewportRange (minX, maxX, preservePadding = false) {\n    const xAxis = this._xAxis;\n\n    const globalMinX = xAxis[ 0 ];\n    const globalMaxX = xAxis[ xAxis.length - 1 ];\n\n    if (isDate( minX )) {\n      minX = minX.getTime();\n    }\n    if (isDate( maxX )) {\n      maxX = maxX.getTime();\n    }\n\n    if (minX > maxX) {\n      [ minX, maxX ] = [ maxX, minX ];\n    }\n\n    let newMinX = clampNumber( minX, globalMinX, globalMaxX );\n    let newMaxX = clampNumber( maxX, globalMinX, globalMaxX );\n\n    const actualPaddingX = this.computeViewportPadding( newMinX, newMaxX );\n\n    const receivedLeftPaddingX = clampNumber( newMinX - minX, 0, actualPaddingX );\n    const receivedRightPaddingX = clampNumber( maxX - newMaxX, 0, actualPaddingX );\n\n    if (!preservePadding) {\n      this._viewportLeftPaddingScale = receivedLeftPaddingX / actualPaddingX;\n    }\n    if (this._viewportLeftPaddingScale > 0) {\n      newMinX -= actualPaddingX * this._viewportLeftPaddingScale;\n    }\n\n    if (!preservePadding) {\n      this._viewportRightPaddingScale = receivedRightPaddingX / actualPaddingX;\n    }\n    if (this._viewportRightPaddingScale > 0) {\n      newMaxX += actualPaddingX * this._viewportRightPaddingScale;\n    }\n\n    return [ newMinX, newMaxX ];\n  }\n\n  /**\n   * @private\n   */\n  _updateOrCreateMinMaxYAnimation () {\n    if (!this._minMaxYAnimation) {\n      return this._createMinMaxYAnimation();\n    }\n\n    const currentLocalExtremeDifference = this.currentLocalExtremeDifference;\n    const newLocalExtremeDifference = this.localExtremeDifference;\n    const animationSign = currentLocalExtremeDifference < newLocalExtremeDifference;\n\n    if (animationSign !== this._minMaxYAnimationSign) {\n      return this._createMinMaxYAnimation();\n    }\n\n    this._patchMinMaxYAnimation();\n  }\n\n  /**\n   * @private\n   */\n  _createMinMaxYAnimation () {\n    if (this._minMaxYAnimation) {\n      this._minMaxYAnimation.cancel();\n    }\n\n    this._updateMinMaxAnimationSign();\n\n    this._minMaxYAnimation = new Tween(this, [\n      '_currentLocalMinY',\n      '_currentLocalMaxY'\n    ], [\n      this._localMinY,\n      this._localMaxY\n    ], {\n      duration: 300,\n      timingFunction: 'easeInOutQuad'\n    });\n\n    const onFinished = _ => {\n      this._minMaxYAnimation = null;\n    };\n\n    this._minMaxYAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._minMaxYAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._minMaxYAnimation.start();\n  }\n\n  /**\n   * @private\n   */\n  _patchMinMaxYAnimation () {\n    this._minMaxYAnimation.patchAnimation([\n      this._localMinY,\n      this._localMaxY\n    ]);\n  }\n\n  /**\n   * @private\n   */\n  _updateMinMaxAnimationSign () {\n    this._minMaxYAnimationSign = this.currentLocalExtremeDifference < this.localExtremeDifference;\n  }\n\n  /**\n   * @private\n   */\n  _updateMaskDimensions () {\n    if (!this._chartMask) {\n      return;\n    }\n    const rect = this._chartMask.querySelector( 'rect' );\n    setAttributeNS( rect, 'width', this.chartWidth, null );\n  }\n\n  /**\n   * @private\n   */\n  _createAxisCursor () {\n    const pathText = this._computeAxisCursorPath();\n\n    this._axisCursor = this.renderer.createPath(pathText, {\n      class: 'telechart-chart-cursor',\n      strokeWidth: 1,\n      strokeOpacity: 0,\n      stroke: '#ccc'\n    }, this._axisCursorGroup);\n\n    this._axisCursorGroup = this.renderer.createGroup({\n      class: 'telechart-chart-cursor-group',\n      transform: `translate(0, ${this._seriesGroupTop}) scale(1 1)`\n    }, this._axisCursor);\n\n    this.renderer.svgContainer.insertBefore( this._axisCursorGroup, this._seriesGroup );\n  }\n\n  /**\n   * @private\n   */\n  _updateAxisCursor () {\n    this.renderer.updatePath( this._axisCursor, this._computeAxisCursorPath() );\n  }\n\n  /**\n   * @return {string}\n   * @private\n   */\n  _computeAxisCursorPath () {\n    const x = this.xAxis[ this._axisCursorPointIndex ];\n    const svgX = this.projectXToSvg( x );\n\n    return `M${svgX} 0L${svgX} ${this.chartHeight}`;\n  }\n\n  /**\n   * @private\n   */\n  _addAxisCursorEvents () {\n    const mouseMoveListener = this._onMouseMove.bind( this );\n    const mouseLeaveListener = this._onMouseLeave.bind( this );\n\n    const touchStartListener = this._onTouchStart.bind( this );\n    const touchMoveListener = this._onTouchMove.bind( this );\n    const touchEndListener = this._onTouchEnd.bind( this );\n\n    this.renderer.svgContainer.addEventListener( 'touchstart', touchStartListener, { passive: false } );\n    this.renderer.svgContainer.addEventListener( 'touchmove', touchMoveListener, { passive: false } );\n    this.renderer.svgContainer.addEventListener( 'touchend', touchEndListener );\n\n    this.renderer.svgContainer.addEventListener( 'mousemove', mouseMoveListener );\n    this.renderer.svgContainer.addEventListener( 'mouseleave', mouseLeaveListener );\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onMouseMove (ev) {\n    this._onCursorMove( ev );\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onMouseLeave (ev) {\n    this._onCursorLeave();\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onTouchStart (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    this._touchStartPosition = {\n      pageX: targetTouch.pageX,\n      pageY: targetTouch.pageY\n    };\n\n    this._onCursorMove( targetTouch );\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onTouchMove (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    this._onCursorMove( targetTouch );\n\n    if (this._isScrollingAction === null) {\n      const {\n        pageX: startPageX,\n        pageY: startPageY\n      } = this._touchStartPosition;\n\n      const deltaY = Math.abs( startPageY - targetTouch.pageY );\n      const deltaX = Math.abs( startPageX - targetTouch.pageX );\n\n      this._isScrollingAction = deltaY >= deltaX;\n    }\n\n    if (this._cursorInsideChart\n      && !this._isScrollingAction) {\n      ev.preventDefault();\n    }\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onTouchEnd (ev) {\n    if (this._cursorInsideChart && ev.cancelable) {\n      ev.preventDefault();\n    }\n\n    this._isScrollingAction = null;\n    this._onCursorLeave();\n  }\n\n  /**\n   * @param cursorPosition\n   * @private\n   */\n  _onCursorMove (cursorPosition) {\n    const insideChart = this._insideChart( cursorPosition );\n\n    this._setInsideChartState(\n      insideChart\n    );\n\n    if (!insideChart) {\n      return;\n    }\n\n    const oldIndex = this._axisCursorPointIndex;\n\n    this._axisCursorPositionX = this.projectCursorToX( cursorPosition );\n    this._axisCursorPointIndex = this._findPointIndexByCursor( this._axisCursorPositionX );\n    this._axisCursorUpdateNeeded = true;\n\n    this.eachSeries(line => {\n      line.setMarkerPointIndex( this._axisCursorPointIndex );\n    });\n\n    this._updateLabel( this._axisCursorPointIndex !== oldIndex );\n  }\n\n  /**\n   * @private\n   */\n  _updateLabel (changed = true) {\n    this._label.setData(\n      this._prepareLabelData()\n    );\n\n    const date1 = new Date( this._viewportRange[ 0 ] );\n    const date2 = new Date( this._viewportRange[ 1 ] );\n    if (date1.getFullYear() !== date2.getFullYear()) {\n      this._label.showYear();\n    } else {\n      this._label.hideYear();\n    }\n\n    if (changed) {\n      this._label.requestUpdatePosition();\n    }\n  }\n\n  /**\n   * @param {number} cursorX\n   * @return {number}\n   * @private\n   */\n  _findPointIndexByCursor (cursorX) {\n    const [ lowerIndex, upperIndex ] = binarySearchIndexes( this.xAxis, cursorX );\n\n    let index = null;\n    if (lowerIndex < 0 && upperIndex >= 0) {\n      index = upperIndex;\n    } else if (lowerIndex >= 0 && upperIndex >= this.xAxis.length) {\n      index = lowerIndex;\n    } else {\n      const lowerDistance = Math.abs( cursorX - this.xAxis[ lowerIndex ] );\n      const upperDistance = Math.abs( cursorX - this.xAxis[ upperIndex ] );\n      const isLowerCloser = lowerDistance <= upperDistance;\n\n      const isLowerVisible = this.xAxis[ lowerIndex ] >= this.viewportRange[ 0 ];\n      const isUpperVisible = this.xAxis[ upperIndex ] <= this.viewportRange[ 1 ];\n\n      index = isLowerCloser\n        ? ( isLowerVisible ? lowerIndex : upperIndex )\n        : ( isUpperVisible ? upperIndex : lowerIndex );\n    }\n\n    return index;\n  }\n\n  /**\n   * @private\n   */\n  _onCursorLeave () {\n    this._setInsideChartState( false );\n  }\n\n  /**\n   * @param {boolean} isInside\n   * @private\n   */\n  _setInsideChartState (isInside) {\n    const changed = this._cursorInsideChart !== isInside;\n    if (!changed) {\n      return;\n    }\n\n    this._cursorInsideChart = isInside;\n\n    if (this._markerHideTimeout) {\n      clearTimeout( this._markerHideTimeout );\n      this._markerHideTimeout = null;\n    }\n\n    const change = _ => {\n      this._onCursorInsideChartChanged( isInside );\n    };\n\n    if (!isInside) {\n      // create short delay for cursor & markers hiding\n      this._markerHideTimeout = setTimeout( change , 1000 );\n    } else {\n      change();\n    }\n  }\n\n  /**\n   * @param {boolean} isInside\n   * @private\n   */\n  _onCursorInsideChartChanged (isInside) {\n    if (isInside) {\n      this._showMarkers();\n      this._showCursor();\n      this._label.showLabel();\n    } else {\n      this._hideMarkers();\n      this._hideCursor();\n      this._label.hideLabel();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _showMarkers () {\n    this.eachSeries(line => {\n      if (line.isVisible) {\n        line.showMarker();\n      }\n    });\n  }\n\n  /**\n   * @private\n   */\n  _hideMarkers () {\n    this.eachSeries(line => {\n      line.hideMarker();\n    });\n  }\n\n  /**\n   * @private\n   */\n  _showCursor () {\n    setAttributeNS( this._axisCursor, 'stroke-opacity', 1, null );\n  }\n\n  /**\n   * @private\n   */\n  _hideCursor () {\n    setAttributeNS( this._axisCursor, 'stroke-opacity', 0, null );\n  }\n\n  /**\n   * @param {number} pageX\n   * @param {number} pageY\n   * @return {boolean}\n   * @private\n   */\n  _insideChart ({ pageX, pageY }) {\n    const { top, left } = getElementOffset( this.renderer.svgContainer );\n    const chartTop = pageY - top - this._seriesGroupTop;\n    const chartLeft = pageX - left;\n\n    return chartTop >= 0 && chartTop <= this.chartHeight\n      && chartLeft >= 0 && chartLeft <= this.chartWidth;\n  }\n\n  /**\n   * @return {Array}\n   * @private\n   */\n  _prepareLabelData () {\n    const data = [];\n\n    const index = this._axisCursorPointIndex;\n    const x = this._xAxis[ index ];\n\n    this.eachSeries(line => {\n      data.push({\n        color: line.color,\n        label: line.label,\n        name: line.name,\n        visible: line.isVisible,\n        x,\n        y: line._yAxis[ index ],\n        svgY: this.projectYToSvg( line._yAxis[ index ] ),\n        svgX: this.projectXToSvg( line._xAxis[ index ] )\n      });\n    });\n\n    return data;\n  }\n}\n","import { BaseChart } from './BaseChart';\nimport { cssText } from '../../utils';\nimport { ChartTypes } from './ChartTypes';\n\nexport class Chart extends BaseChart {\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _type = ChartTypes.chart;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartHeight = 290;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartMaskPadding = 20;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _seriesGroupTop = 65;\n\n  /**\n   * Creates SVG group for storing series paths\n   */\n  createSeriesGroup () {\n    this._seriesGroup = this.renderer.createGroup({\n      class: 'telechart-series-group',\n      transform: `translate(0, ${this._seriesGroupTop}) scale(1 1)`,\n      mask: `url(#${this.chartMaskId})`\n    });\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   */\n  setNavigationRange (min, max) {\n    const [ minX, maxX ] = this._resolveNavigationRange( min, max );\n\n    this.setViewportRange( minX, maxX );\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   */\n  animateNavigationRangeTo (min, max) {\n    const [ minX, maxX ] = this._resolveNavigationRange( min, max );\n\n    this.animateViewportRangeTo( minX, maxX );\n  }\n\n  /**\n   * Sets initial viewport range for the chart\n   */\n  setInitialRange () {\n    const globalMinX = this.xAxis[ 0 ];\n    const globalMaxX = this.xAxis[ this.xAxis.length - 1 ];\n    const initialViewport = Math.floor( ( globalMaxX - globalMinX ) * .3 );\n    const viewportPadding = this.computeViewportPadding(\n      globalMaxX - initialViewport,\n      globalMaxX\n    );\n\n    // set initial range\n    this.setViewportRange(\n      globalMaxX - initialViewport - viewportPadding,\n      globalMaxX + viewportPadding\n    );\n  }\n\n  /**\n   * @param {*} options\n   * @return {*}\n   */\n  extendSeriesOptions (options) {\n    return Object.assign({}, options, {\n      strokeWidth: 2\n    });\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return this._chartHeight;\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @private\n   */\n  _resolveNavigationRange (min, max) {\n    const globalMinX = this.xAxis[ 0 ];\n    const globalMaxX = this.xAxis[ this.xAxis.length - 1 ];\n\n    const globalDistance = globalMaxX - globalMinX;\n\n    let minX = globalMinX + min * globalDistance;\n    let maxX = globalMinX + max * globalDistance;\n\n    const padding = this.computeViewportPadding( minX, maxX );\n\n    return [ minX - padding, maxX + padding ];\n  }\n}\n","export class Clock {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateMs = 0;\n\n  constructor () {\n    this._lastUpdateMs = performance.now();\n  }\n\n  /**\n   * @return {number}\n   */\n  getDelta () {\n    const now = performance.now();\n    const delta = now - this._lastUpdateMs;\n    this._lastUpdateMs = now;\n\n    return delta;\n  }\n}\n","export const NavigatorChartEvents = {\n  RANGE_CHANGED: 'rangeChanged',\n  ANIMATE_RANGE: 'animateRange',\n};\n","import { BaseChart } from './BaseChart';\nimport { ChartTypes } from './ChartTypes';\nimport {\n  clampNumber,\n  cssText,\n  getElementOffset, isTouchEventsSupported,\n  passiveIfSupported,\n  setAttributeNS,\n  setAttributesNS\n} from '../../utils';\nimport { NavigatorChartEvents } from './events/NavigatorChartEvents';\nimport { Tween, TweenEvents } from '../animation/Tween';\n\nexport class NavigatorChart extends BaseChart {\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _type = ChartTypes.navigatorChart;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartHeight = 40;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _offsetY = 388;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _paddingTopBottom = 2;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _paddingLeftRight = 11;\n\n  /**\n   * @extends\n   * @type {number}\n   * @private\n   * @readonly\n   */\n  _chartMaskPadding = 1;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _navigatorGroup = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _sliderGroup = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _slider = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _sliderControllerLeft = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _sliderControllerRight = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderControllerWidth = isTouchEventsSupported() ? 30 : 20;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderControllerOffset = isTouchEventsSupported() ? 17 : 12;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderWidth = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderLeftRightBorderWidth = 5;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _overlayLeft = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _overlayRight = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _overlayLeftWidth = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _overlayRightWidth = 0;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _overlayColor = 'rgba(240, 246, 249, 0.75)';\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _sliderUpdateNeeded = false;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _navigatorRange = [ .7, 1 ];\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _navigatorRangeAnimation = null;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _navigationRangeAnimationObject = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _navigatorMinRangeDistance = .05;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _navigatorChangeDirection = 'right';\n\n  /**\n   * Initializes navigator chart\n   */\n  initialize () {\n    super.initialize();\n\n    this._updateNavigatorDimensions();\n    this._createNavigatorGroup();\n    this._createOverlays();\n\n    this._createSliderEventsListeners();\n  }\n\n  update (deltaTime) {\n    super.update( deltaTime );\n\n    const hasRangeAnimation = this._navigatorRangeAnimation && this._navigatorRangeAnimation.isRunning;\n    if (hasRangeAnimation) {\n      this._navigatorRangeAnimation.update( deltaTime );\n\n      this.updateNavigationRange(\n        this._navigationRangeAnimationObject.from,\n        this._navigationRangeAnimationObject.to\n      );\n    }\n\n    if (this._sliderUpdateNeeded) {\n      this._updateNavigatorElements();\n\n      this._sliderUpdateNeeded = false;\n    }\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @param {*} options\n   */\n  animateNavigationRangeTo (min = 0, max = 1, options = {}) {\n    const {\n      duration = 300,\n      timingFunction = 'easeInOutQuad'\n    } = options;\n\n    const [ newMin, newMax ] = this._clampNavigationRange( min, max );\n\n    if (this._navigatorRangeAnimation) {\n      return this._navigatorRangeAnimation.patchAnimation( [ newMin, newMax ] );\n    }\n\n    this._navigationRangeAnimationObject = {\n      from: this._navigatorRange[ 0 ],\n      to: this._navigatorRange[ 1 ]\n    };\n\n    this._navigatorRangeAnimation = new Tween(this._navigationRangeAnimationObject, [ 'from', 'to' ], [\n      newMin, newMax\n    ], {\n      duration, timingFunction\n    });\n\n    const onFinished = _ => {\n      this._navigatorRangeAnimation = null;\n    };\n\n    this._navigatorRangeAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._navigatorRangeAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._navigatorRangeAnimation.start();\n\n    this.emit( NavigatorChartEvents.ANIMATE_RANGE, [ newMin, newMax ] );\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @param {boolean} emitChange\n   */\n  setNavigationRange (min = 0, max = 1, { emitChange = true } = {}) {\n    [ min, max ] = this._clampNavigationRange( min, max );\n    this._navigatorRange = [ min, max ];\n\n    this._updateNavigatorDimensions();\n    this._sliderUpdateNeeded = true;\n\n    if (emitChange) {\n      this.emit( NavigatorChartEvents.RANGE_CHANGED, this._navigatorRange );\n    }\n  }\n\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   */\n  updateNavigationRange (min, max) {\n    this.setNavigationRange( min, max, { emitChange: false } );\n  }\n\n  /**\n   * Creates SVG group for storing series paths\n   */\n  createSeriesGroup () {\n    this._seriesGroup = this.renderer.createGroup({\n      class: 'telechart-navigator-series-group',\n      transform: `translate(0, ${this._offsetY}) scale(1 1)`,\n      mask: `url(#${this.chartMaskId})`\n    });\n  }\n\n  onRendererResize () {\n    super.onRendererResize();\n\n    this._updateNavigatorDimensions();\n    this._sliderUpdateNeeded = true;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return this._chartHeight;\n  }\n\n  /**\n   * @return {number}\n   */\n  get navigatorWidth () {\n    return this.chartWidth - this._paddingLeftRight * 2;\n  }\n\n  /**\n   * @return {number}\n   */\n  get navigatorHeight () {\n    return this._chartHeight + this._paddingTopBottom * 2;\n  }\n\n  /**\n   * @private\n   */\n  _updateNavigatorDimensions () {\n    const overlayLeftScale = this._navigatorRange[ 0 ];\n    const overlayRightScale = ( 1 - this._navigatorRange[ 1 ] );\n    const navigatorWidth = this.navigatorWidth;\n\n    this._overlayLeftWidth = navigatorWidth * overlayLeftScale;\n    this._overlayRightWidth = navigatorWidth * overlayRightScale;\n    this._sliderWidth = navigatorWidth - this._overlayLeftWidth - this._overlayRightWidth;\n  }\n\n  /**\n   * @private\n   */\n  _createNavigatorGroup () {\n    const offsetY = this._offsetY - this._paddingTopBottom;\n\n    this._navigatorGroup = this.renderer.createGroup({\n      class: 'telechart-navigator',\n      transform: `translate(${this._paddingLeftRight}, ${offsetY}) scale(1 1)`,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _createOverlays () {\n    this._overlayLeft = this.renderer.createRect(this._overlayLeftWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-overlay',\n      x: 0,\n      y: 0,\n      style: cssText({\n        fill: this._overlayColor\n      })\n    }, this._navigatorGroup);\n\n    this._overlayRight = this.renderer.createRect(this._overlayRightWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-overlay',\n      x: this.navigatorWidth - this._overlayRightWidth,\n      y: 0,\n      style: cssText({\n        fill: this._overlayColor\n      })\n    }, this._navigatorGroup);\n\n    // creating slider\n    this._sliderGroup = this.renderer.createGroup({\n      class: 'telechart-navigator-slider-group',\n      transform: `translate(${this._overlayLeftWidth}, 0) scale(1 1)`,\n      fill: 'none'\n    }, [], this._navigatorGroup);\n\n    this._slider = this.renderer.createRect(this._sliderWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-slider',\n      x: 0,\n      y: 0,\n      fill: 'rgba(163, 196, 220, 0.47)'\n    }, this._sliderGroup);\n\n    this._sliderControllerLeft = this.renderer.createRect(this._sliderControllerWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-slider-controller left',\n      x: -this._sliderControllerOffset,\n      y: 0,\n      fill: 'rgba(255,255,255,.0001)'\n    }, this._sliderGroup);\n\n    this._sliderControllerRight = this.renderer.createRect(this._sliderControllerWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-slider-controller right',\n      x: this._sliderWidth - this._sliderControllerWidth + this._sliderControllerOffset,\n      y: 0,\n      fill: 'rgba(255,255,255,.0001)'\n    }, this._sliderGroup);\n\n    // creating mask\n    const maskId = `telechart-navigator-slider-mask-${this.id}`;\n    this._sliderMask = this.renderer.createMask({\n      id: maskId\n    }, [], this.defs);\n\n    this._sliderMaskOuter = this.renderer.createRect(this._sliderWidth, this.navigatorHeight, {\n      x: 0,\n      y: 0,\n      fill: 'white'\n    }, this._sliderMask);\n\n    this._sliderMaskInner = this.renderer.createRect(this._sliderWidth - 2 * this._sliderLeftRightBorderWidth, this.navigatorHeight - 2, {\n      x: this._sliderLeftRightBorderWidth,\n      y: 1,\n      fill: 'black'\n    }, this._sliderMask);\n\n    // connect mask to slider\n    setAttributeNS( this._sliderGroup, 'mask', `url(#${maskId})`, null );\n  }\n\n  /**\n   * @private\n   */\n  _updateNavigatorElements () {\n    // left overlay\n    setAttributeNS( this._overlayLeft, 'width', this._overlayLeftWidth, null );\n\n    // right overlay\n    setAttributeNS( this._overlayRight, 'width', this._overlayRightWidth, null );\n    setAttributeNS( this._overlayRight, 'x', this.navigatorWidth - this._overlayRightWidth, null );\n\n    // slider\n    setAttributeNS( this._sliderGroup, 'transform', `translate(${this._overlayLeftWidth}, 0) scale(1 1)`, null );\n    setAttributeNS( this._slider, 'width', this._sliderWidth, null );\n    setAttributeNS( this._sliderControllerRight, 'x', this._sliderWidth - this._sliderControllerWidth + this._sliderControllerOffset, null );\n\n    // mask\n    setAttributeNS( this._sliderMaskOuter, 'width', this._sliderWidth, null );\n    setAttributesNS(this._sliderMaskInner, {\n      width: Math.max( 0, this._sliderWidth - 2 * this._sliderLeftRightBorderWidth ),\n      height: this.navigatorHeight - 2,\n      x: this._sliderLeftRightBorderWidth\n    });\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @param {boolean} preserveDistance\n   * @return {Array<number>}\n   * @private\n   */\n  _clampNavigationRange (min = 0, max = 1, preserveDistance = false) {\n    const preservedDistance = clampNumber( max - min, this._navigatorMinRangeDistance, 1 );\n\n    min = clampNumber( min, 0, 1 );\n    max = clampNumber( max, 0, 1 );\n\n    const isRightController = this._navigatorChangeDirection === 'right';\n\n    const distance = max - min;\n    const minDistance = preserveDistance\n      ? preservedDistance\n      : this._navigatorMinRangeDistance;\n\n    if (distance < minDistance) {\n      if (isRightController) {\n        if (max - minDistance >= 0) {\n          min = max - minDistance;\n        } else {\n          min = 0;\n          max = minDistance;\n        }\n      } else {\n        if (min + minDistance <= 1) {\n          max = min + minDistance;\n        } else {\n          max = 1;\n          min = 1 - minDistance;\n        }\n      }\n    }\n\n    return [ min, max ];\n  }\n\n  /**\n   * @private\n   */\n  _createSliderEventsListeners () {\n    // slider\n    const touchStartListener = this._onSliderTouchStart.bind( this );\n    const touchMoveListener = this._onSliderTouchMove.bind( this );\n    const mouseDownListener = this._onSliderMouseDown.bind( this );\n\n    this._slider.addEventListener( 'touchstart', touchStartListener, passiveIfSupported );\n    this._slider.addEventListener( 'touchmove', touchMoveListener, passiveIfSupported );\n\n    this._slider.addEventListener( 'mousedown', mouseDownListener );\n\n    // slider controllers\n    // left\n    const controllerLeftTouchStartListener = this._onSliderControllerTouchStart.bind( this, 'left' );\n    const controllerLeftTouchMoveListener = this._onSliderControllerTouchMove.bind( this );\n    const controllerLeftMouseDownListener = this._onSliderControllerMouseDown.bind( this, 'left' );\n\n    //right\n    const controllerRightTouchStartListener = this._onSliderControllerTouchStart.bind( this, 'right' );\n    const controllerRightTouchMoveListener = this._onSliderControllerTouchMove.bind( this );\n    const controllerRightMouseDownListener = this._onSliderControllerMouseDown.bind( this, 'right' );\n\n    // left\n    this._sliderControllerLeft.addEventListener( 'touchstart', controllerLeftTouchStartListener, passiveIfSupported );\n    this._sliderControllerLeft.addEventListener( 'touchmove', controllerLeftTouchMoveListener, passiveIfSupported );\n    this._sliderControllerLeft.addEventListener( 'mousedown', controllerLeftMouseDownListener );\n\n    // right\n    this._sliderControllerRight.addEventListener( 'touchstart', controllerRightTouchStartListener, passiveIfSupported );\n    this._sliderControllerRight.addEventListener( 'touchmove', controllerRightTouchMoveListener, passiveIfSupported );\n    this._sliderControllerRight.addEventListener( 'mousedown', controllerRightMouseDownListener );\n\n    // overlays\n    const overlayLeftClickListener = this._onSliderOverlayClick.bind( this, 'left' );\n    const overlayRightClickListener = this._onSliderOverlayClick.bind( this, 'right' );\n\n    this._overlayLeft.addEventListener( 'click', overlayLeftClickListener );\n    this._overlayRight.addEventListener( 'click', overlayRightClickListener );\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderTouchStart (ev) {\n    const {\n      pageX, pageY\n    } = ev.targetTouches[ 0 ];\n\n    this._sliderStartEvent = {\n      pageX, pageY\n    };\n\n    this._sliderStartPosition = this._navigatorRange.slice();\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderTouchMove (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    const {\n      pageX: startPageX\n    } = this._sliderStartEvent;\n\n    const {\n      pageX = 0\n    } = targetTouch;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n\n    const startPosition = this._sliderStartPosition;\n\n    let [ min, max ] = this._clampNavigationRange(\n      startPosition[ 0 ] - positionDelta,\n      startPosition[ 1 ] - positionDelta,\n      true\n    );\n\n    this.setNavigationRange( min, max );\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderMouseDown (ev) {\n    const {\n      pageX, pageY\n    } = ev;\n\n    this._sliderStartEvent = {\n      pageX, pageY\n    };\n\n    this._sliderStartPosition = this._navigatorRange.slice();\n\n    const sliderMouseMoveListener = this._onSliderMouseMove.bind( this );\n\n    const lastBodyStyle = document.body.getAttribute( 'style' );\n    setAttributeNS( document.body, 'style', cssText({ cursor: 'grabbing' }), null );\n    setAttributeNS( this._slider, 'style', cssText({ cursor: 'grabbing' }), null );\n\n    document.addEventListener('mousemove', sliderMouseMoveListener);\n    document.addEventListener('mouseup', ev => {\n      if (lastBodyStyle) {\n        setAttributeNS( document.body, 'style', lastBodyStyle, null );\n      } else {\n        document.body.removeAttribute( 'style' );\n      }\n      setAttributeNS( this._slider, 'style', cssText({ cursor: 'grab' }), null );\n\n      document.removeEventListener( 'mousemove', sliderMouseMoveListener )\n    });\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderMouseMove (ev) {\n    ev.preventDefault();\n\n    const {\n      pageX: startPageX\n    } = this._sliderStartEvent;\n\n    const {\n      pageX = 0\n    } = ev;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n\n    const startPosition = this._sliderStartPosition;\n\n    let [ min, max ] = this._clampNavigationRange(\n      startPosition[ 0 ] - positionDelta,\n      startPosition[ 1 ] - positionDelta,\n      true\n    );\n\n    this.setNavigationRange( min, max );\n  }\n\n  /**\n   * @param {string} direction\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderControllerTouchStart (direction, ev) {\n    const {\n      pageX, pageY\n    } = ev.targetTouches[ 0 ];\n\n    this._sliderControllerStartPosition = this._navigatorRange.slice();\n    this._navigatorChangeDirection = direction;\n    this._sliderControllerStartEvent = {\n      pageX, pageY\n    };\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderControllerTouchMove (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    const {\n      pageX: startPageX\n    } = this._sliderControllerStartEvent;\n\n    const {\n      pageX = 0\n    } = targetTouch;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n    const startPosition = this._sliderControllerStartPosition;\n    const isLeft = this._navigatorChangeDirection === 'left';\n\n    let [ min, max ] = [\n      startPosition[ 0 ] - ( isLeft ? positionDelta : 0 ),\n      startPosition[ 1 ] - ( !isLeft ? positionDelta : 0 )\n    ];\n\n    [ min, max ] = this._clampNavigationRange( min, max );\n\n    if (isLeft) {\n      this._sliderControllerStartPosition[ 1 ] = max;\n    } else {\n      this._sliderControllerStartPosition[ 0 ] = min;\n    }\n\n    this.setNavigationRange( min, max );\n  }\n\n  /**\n   * @param {string} direction\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderControllerMouseDown (direction, ev) {\n    const {\n      pageX, pageY\n    } = ev;\n\n    this._sliderControllerStartPosition = this._navigatorRange.slice();\n    this._navigatorChangeDirection = direction;\n    this._sliderControllerStartEvent = {\n      pageX, pageY\n    };\n\n    const mouseMoveListener = this._onSliderControllerMouseMove.bind( this );\n\n    const lastBodyStyle = document.body.getAttribute( 'style' );\n    setAttributeNS( document.body, 'style', cssText({ cursor: 'e-resize' }), null );\n\n    document.addEventListener('mousemove', mouseMoveListener);\n    document.addEventListener('mouseup', ev => {\n      if (lastBodyStyle) {\n        setAttributeNS( document.body, 'style', lastBodyStyle, null );\n      } else {\n        document.body.removeAttribute( 'style' );\n      }\n\n      document.removeEventListener( 'mousemove', mouseMoveListener )\n    });\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderControllerMouseMove (ev) {\n    ev.preventDefault();\n\n    const {\n      pageX: startPageX\n    } = this._sliderControllerStartEvent;\n\n    const {\n      pageX = 0\n    } = ev;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n    const startPosition = this._sliderControllerStartPosition;\n    const isLeft = this._navigatorChangeDirection === 'left';\n\n    let [ min, max ] = [\n      startPosition[ 0 ] - ( isLeft ? positionDelta : 0 ),\n      startPosition[ 1 ] - ( !isLeft ? positionDelta : 0 )\n    ];\n\n    [ min, max ] = this._clampNavigationRange( min, max );\n\n    if (isLeft) {\n      this._sliderControllerStartPosition[ 1 ] = max;\n    } else {\n      this._sliderControllerStartPosition[ 0 ] = min;\n    }\n\n    this.setNavigationRange( min, max );\n  }\n\n  /**\n   * @param {string} direction\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderOverlayClick (direction, ev) {\n    const position = this._resolveNavigatorPosition( ev );\n    const halfDistance = ( this._navigatorRange[ 1 ] - this._navigatorRange[ 0 ] ) * .5;\n\n    const [ min, max ] = this._clampNavigationRange(\n      position - halfDistance,\n      position + halfDistance,\n      true\n    );\n\n    this.animateNavigationRangeTo( min, max );\n  }\n\n  /**\n   * @param {number} pageX\n   * @param {number} pageY\n   * @private\n   */\n  _resolveNavigatorPosition ({ pageX, pageY }) {\n    const { left } = getElementOffset( this._navigatorGroup );\n    return ( pageX - left ) / this.navigatorWidth;\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { SvgRenderer } from '../SvgRenderer';\nimport {\n  addClass, createElement,\n  cssText, hasClass,\n  removeClass, attachRipple\n} from '../../utils';\n\nlet LABEL_BUTTONS_ID = 1;\n\nexport class LabelButtons extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = LABEL_BUTTONS_ID++;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _container = null;\n\n  /**\n   * @param {SvgRenderer} renderer\n   */\n  constructor (renderer) {\n    super();\n\n    this._renderer = renderer;\n  }\n\n  /**\n   * @param {Chart | BaseChart} chart\n   */\n  setChart (chart) {\n    this._chart = chart;\n  }\n\n  initialize () {\n    this._createContainer();\n    this._createButtons();\n  }\n\n  /**\n   * @param {*} deltaTime\n   */\n  update (deltaTime) {\n  }\n\n  /**\n   * @private\n   */\n  _createContainer () {\n    const parent = this._renderer.parentContainer;\n    const container = createElement('div', {\n      attrs: {\n        class: 'telechart-label-buttons',\n        style: cssText({\n          opacity: 0\n        })\n      }\n    });\n\n    parent.appendChild( container );\n\n    this._container = container;\n  }\n\n  /**\n   * @private\n   */\n  _createButtons () {\n    this._chart.eachSeries(line => {\n      this._container.appendChild(\n        this._createButton( line )\n      )\n    });\n  }\n\n  /**\n   * @param line\n   * @return {Element}\n   * @private\n   */\n  _createButton (line) {\n    const buttonIcon = this._createSvgIcon( line );\n\n    const buttonText = createElement('div', {\n      attrs: {\n        class: 'telechart-label-button__text'\n      }\n    }, line.name);\n\n    const button = createElement('button', {\n      attrs: {\n        class: 'telechart-label-button'\n      }\n    }, [ buttonIcon, buttonText ]);\n\n    attachRipple( button );\n\n    button.addEventListener('click', _ => {\n      line.toggleVisible();\n\n      const selectedClass = 'telechart-label-button_selected';\n      const animatingClass = 'telechart-label-button_animating';\n\n      const hasSelectedClass = hasClass( button, selectedClass );\n\n      if (hasSelectedClass) {\n        addClass( button, animatingClass );\n      } else {\n        removeClass( button, animatingClass );\n      }\n\n      setTimeout(_ => {\n        if (hasSelectedClass) {\n          removeClass( button, selectedClass );\n        } else {\n          addClass( button, selectedClass );\n        }\n        setTimeout(_ => {\n          removeClass( button, animatingClass );\n        }, 100);\n      }, 10);\n    });\n\n    return button;\n  }\n\n  /**\n   * @param line\n   * @return {Element}\n   * @private\n   */\n  _createSvgIcon (line) {\n    const iconSize = 22;\n\n    const pathText = 'M0.9,4.2 3.6,7 9.6,0.9';\n\n    const svgContainer = createElement('svg', {\n      useNS: false,\n      attrs: {\n        xmlns: SvgRenderer.NS,\n        version: '1.1',\n        width: iconSize,\n        height: iconSize,\n        viewBox: [ 0, 0, iconSize, iconSize ].join( ' ' ),\n        class: 'telechart-label-button__icon',\n        style: cssText({\n          color: line.color,\n          fill: line.color,\n          stroke: line.color\n        })\n      }\n    }, [], SvgRenderer.NS);\n\n    const group = this._renderer.createGroup({}, [], svgContainer);\n\n    this._renderer.createCircle(iconSize / 2, iconSize / 2, iconSize / 2, {\n      fill: line.color,\n    }, group);\n\n    this._renderer.createPath(pathText, {\n      stroke: '#fff',\n      fill: 'none',\n      strokeWidth: 1.8,\n      strokeLinecap: 'round',\n      strokeLinejoin: 'round',\n      strokeMiterlimit: 10,\n      transform: `translate(6, 7)`\n    }, group);\n\n    this._renderer.createCircle(iconSize / 2, iconSize / 2, 0, {\n      fill: 'white',\n      class: 'telechart-label-button__icon-mask'\n    }, group);\n\n    return svgContainer;\n  }\n}\n","import './style/telechart.scss';\n\nimport { AnimationSource, AnimationSourceEvents } from './core/animation/AnimationSource';\nimport { SvgRenderer } from \"./core/SvgRenderer\";\nimport { Chart } from './core/chart/Chart';\nimport { Clock } from './core/misc/Clock';\nimport { NavigatorChart } from './core/chart/NavigatorChart';\nimport { ChartEvents } from './core/chart/events/ChartEvents';\n\nimport {\n  addClass,\n  interpolateThemeClass,\n  removeClass,\n  resolveElement,\n  ChartThemes,\n  setAttributesNS,\n  cssText, createElement, ROOT_CLASS_NAME\n} from \"./utils\";\nimport { NavigatorChartEvents } from './core/chart/events/NavigatorChartEvents';\nimport { LabelButtons } from './core/chart/LabelButtons';\n\nlet TELECHART_ID = 1;\n\nexport class Telechart {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = TELECHART_ID++;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _rootElement = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {NavigatorChart}\n   * @private\n   */\n  _navigatorChart = null;\n\n  /**\n   * @type {LabelButtons}\n   * @private\n   */\n  _labelButtons = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _themeName = ChartThemes.default;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _title = '';\n\n  /**\n   * @type {SVGTextElement}\n   * @private\n   */\n  _titleElement = null;\n\n  /**\n   * @type {Clock}\n   * @private\n   */\n  _clock = null;\n\n  /**\n   * @type {AnimationSource}\n   * @private\n   */\n  _animationSource = null;\n\n  /**\n   * @static\n   * @param {Element | string} mountTo Element or selector\n   * @param {Object} options\n   */\n  static create (mountTo, options = {}) {\n    const chart = new Telechart();\n\n    chart.setOptions( options );\n    chart.mount( resolveElement( mountTo ) );\n    chart.initialize();\n\n    chart.firstRender();\n\n    return chart;\n  }\n\n  /**\n   * @param {Object} options\n   */\n  setOptions (options = {}) {\n    this._options = options;\n  }\n\n  /**\n   * @param {Element} parent\n   */\n  mount (parent) {\n    const root = createElement('div', {\n      attrs: {\n        class: ROOT_CLASS_NAME\n      }\n    });\n\n    parent.appendChild( root );\n\n    this._rootElement = root;\n    this._renderer = new SvgRenderer( root );\n  }\n\n  /**\n   * Initialize the chart\n   */\n  initialize () {\n    this.setTheme( this._options.theme || ChartThemes.default );\n    this.setTitle( this._options.title );\n\n    // create components\n    this._createChart();\n    this._createNavigatorChart();\n    this._createLabelButtons();\n    this._addEventsListeners();\n\n    // create animation loop\n    this._clock = new Clock();\n    this._animationSource = new AnimationSource( 60, 1 ); // fps, timeScale\n    this._animationSource.on(AnimationSourceEvents.UPDATE, deltaTime => {\n      this.update( deltaTime );\n    });\n\n    requestAnimationFrame(_ => {\n      this.animate();\n    });\n  }\n\n  /**\n   * Draws first frame\n   */\n  firstRender () {\n    this._chart.firstRender();\n    this._navigatorChart.firstRender();\n  }\n\n  /**\n   * Animation loop\n   */\n  animate () {\n    const deltaTime = this._clock.getDelta();\n    this._animationSource.update( deltaTime );\n\n    requestAnimationFrame(_ => this.animate());\n  }\n\n  /**\n   * Update loop\n   */\n  update (deltaTime) {\n    this._chart.update( deltaTime );\n    this._navigatorChart.update( deltaTime );\n  }\n\n  /**\n   * @param {string} themeName\n   */\n  setTheme (themeName) {\n    const rootElement = this._rootElement;\n\n    removeClass(\n      rootElement,\n      Object.keys( ChartThemes )\n        .map( interpolateThemeClass )\n    );\n\n    addClass(\n      rootElement,\n      interpolateThemeClass( themeName )\n    );\n\n    this._themeName = themeName;\n  }\n\n  /**\n   * @param {string} title\n   */\n  setTitle (title) {\n    this._title = title;\n\n    !this._titleElement\n      ? this._createTitle( title )\n      : this._updateTitle( title );\n  }\n\n  /**\n   * Destroys the chart instance\n   */\n  destroy () {\n    this._renderer && this._renderer.destroy();\n    this._rootElement = null;\n    this._renderer = null;\n  }\n\n  /*/!**\n   * @return {boolean}\n   *!/\n  get inWindowViewport () {\n    const windowHeight = getWindowHeight();\n    const windowTopLine = getDocumentScrollTop();\n    const windowBottomLine = windowHeight + windowTopLine;\n\n    const { top: chartTopLine } = getElementOffset( this._renderer.parentContainer );\n    const chartHeight = getElementHeight( this._renderer.parentContainer );\n    const chartBottomLine = chartTopLine + chartHeight;\n\n    return windowTopLine < chartTopLine\n      && windowBottomLine > chartTopLine\n      || windowTopLine < chartBottomLine\n      && windowBottomLine > chartBottomLine;\n  }*/\n\n  /**\n   * @return {string}\n   */\n  get themeName () {\n    return this._themeName;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _createTitle (title = this._options.title) {\n    if (!title) {\n      return;\n    }\n\n    const text = this._renderer.createText(title, {\n      class: 'telechart-title',\n      x: 16,\n      y: 36,\n      textAnchor: 'start',\n      style: cssText({\n        opacity: 0\n      })\n    });\n\n    setTimeout(_ => {\n      setAttributesNS(text, {\n        style: cssText({\n          opacity: 1\n        })\n      });\n    }, 200);\n\n    this._titleElement = text;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _updateTitle (title) {\n    if (!this._titleElement) {\n      return;\n    }\n    const tspan = this._titleElement.querySelector( 'tspan' );\n    tspan.textContent = title;\n  }\n\n  /**\n   * @private\n   */\n  _createChart () {\n    this._chart = new Chart(\n      this._renderer,\n      this._options\n    );\n\n    this._chart.initialize();\n  }\n\n  /**\n   * @private\n   */\n  _createNavigatorChart () {\n    this._navigatorChart = new NavigatorChart(\n      this._renderer,\n      this._options\n    );\n\n    this._navigatorChart.initialize();\n  }\n\n  /**\n   * @private\n   */\n  _createLabelButtons () {\n    const labelButtons = new LabelButtons( this._renderer );\n    labelButtons.setChart( this._chart );\n    labelButtons.initialize();\n\n    this._labelButtons = labelButtons;\n  }\n\n  /**\n   * @private\n   */\n  _addEventsListeners () {\n    this._chart.on(ChartEvents.SERIES_VISIBLE_CHANGE, line => {\n      this._navigatorChart.toggleSeries( line.label );\n    });\n\n    this._navigatorChart.on(NavigatorChartEvents.RANGE_CHANGED, range => {\n      this._chart.setNavigationRange( ...range );\n    });\n\n    this._navigatorChart.on(NavigatorChartEvents.ANIMATE_RANGE, range => {\n      this._chart.animateNavigationRangeTo( ...range );\n    });\n  }\n}\n","export * from './Telechart';\n"],"sourceRoot":""}