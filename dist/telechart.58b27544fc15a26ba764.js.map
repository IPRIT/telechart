{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/core/misc/EventEmitter.js","webpack:///./src/utils/constants.js","webpack:///./src/utils/animation.js","webpack:///./src/utils/base.js","webpack:///./src/utils/browser.js","webpack:///./src/utils/text.js","webpack:///./src/utils/dom.js","webpack:///./src/utils/events.js","webpack:///./src/utils/svg.js","webpack:///./src/utils/themes.js","webpack:///./src/utils/algorithms.js","webpack:///./src/core/animation/AnimationSource.js","webpack:///./src/core/SvgRenderer.js","webpack:///./src/core/series/SeriesTypes.js","webpack:///./src/core/point/Point.js","webpack:///./src/core/animation/Tween.js","webpack:///./src/core/chart/ChartTypes.js","webpack:///./src/core/series/Series.js","webpack:///./src/core/chart/events/ChartEvents.js","webpack:///./src/core/chart/Label.js","webpack:///./src/core/chart/BaseChart.js","webpack:///./src/core/chart/Chart.js","webpack:///./src/core/misc/Clock.js","webpack:///./src/core/chart/events/NavigatorChartEvents.js","webpack:///./src/core/chart/NavigatorChart.js","webpack:///./src/Telechart.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EventEmitter","this","_eventListeners","_proto","emit","eventName","_len","arguments","length","args","Array","_key","_fireEvent","apply","concat","on","cb","context","addEventListener","once","addEventListenerOnce","_subscribeEvent","_this","listener","_len2","_key2","removeEventListener","listenerIndex","findIndex","_ref","splice","removeAllListeners","_allocateEvent","push","eventListeners","_len3","_key3","_eventListeners$i","TimeRanges","second","minute","hour","day","week","month","year","FRAMES_PER_SECOND","FRAMES_DELTA_SEC","FRAMES_DELTA_MS","warp","deltaTime","framesDeltaSec","warpRatio","animationTimeout","timeoutMs","Promise","resolve","fulfillmentCallback","requestAnimationFrame","setTimeout","_","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","objectEachKey","fn","keys","forEach","objectMapKey","map","clampNumber","min","max","Infinity","Math","ensureNumber","Number","isNaN","isObject","isDate","Date","valueOf","isBrowserSafari","test","navigator","userAgent","isTouchEventsSupported","document","documentElement","passiveSupported","options","passive","window","err","isPassiveEventSupported","passiveIfSupported","passiveIfSupportedFn","isTransformAvailable","div","createElement","undefined","style","isTransformSupported","capitalize","text","String","toUpperCase","substr","cssText","styleObject","reduce","css","prop","camelToKebabCase","toLowerCase","replace","parseQueryString","href","queryString","split","slice","part","keyValue","result","obj","assign","tagName","children","element","createElementNS","attrs","useNS","setAttributesNS","attrsNS","setAttributes","isArray","node","innerHTML","textContent","appendChild","resolveElement","elementOrSelector","querySelector","getElementOffset","top","left","rect","getBoundingClientRect","win","ownerDocument","defaultView","pageYOffset","pageXOffset","e","getElementRelativeOffset","targetElement","relativeElement","targetOffset","relativeOffset","scrollTop","scrollLeft","getDocumentHeight","body","scrollHeight","offsetHeight","clientHeight","getDocumentScrollTop","supportPageOffset","isCSS1Compat","compatMode","getWindowHeight","innerHeight","getElementHeight","getElementWidth","innerWidth","clientWidth","getElementScrollHeight","getElementScrollWidth","scrollWidth","offsetWidth","camelCaseAttrWhiteList","attr","includes","setAttribute","setAttributeNS","hasClass","className","classList","RegExp","addClass","classNames","trim","removeClass","existingClasses","classesToDelete","Set","has","console","warn","ev","parseSimplePathText","pathText","parseRegex","segments","exec","index","lastIndex","type","x","y","segmentsToPathText","j","join","ROOT_CLASS_NAME","interpolateThemeClass","themeName","ChartThemes","default","dark","ChartThemesColors","arraysEqual","arrayA","arrayB","arrayMinIndex","array","startIndex","endIndex","minIndex","arrayMin","arrayMaxIndex","maxIndex","arrayMax","arrayMinMaxIndexes","arrayMinMax","_arrayMinMaxIndexes","arraySum","sum","arrayAvg","binarySearchIndexes","order","right","mid","binarySearchObjectIndexes","AnimationSourceEvents","AnimationSource","_EventEmitter","updatesPerSecond","timeScale","_timeElapsed","_timeScale","_updateInvokes","_updatesPerSecond","_updateEach","_lastUpdateAt","_paused","update","_callUpdate","dispose","set","telechartTitle","TELECHART_NAME","INTERNAL_AUTOINCREMENT","SvgRenderer","contextElement","_id","_parentContainer","_svgContainer","_minHeight","_minWidth","_width","_height","_isInitialized","_init","createGroup","parent","group","NS","createClipPath","clipPath","createMask","mask","createLinearGradient","stops","stopElements","stopAttrs","gradient","createDesc","createText","tspan","textElement","createDefs","createPath","pathElement","updatePath","createRect","width","height","rectElement","createCircle","cx","cy","radius","circleElement","selector","querySelectorAll","from","destroy","_detachEvents","_clearParentContainer","_updateDimensions","_createSvgContainer","_insertSvgContainer","_attachEvents","Error","xmlns","version","viewBox","class","_onResize","_attachResizeListener","_detachResizeListener","_resizeListener","SeriesTypes","POINT_AUTOINCREMENT","Point","_type","_x","_y","_svgX","_svgY","setType","pointType","setX","setY","setXY","addX","addY","addXY","setSvgX","svgX","setSvgY","svgY","setSvgXY","TWEEN_ID","TweenState","NOT_STARTED","RUNNING","PAUSED","COMPLETED","CANCELLED","TweenEvents","DEFAULT_PARAMS","duration","timingFunction","Tween","target","properties","targetValues","params","_params","_state","_duration","_timingFunctionName","_timingFunction","_target","_properties","_targetValues","_startValues","_initParams","_construct","isRunning","_updateAnimation","_checkDuration","start","isNotStarted","_getPropertyValues","pause","finish","_dispose","cancel","patchAnimation","setTimeScale","_this$_params","_getTimingFunction","progress","timingProgress","delta","values","_getPropertyValue","functionName","defaultFunctionName","timingFunctions","ChartTypes","chart","navigatorChart","SERIES_AUTOINCREMENT","OpacityAnimationType","Series","renderer","settings","_parent","_renderer","_chart","_isSimpleChart","_settings","_seriesOptions","_xAxis","_yAxis","_name","_label","_color","_strokeWidth","_visible","_group","_pathText","_pathElement","_pathUpdateNeeded","_marker","_markersGroup","_markerVisible","_markerAnimation","_markerRadius","_maxMarkerRadius","_markerPointIndex","_markerPositionUpdateNeeded","_points","_localMaxY","_localMinY","_opacity","_opacityAnimation","_opacityAnimationType","_parseSettings","initialize","_createPoints","_addEvents","pathUpdated","updateViewportPoints","updatePathOpacity","_updateMarkerPosition","markerAnimation","updateMarkerRadius","firstRender","_createGroup","_createPath","_createMarker","setChart","chartType","setVisible","_createShowAnimation","setInvisible","_createHideAnimation","toggleVisible","showMarker","_createMarkerShowAnimation","hideMarker","_createMarkerHideAnimation","toggleMarker","updateLocalExtremes","_this$_chart$_viewpor","_viewportRangeIndexes","rangeStartIndex","rangeEndIndex","_arrayMinMax","minValue","maxValue","_useViewportPointsInterval","updateViewportPointsByInterval","updateViewportPointsByArray","indexes","_viewportPointsIndexes","pointIndex","point","projectXToSvg","projectYToSvg","_this$_chart$_viewpor2","_updatePathText","requestPathUpdate","setMarkerPointIndex","_this$_settings","xAxis","yAxis","label","color","_this$_settings$optio","_options$strokeWidth","strokeWidth","id","fill","stroke","strokeLinejoin","strokeLinecap","_computePathTextByInterval","_computePathTextByArray","_markerGroup","_resolveMarkersGroup","markersGroup","svgContainer","transform","_seriesGroupTop","_this2","_onRendererResize","interval","_createOpacityAnimation","opacity","_this3","onFinished","_createMarkerAnimation","_this4","ChartEvents","LABEL_ID","Label","_container","_containerPosition","translateX","translateY","_dateElement","_tableElement","_dataArray","_yearVisible","_hasVisibleData","_createContainer","_createContent","_positionUpdateNeeded","updateDimensions","updatePosition","setData","data","_hasVisibleItems","_updateContent","showLabel","hideLabel","showYear","hideYear","position","_clampPosition","_setLabelPosition","requestUpdatePosition","parentContainer","container","_generateTable","items","dataItem","_createTableItem","_toPrecise","title","_getTableItemId","display","visible","_updateTitle","_updateTableItem","ms","date","dateMatch","toUTCString","match","getDate","getFullYear","titleElement","valueElement","precise","toFixed","chartWidth","labelWidth","labelHeight","_this$_getCursorOffse","_getCursorOffset","cursorLeft","cursorTop","labelTranslateX","labelLeft","labelTop","possibleLabelLeft1","possibleLabelLeft2","possibleLabelTop1","documentScrollTop","chartOffsetY","minY","filter","item","CHART_ID","BaseChart","_options","_chartHeight","_groupingPixels","_series","_seriesGroup","_defs","_chartMask","_chartMaskId","_chartMaskPadding","_viewportRange","_viewportDistance","_viewportPixelX","_viewportPixelY","_viewportPadding","_viewportLeftPaddingScale","_viewportRightPaddingScale","_viewportRangeUpdateNeeded","_viewportPointsGroupingNeeded","_currentLocalMinY","_currentLocalMaxY","_minMaxYAnimation","_minMaxYAnimationSign","_rangeAnimation","_rangeAnimationObject","_cursorInsideChart","_axisCursor","_axisCursorPositionX","_axisCursorPointIndex","_axisCursorUpdateNeeded","resolveDefs","createChartMask","createSeriesGroup","createSeries","addEvents","setInitialRange","approximateViewportPoints","initializeAxisCursor","initializeLabel","minMaxYAnimation","extremesUpdated","hasRangeAnimation","updateViewportRange","to","skipExtremes","updateViewportPixel","isChart","_updateAxisCursor","eachSeries","line","hasOpacityAnimation","isHiding","isNavigatorPath","series","_ref$seriesOptions","seriesOptions","groupingOptions","grouping","pixels","columns","types","colors","names","xAxisIndex","column","yAxes","shift","extendSeriesOptions","defs","padding","gradientId","sharpGradient","gradientTransform","offset","stopColor","stopOpacity","chartHeight","_createAxisCursor","_addAxisCursorEvents","setViewportRange","animateViewportRangeTo","minX","maxX","_options$duration","_options$timingFuncti","_options$preservePadd","preservePadding","_this$_clampViewportR","_clampViewportRange","newMinX","newMaxX","_temp","_ref2","_ref2$skipExtremes","_ref2$preservePadding","_setViewportRange","oldRangeIndexes","_updateViewportIndexes","localExtremesUpdateRequested","updateExtremes","viewportRange","_options2","_options2$skipExtreme","_options2$preservePad","_this$_viewportRangeI","groupingDistanceLimitX","viewportIndexes","groupStartIndex","middleIndex","localMinY","localMaxY","isVisible","oldLocalMinY","oldLocalMaxY","updateAnimation","_updateOrCreateMinMaxYAnimation","computeViewportPixelX","currentLocalExtremeDifference","computeViewportPadding","localMinX","localMaxX","onRendererResize","onSeriesVisibleChange","_updateMaskDimensions","getSeriesByLabel","findSeries","setSeriesVisible","setSeriesInvisible","toggleSeries","predicate","setChartType","toRelativeX","projectCursorToX","_ref3","_ref3$pageX","pageX","chartLeft","pageY","viewportPixelX","_this$_viewportRange","rangeStart","rangeEnd","_binarySearchIndexes","minUpperIndex","_binarySearchIndexes2","maxLowerIndex","_this$_clampViewportR2","globalMinX","globalMaxX","getTime","_ref4","actualPaddingX","receivedLeftPaddingX","receivedRightPaddingX","localExtremeDifference","_createMinMaxYAnimation","_patchMinMaxYAnimation","_this5","_updateMinMaxAnimationSign","_computeAxisCursorPath","_axisCursorGroup","insertBefore","mouseMoveListener","_onMouseMove","mouseLeaveListener","_onMouseLeave","touchStartListener","_onTouchStart","touchMoveListener","_onTouchMove","touchEndListener","_onTouchEnd","_onCursorMove","_onCursorLeave","targetTouch","targetTouches","_touchStartPosition","_isScrollingAction","_this$_touchStartPosi","startPageX","startPageY","deltaY","abs","deltaX","preventDefault","cancelable","cursorPosition","_this6","insideChart","_insideChart","_setInsideChartState","oldIndex","_findPointIndexByCursor","_updateLabel","changed","_prepareLabelData","date1","date2","cursorX","_binarySearchIndexes3","lowerIndex","upperIndex","isLowerCloser","isLowerVisible","isUpperVisible","isInside","_this7","_markerHideTimeout","clearTimeout","change","_onCursorInsideChartChanged","_showMarkers","_showCursor","_hideMarkers","_hideCursor","_ref5","_getElementOffset2","chartTop","_this8","Chart","_BaseChart","chartMaskId","shapeRendering","setNavigationRange","_this$_resolveNavigat","_resolveNavigationRange","animateNavigationRangeTo","_this$_resolveNavigat2","initialViewport","floor","viewportPadding","globalDistance","Clock","_lastUpdateMs","performance","now","getDelta","NavigatorChartEvents","NavigatorChart","_offsetY","_paddingTopBottom","_paddingLeftRight","_navigatorGroup","_sliderGroup","_slider","_sliderControllerLeft","_sliderControllerRight","_sliderControllerWidth","_sliderControllerOffset","_sliderWidth","_sliderLeftRightBorderWidth","_overlayLeft","_overlayRight","_overlayLeftWidth","_overlayRightWidth","_overlayColor","_sliderUpdateNeeded","_navigatorRange","_navigatorRangeAnimation","_navigationRangeAnimationObject","_navigatorMinRangeDistance","_navigatorChangeDirection","_updateNavigatorDimensions","_createNavigatorGroup","_createOverlays","_createSliderEventsListeners","updateNavigationRange","_updateNavigatorElements","_this$_clampNavigatio","_clampNavigationRange","newMin","newMax","_ref$emitChange","emitChange","_this$_clampNavigatio2","overlayLeftScale","overlayRightScale","navigatorWidth","offsetY","navigatorHeight","maskId","_sliderMask","_sliderMaskOuter","_sliderMaskInner","preserveDistance","preservedDistance","isRightController","distance","minDistance","_onSliderTouchStart","_onSliderTouchMove","mouseDownListener","_onSliderMouseDown","controllerLeftTouchStartListener","_onSliderControllerTouchStart","controllerLeftTouchMoveListener","_onSliderControllerTouchMove","controllerLeftMouseDownListener","_onSliderControllerMouseDown","controllerRightTouchStartListener","controllerRightTouchMoveListener","controllerRightMouseDownListener","overlayLeftClickListener","_onSliderOverlayClick","overlayRightClickListener","_ev$targetTouches$","_sliderStartEvent","_sliderStartPosition","_targetTouch$pageX","positionDelta","startPosition","_this$_clampNavigatio3","sliderMouseMoveListener","_onSliderMouseMove","lastBodyStyle","getAttribute","cursor","removeAttribute","_ev$pageX","_this$_clampNavigatio4","direction","_ev$targetTouches$2","_sliderControllerStartPosition","_sliderControllerStartEvent","_targetTouch$pageX2","isLeft","_this$_clampNavigatio5","_onSliderControllerMouseMove","_ev$pageX2","_this$_clampNavigatio6","_resolveNavigatorPosition","halfDistance","_this$_clampNavigatio7","TELECHART_ID","Telechart","_rootElement","_navigatorChart","_themeName","_title","_titleElement","_clock","_animationSource","mountTo","setOptions","mount","root","setTheme","theme","setTitle","_createChart","_createNavigatorChart","_addEventsListeners","animate","rootElement","_createTitle","textAnchor","range","_this3$_chart","_this3$_chart2","__webpack_exports__","Telechart_Telechart"],"mappings":"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","file":"telechart.58b27544fc15a26ba764.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * Simple event emitter for better performance and app size\n *\n * @author Alexander Belov\n */\nexport class EventEmitter {\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _eventListeners = {};\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   */\n  emit (eventName, ...args) {\n    this._fireEvent( eventName, ...args );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  on (eventName, cb, context = null) {\n    this.addEventListener( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  once (eventName, cb, context = null) {\n    this.addEventListenerOnce( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListener (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    this._subscribeEvent( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListenerOnce (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    const listener = (...args) => {\n      cb.apply( context, args );\n      this.removeEventListener( eventName, listener );\n    };\n\n    this.addEventListener( eventName, listener );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} listener\n   */\n  removeEventListener (eventName, listener) {\n    if (!this._eventListeners[ eventName ]) {\n      return;\n    }\n\n    const listenerIndex = this._eventListeners[ eventName ].findIndex(([ cb ]) => {\n      return listener === cb;\n    });\n\n    if (listenerIndex < 0) {\n      return;\n    }\n\n    this._eventListeners[ eventName ].splice( listenerIndex, 1 );\n  }\n\n  /**\n   * @param {string | *} eventName\n   */\n  removeAllListeners (eventName = null) {\n    if (!eventName) {\n      this._eventListeners = {};\n    } else if (this._eventListeners[ eventName ]) {\n      this._eventListeners[ eventName ] = null;\n      delete this._eventListeners[ eventName ];\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @private\n   */\n  _allocateEvent (eventName) {\n    this._eventListeners[ eventName ] = this._eventListeners[ eventName ] || []\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  _subscribeEvent (eventName, cb, context) {\n    this._allocateEvent( eventName );\n    this._eventListeners[ eventName ].push([ cb, context ]);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   * @private\n   */\n  _fireEvent (eventName, ...args) {\n    const eventListeners = this._eventListeners[ eventName ] || [];\n\n    for (let i = 0; i < eventListeners.length; ++i) {\n      const [ cb, context ] = eventListeners[ i ];\n      cb.apply( context, args );\n    }\n  }\n}\n","const hour = 3600 * 1000;\n\n/**\n * @type {{second: number, minute: number, hour: number, day: number, week: number, month: number, year: number}}\n */\nexport const TimeRanges = {\n  second: 1000,\n  minute: hour / 60,\n  hour,\n  day: hour * 24,\n  week: hour * 24 * 7,\n  month: hour * 24 * 30, // rude\n  year: hour * 24 * 365\n};\n","export const FRAMES_PER_SECOND = 60;\nexport const FRAMES_DELTA_SEC = 1 / 60;\nexport const FRAMES_DELTA_MS = 1000 / 60;\n\n/**\n * @param {number} value\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warp (value, deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return value * warpRatio( deltaTime, framesDeltaSec );\n}\n\n/**\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warpRatio (deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return deltaTime / framesDeltaSec;\n}\n\n/**\n * @param {number} timeoutMs\n * @param {*} args\n * @return {Promise<void>}\n */\nexport function animationTimeout (timeoutMs = 0, ...args) {\n  return new Promise(resolve => {\n    const fulfillmentCallback = resolve.bind( null, ...args );\n    const cb = () => requestAnimationFrame( fulfillmentCallback );\n\n    if (!timeoutMs) {\n      cb();\n    } else {\n      setTimeout( _ => cb(), timeoutMs );\n    }\n  });\n}\n\n// linear\nexport const linear = t => t;\n// accelerating from zero velocity\nexport const easeInQuad = t => t * t;\n// decelerating to zero velocity\nexport const easeOutQuad = t => t * (2 - t);\n// acceleration until halfway, then deceleration\nexport const easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n// accelerating from zero velocity\nexport const easeInCubic = t => t * t * t;\n// decelerating to zero velocity\nexport const easeOutCubic = t => --t * t * t + 1;\n// acceleration until halfway, then deceleration\nexport const easeInOutCubic = t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n// accelerating from zero velocity\nexport const easeInQuart = t => t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuart = t => 1 - --t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuart = t => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t);\n// accelerating from zero velocity\nexport const easeInQuint = t => t * t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuint = t => 1 + --t * t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuint = t => t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n","/**\n * @param {*} object\n * @param {Function} fn\n */\nexport function objectEachKey (object, fn = () => {}) {\n  Object.keys( object ).forEach( fn );\n}\n\n/**\n * @param {*} object\n * @param {Function} fn\n * @return {*[]}\n */\nexport function objectMapKey (object, fn = () => {}) {\n  return Object.keys( object ).map( fn );\n}\n\n/**\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nexport function clampNumber (value, min = -Infinity, max = Infinity) {\n  if (min > max) {\n    [ min, max ] = [ max, min ];\n  }\n  return Math.min( Math.max( value, min ), max );\n}\n\n/**\n * @param {*} value\n * @return {number}\n */\nexport function ensureNumber (value) {\n  value = Number(value);\n  if (Number.isNaN(value)) {\n    return 0;\n  }\n  return value;\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nexport function isObject (value) {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * @param {Date|*} value\n * @return {boolean}\n */\nexport function isDate (value) {\n  return value instanceof Date && !isNaN( value.valueOf() );\n}\n","/**\n * @returns {boolean}\n */\nexport function isBrowserSafari () {\n  return /^((?!chrome|android|crios|fxios).)*safari/i.test( navigator.userAgent );\n}\n\n/**\n * @return {boolean}\n */\nexport function isTouchEventsSupported () {\n  return 'ontouchstart' in document.documentElement;\n}\n\nlet passiveSupported = false;\n\ntry {\n  const options = {\n    get passive() { // This function will be called when the browser\n      //   attempts to access the passive property.\n      passiveSupported = true;\n    }\n  };\n\n  window.addEventListener('test', options, options);\n  window.removeEventListener('test', options, options);\n} catch(err) {\n  passiveSupported = false;\n}\n\nexport const isPassiveEventSupported = passiveSupported;\nexport const passiveIfSupported = passiveSupported ? { passive: true } : false;\nexport const passiveIfSupportedFn = (passive = true) => passiveSupported ? { passive } : false;\n\n/**\n * @return {*}\n */\nexport function isTransformAvailable () {\n  const prefix = 'transform';\n  const div = document.createElement('div');\n\n  return div && div.style[ prefix ] !== undefined;\n}\n\nexport const isTransformSupported = isTransformAvailable();\n","/**\n * @param {string} text\n * @return {string}\n */\nexport function capitalize (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return text[ 0 ].toUpperCase() + text.substr(1);\n}\n\n/**\n * @param {Object} styleObject\n * @returns {string}\n */\nexport function cssText (styleObject = {}) {\n  return Object.keys( styleObject ).reduce((css, prop) => {\n    return `${css ? css + ' ' : ''}${camelToKebabCase( prop )}: ${styleObject[ prop ]};`;\n  }, '');\n}\n\n/**\n * @param {string} text\n * @returns {string}\n */\nexport function camelToKebabCase (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return (\n    text[ 0 ].toLowerCase() + text.substr( 1 )\n  ).replace( /([A-Z])/g, '-$1' ).toLowerCase();\n}\n\n/**\n * @param {string} href\n * @return {*}\n */\nexport function parseQueryString (href) {\n  const queryString = href.split('?').slice(1);\n  if (!queryString.length) {\n    return {};\n  }\n\n  return queryString[ 0 ].split( '&' ).map(part => {\n    const keyValue = part.split( '=' );\n    return {\n      [keyValue[ 0 ]]: keyValue[ 1 ]\n    };\n  }).reduce((result, obj) => {\n    return Object.assign(result, obj);\n  })\n}\n","import { objectEachKey } from \"./base\";\nimport { camelToKebabCase } from './text';\n\n/**\n * @param {string} tagName\n * @param {Object} options\n * @param {Array|*} children\n * @param {string|*} ns\n * @return {Element}\n */\nexport function createElement (tagName, options = {}, children = [], ns = null) {\n  const element = !ns\n    ? document.createElement( tagName )\n    : document.createElementNS( ns, tagName );\n\n  if (options.attrs) {\n    !options.useNS\n      ? setAttributes( element, options.attrs )\n      : setAttributesNS( element, options.attrs, options.attrsNS || null );\n  }\n\n  if (children || Array.isArray( children )) {\n    children = [].concat( children );\n    children.forEach(node => {\n      if (typeof node === 'string') {\n        // optimistic way\n        if (/[<>]/i.test( node )) {\n          element.innerHTML += node;\n        } else {\n          element.textContent += node;\n        }\n      } else {\n        element.appendChild( node );\n      }\n    });\n  }\n\n  return element;\n}\n\n/**\n * @param {Element|string} elementOrSelector\n * @return {Element | null}\n */\nexport function resolveElement (elementOrSelector) {\n  if (typeof elementOrSelector !== 'string') {\n    return elementOrSelector;\n  }\n  return document.querySelector( elementOrSelector );\n}\n\n/**\n * @param {Element} element\n * @return {{top: number, left: number}}\n */\nexport function getElementOffset (element) {\n  if (!element) {\n    return { top: 0, left: 0 };\n  }\n\n  try {\n    // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n    const rect = element.getBoundingClientRect();\n    const win = element.ownerDocument.defaultView;\n    return {\n      top: rect.top + win.pageYOffset,\n      left: rect.left + win.pageXOffset\n    };\n  } catch (e) {\n    return { top: 0, left: 0 };\n  }\n}\n\n/**\n * @param {Element} targetElement\n * @param {Element} relativeElement\n * @return {{ top: number, left: number }}\n */\nexport function getElementRelativeOffset (targetElement, relativeElement) {\n  const targetOffset = getElementOffset(targetElement);\n  const relativeOffset = getElementOffset(relativeElement);\n\n  return {\n    top: targetOffset.top - relativeOffset.top + relativeElement.scrollTop,\n    left: targetOffset.left - relativeOffset.left + relativeElement.scrollLeft\n  };\n}\n\n/**\n * @returns {number}\n */\nexport function getDocumentHeight () {\n  return Math.max(\n    document.body.scrollHeight,\n    document.documentElement.scrollHeight,\n    document.body.offsetHeight,\n    document.documentElement.offsetHeight,\n    document.body.clientHeight,\n    document.documentElement.clientHeight\n  );\n}\n\n/**\n * @return {number}\n */\nexport function getDocumentScrollTop () {\n  const supportPageOffset = window.pageXOffset !== undefined;\n  const isCSS1Compat = ((document.compatMode || \"\") === \"CSS1Compat\");\n\n  return supportPageOffset\n    ? window.pageYOffset\n    : isCSS1Compat\n      ? document.documentElement.scrollTop\n      : document.body.scrollTop;\n}\n\n/**\n * @returns {number}\n */\nexport function getWindowHeight () {\n  return window.innerHeight ||\n    (document.documentElement || document.body).clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementHeight (element) {\n  return element.innerHeight || element.clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementWidth (element) {\n  return element.innerWidth || element.clientWidth;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollHeight (element) {\n  return Math.max(\n    element.scrollHeight,\n    element.offsetHeight,\n    element.clientHeight\n  );\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollWidth (element) {\n  return Math.max(\n    element.scrollWidth,\n    element.offsetWidth,\n    element.clientWidth\n  );\n}\n\nconst camelCaseAttrWhiteList = [\n  'viewBox',\n  'gradientTransform'\n];\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n */\nexport function setAttributes (element, attrs = {}) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttribute( attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n * @param {string | *} ns\n */\nexport function setAttributesNS (element, attrs = {}, ns = null) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttributeNS( ns, attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {string} attr\n * @param {*} value\n * @param {string | *} ns\n */\nexport function setAttributeNS (element, attr, value, ns) {\n  // it's a magic but it increases speed for 1-2ms on slow devices\n  // prevent from babel optimisation\n  ns = ns || null;\n  element.setAttributeNS( ns, attr, value );\n}\n\n/**\n * @param {Element} element\n * @param {string} className\n */\nexport function hasClass (element, className) {\n  if (element.classList) {\n    // return element.classList.contains( className );\n  }\n  return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test( element.className );\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function addClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    // return element.classList.add( ...classNames );\n  }\n\n  let className = element.className;\n\n  for (let i = 0; i < classNames.length; ++i) {\n    if (!hasClass( element, classNames[ i ] )) {\n      className += ` ${classNames[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function removeClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    // return element.classList.remove( ...classNames );\n  }\n\n  let existingClasses = element.className.split( ' ' );\n  let classesToDelete = new Set( classNames );\n  let className = '';\n\n  for (let i = 0; i < existingClasses.length; ++i) {\n    if (!classesToDelete.has( existingClasses[ i ] )) {\n      className += ` ${existingClasses[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n","/**\n * @param {Element | Window} element\n * @param {string} eventName\n * @param {Function} cb\n */\nexport function addEventListenerOnce (element, eventName, cb) {\n  if (!element) {\n    return console.warn( 'Element is missing' );\n  }\n\n  const listener = ev => {\n    cb( ev );\n    element.removeEventListener( eventName, listener );\n  };\n\n  element.addEventListener( eventName, listener );\n}\n","import { ensureNumber } from \"./index\";\n\n/**\n * Returns path segments\n *\n * @param {string} pathText\n * @return {Array<Array<Array<number>>>}\n */\nexport function parseSimplePathText (pathText) {\n  const parseRegex = /([ML])\\s?(-?\\d+\\.?(?:\\d+)?)\\s(-?\\d+\\.?(?:\\d+)?)/gi;\n\n  const segments = [];\n  let m;\n\n  while ((m = parseRegex.exec( pathText )) !== null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (m.index === parseRegex.lastIndex) {\n      parseRegex.lastIndex++;\n    }\n\n    const type = m[ 1 ];\n    const x = ensureNumber( m[2] );\n    const y = ensureNumber( m[3] );\n\n    if (type === 'm' || !segments.length) {\n      segments.push([ [ x, y ] ]);\n    } else {\n      const lastSegment = segments[ segments.length - 1 ];\n      lastSegment.push([ x, y ]);\n    }\n  }\n\n  return segments;\n}\n\n/**\n * @param {Array<Array<Array<number>>>} segments\n * @return {string}\n */\nexport function segmentsToPathText (segments) {\n  let result = '';\n\n  for (let i = 0; i < segments.length; ++i) {\n    result += 'M ';\n    for (let j = 0; j < segments[ i ].length; ++j) {\n      const coordinates = segments[ i ][ j ];\n      if (j !== 0) {\n        result += 'L ';\n      }\n      result += coordinates.join(' ') + ' ';\n    }\n  }\n\n  return result;\n}\n","export const ROOT_CLASS_NAME = 'telechart-root';\n\n/**\n * @param {string} themeName\n * @returns {string}\n */\nexport function interpolateThemeClass (themeName) {\n  return `${ROOT_CLASS_NAME}_theme_${themeName}`;\n}\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemes = {\n  default: 'default',\n  dark: 'dark'\n};\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemesColors = {\n  default: '#ffffff',\n  dark: '#242F3E'\n};\n","/**\n * @param {Array<*>} arrayA\n * @param {Array<*>} arrayB\n * @param {string | *} key\n * @return {boolean}\n */\nexport function arraysEqual (arrayA, arrayB, key = null) {\n  if (!Array.isArray(arrayA)\n    || !Array.isArray(arrayB)\n    || arrayA.length !== arrayB.length) {\n    return false;\n  }\n  for (let i = 0; i < arrayA.length; ++i) {\n    if (key) {\n      if (arrayA[ i ][ key ] !== arrayB[ i ][ key ]) {\n        return false;\n      }\n    } else if (arrayA[ i ] !== arrayB[ i ]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMinIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return minIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMin (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMinIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMaxIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n  }\n  return maxIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMax (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMaxIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMaxIndexes (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return [ minIndex, maxIndex ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMax (array, startIndex = 0, endIndex = array.length - 1) {\n  const [ minIndex, maxIndex ] = arrayMinMaxIndexes( array, startIndex, endIndex );\n  return [\n    array[ minIndex ],\n    array[ maxIndex ],\n  ];\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arraySum (array) {\n  let length = array.length;\n  let sum = 0;\n\n  while (length--) {\n    sum += array[ length ];\n  }\n\n  return sum;\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arrayAvg (array) {\n  let length = array.length;\n  let result = arraySum( array );\n\n  // prevent from dividing by zero\n  if (length) {\n    result = result / length;\n  }\n\n  return result;\n}\n\n/**\n * Finds boundary indexes in an array of numbers\n *\n * @param {Array<number>} array\n * @param {number} value\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchIndexes (array, value, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ] === value) {\n    left = right;\n  } else if (array[ left ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n\n/**\n * Finds boundary indexes in an array of objects\n *\n * @param {Array<Object>} array\n * @param {number} value\n * @param {string} key\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchObjectIndexes (array, value, key, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ][ key ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ][ key ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ][ key ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ][ key ] === value) {\n    left = right;\n  } else if (array[ left ][ key ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { FRAMES_PER_SECOND } from '../../utils';\n\nexport const AnimationSourceEvents = {\n  UPDATE: 'update'\n};\n\nexport class AnimationSource extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeElapsed = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateInvokes = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updatesPerSecond = 60;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateEach = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateAt = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _paused = false;\n\n  /**\n   * @param {number} updatesPerSecond\n   * @param {number} timeScale\n   */\n  constructor (updatesPerSecond = 60, timeScale = 1) {\n    super();\n\n    this._updatesPerSecond = Math.min( 60, Math.max( 1e-8, updatesPerSecond ) );\n    this._updateEach = FRAMES_PER_SECOND / this._updatesPerSecond;\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (this._paused) {\n      return;\n    }\n\n    this._timeElapsed += deltaTime;\n    this._updateInvokes++;\n\n    if (this._updateInvokes % this._updateEach < 1) {\n      this._callUpdate( ( this._timeElapsed - this._lastUpdateAt ) * this._timeScale );\n      this._lastUpdateAt = this._timeElapsed;\n    }\n  }\n\n  /**\n   * Disposes the instance\n   */\n  dispose () {\n    this._paused = true;\n    this.removeAllListeners();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._paused;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return !this._paused;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set timeScale (value) {\n    this._timeScale = value;\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _callUpdate (deltaTime) {\n    this.emit( AnimationSourceEvents.UPDATE, deltaTime );\n  }\n}\n","import { EventEmitter } from \"./misc/EventEmitter\";\nimport {\n  capitalize,\n  clampNumber,\n  createElement,\n  getElementWidth,\n  resolveElement, setAttributeNS,\n  setAttributes,\n  setAttributesNS\n} from \"../utils\";\n\nconst telechartTitle = `${capitalize( TELECHART_NAME )} ${TELECHART_VERSION} (c) ${TELECHART_AUTHOR}`;\n\nlet INTERNAL_AUTOINCREMENT = 1;\n\nexport class SvgRenderer extends EventEmitter {\n\n  static NS = 'http://www.w3.org/2000/svg';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = INTERNAL_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parentContainer = null;\n\n  /**\n   * @type {SVGElement}\n   * @private\n   */\n  _svgContainer = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minHeight = 450;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minWidth = 100;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _width = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _isInitialized = false;\n\n  /**\n   * @param {Element|string} contextElement\n   */\n  constructor (contextElement) {\n    super();\n\n    this._parentContainer = resolveElement( contextElement );\n    this._init();\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>} children\n   * @param {Element} parent\n   * @return {Element}\n   */\n  createGroup (attrs = {}, children = [], parent = this._svgContainer) {\n    const group = createElement('g', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>|*} children\n   * @param {Element} parent\n   * @return {SVGClipPathElement}\n   */\n  createClipPath (attrs = {}, children = [], parent = this._svgContainer) {\n    const clipPath = createElement('clipPath', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n\n    parent.appendChild( clipPath );\n\n    return clipPath;\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>|*} children\n   * @param {Element} parent\n   * @return {SVGMaskElement}\n   */\n  createMask (attrs = {}, children = [], parent = this._svgContainer) {\n    const mask = createElement('mask', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n\n    parent.appendChild( mask );\n\n    return mask;\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<*>} stops\n   * @param {Element} parent\n   * @return {SVGLinearGradientElement}\n   */\n  createLinearGradient (attrs = {}, stops = [], parent = this._svgContainer) {\n    const stopElements = stops.map(stopAttrs => {\n      return createElement('stop', {\n        useNS: true,\n        attrs: stopAttrs\n      }, [], SvgRenderer.NS);\n    });\n\n    const gradient = createElement('linearGradient', {\n      useNS: true,\n      attrs\n    }, stopElements, SvgRenderer.NS);\n\n    parent.appendChild( gradient );\n\n    return gradient;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Element} parent\n   * @return {SVGDescElement}\n   */\n  createDesc (text = '', parent = this._svgContainer) {\n    const group = createElement('desc', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGTextElement}\n   */\n  createText (text = '', attrs = {}, parent = this._svgContainer) {\n    const tspan = createElement('tspan', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n\n    const textElement = createElement('text', {\n      useNS: true,\n      attrs\n    }, tspan, SvgRenderer.NS);\n\n    parent.appendChild( textElement );\n\n    return textElement;\n  }\n\n  /**\n   * @param {Element} parent\n   * @return {SVGDefsElement}\n   */\n  createDefs (parent = this._svgContainer) {\n    const element = createElement('defs', {\n      useNS: true\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( element );\n\n    return element;\n  }\n\n  /**\n   * @param {string} pathText\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGPathElement}\n   */\n  createPath (pathText, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, { d: pathText });\n\n    const pathElement = createElement('path', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n    parent.appendChild( pathElement );\n\n    return pathElement;\n  }\n\n  /**\n   * @param {SVGPathElement} pathElement\n   * @param {string} pathText\n   */\n  updatePath (pathElement, pathText) {\n    setAttributeNS( pathElement, 'd', pathText, null );\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   * @param {*} attrs\n   * @param {SVGElement | Element} parent\n   * @return {SVGRectElement}\n   */\n  createRect (width, height, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, {\n      width, height\n    });\n\n    const rectElement = createElement('rect', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( rectElement );\n\n    return rectElement;\n  }\n\n  /**\n   * @param {number} cx\n   * @param {number} cy\n   * @param {number} radius\n   * @param {*} attrs\n   * @param {SVGElement | Element} parent\n   * @return {SVGCircleElement}\n   */\n  createCircle (cx = 0, cy = 0, radius = 1, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, {\n      cx, cy, r: radius\n    });\n\n    const circleElement = createElement('circle', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( circleElement );\n\n    return circleElement;\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Element}\n   */\n  querySelector (selector) {\n    return this._svgContainer.querySelector( selector );\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Array<Element>}\n   */\n  querySelectorAll (selector) {\n    return Array.from( this._svgContainer.querySelectorAll( selector ) );\n  }\n\n  /**\n   * Destroy the renderer\n   */\n  destroy () {\n    this._detachEvents();\n    this._clearParentContainer();\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {Element}\n   */\n  get parentContainer () {\n    return this._parentContainer;\n  }\n\n  /**\n   * @return {SVGElement}\n   */\n  get svgContainer () {\n    return this._svgContainer;\n  }\n\n  /**\n   * @return {number}\n   */\n  get width () {\n    return this._width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get height () {\n    return this._height;\n  }\n\n  /**\n   * @return {string}\n   */\n  get viewBox () {\n    return [ 0, 0, this._width, this._height ].join( ' ' );\n  }\n\n  /**\n   * @private\n   */\n  _init () {\n    if (this._isInitialized) {\n      return;\n    }\n\n    this._updateDimensions();\n    this._svgContainer = this._createSvgContainer();\n    this._insertSvgContainer();\n\n    this.createDesc( telechartTitle );\n\n    this._attachEvents();\n\n    this._isInitialized = true;\n  }\n\n  /**\n   * @return {Element}\n   * @private\n   */\n  _createSvgContainer () {\n    const parentContainer = this._parentContainer;\n\n    if (!parentContainer) {\n      throw new Error( 'Parent container is not provided' );\n    }\n\n    return createElement('svg', {\n      useNS: false,\n      attrs: {\n        xmlns: SvgRenderer.NS,\n        version: '1.1',\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox,\n        class: 'telechart-render'\n      }\n    }, [], SvgRenderer.NS);\n  }\n\n  /**\n   * @private\n   */\n  _insertSvgContainer () {\n    this._clearParentContainer();\n    this._parentContainer.appendChild( this._svgContainer );\n  }\n\n  /**\n   * @private\n   */\n  _updateDimensions () {\n    this._width = clampNumber(\n      getElementWidth( this._parentContainer ),\n      this._minWidth\n    );\n    this._height = this._minHeight;\n\n    if (this._svgContainer) {\n      setAttributes(this._svgContainer, {\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  _clearParentContainer () {\n    // clears the child content\n    this._parentContainer.innerHTML = '';\n  }\n\n  /**\n   * @private\n   */\n  _onResize (ev) {\n    this._updateDimensions();\n    this.emit( 'resize', ev );\n  }\n\n  /**\n   * @private\n   */\n  _attachEvents () {\n    this._attachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _detachEvents () {\n    this._detachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _attachResizeListener () {\n    if (this._resizeListener) {\n      this._detachResizeListener();\n    }\n\n    this._resizeListener = this._onResize.bind( this );\n    window.addEventListener( 'resize', this._resizeListener );\n  }\n\n  /**\n   * @private\n   */\n  _detachResizeListener () {\n    if (!this._resizeListener) {\n      return;\n    }\n\n    window.removeEventListener( 'resize', this._resizeListener );\n    this._resizeListener = null;\n  }\n}\n","/**\n * @type {{x: string, line: string}}\n */\nexport const SeriesTypes = {\n  x: 'x',\n  line: 'line'\n};\n","export const PointTypes = {\n  point: 'point',\n  group: 'group',\n};\n\nlet POINT_AUTOINCREMENT = 1;\n\nexport class Point {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = POINT_AUTOINCREMENT++;\n\n  /**\n   * @enum 'point' | 'group'\n   * @type {string}\n   * @private\n   */\n  _type = 'point';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _x = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _y = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgY = 0;\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor (x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n  }\n\n  /**\n   * @param {string} pointType\n   */\n  setType (pointType = 'point') {\n    this._type = pointType;\n  }\n\n  /**\n   * @param {number} x\n   */\n  setX (x) {\n    this._x = x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  setY (y) {\n    this._y = y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  setXY (x, y) {\n    this.setX( x );\n    this.setY( y );\n  }\n\n  /**\n   * @param {number} x\n   */\n  addX (x) {\n    this._x += x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  addY (y) {\n    this._y += y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  addXY (x, y) {\n    this.addX( x );\n    this.addY( y );\n  }\n\n  /**\n   * @param {number} svgX\n   */\n  setSvgX (svgX) {\n    this._svgX = svgX;\n  }\n\n  /**\n   * @param {number} svgY\n   */\n  setSvgY (svgY) {\n    this._svgY = svgY;\n  }\n\n  /**\n   * @param {number} svgX\n   * @param {number} svgY\n   */\n  setSvgXY (svgX, svgY) {\n    this._svgX = svgX;\n    this._svgY = svgY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get x () {\n    return this._x;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get y () {\n    return this._y;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgX () {\n    return this._svgX;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgY () {\n    return this._svgY;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get type () {\n    return this._type;\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport * as timingFunctions from '../../utils';\n\nlet TWEEN_ID = 1;\n\nexport const TweenState = {\n  NOT_STARTED: 1,\n  RUNNING: 2,\n  PAUSED: 3,\n  COMPLETED: 4,\n  CANCELLED: 5\n};\n\nexport const TweenEvents = {\n  STARTED: 'started',\n  PAUSED: 'paused',\n  COMPLETE: 'complete',\n  CANCELLED: 'cancelled'\n};\n\nconst DEFAULT_PARAMS = {\n  timeScale: 1,\n  duration: 500,\n  timingFunction: 'linear'\n};\n\nexport class Tween extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = TWEEN_ID++;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _params = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _state = TweenState.NOT_STARTED;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeScale = DEFAULT_PARAMS.timeScale;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeElapsed = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _duration = DEFAULT_PARAMS.duration;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _timingFunctionName = DEFAULT_PARAMS.timingFunction;\n\n  /**\n   * @type {Function}\n   * @private\n   */\n  _timingFunction = () => {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _target = null;\n\n  /**\n   * @type {Array<string | number>}\n   * @private\n   */\n  _properties = [];\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  _targetValues = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _startValues = [];\n\n  /**\n   * @param {Array<*>} args\n   * @returns {Tween}\n   */\n  static create (...args) {\n    return new Tween( ...args );\n  }\n\n  /**\n   * @param {*} target\n   * @param {string|Array<string | number>} properties\n   * @param {number|Array<number>} targetValues\n   * @param {*} params\n   */\n  constructor (target, properties = [], targetValues = [], params = {}) {\n    super();\n\n    this._target = target;\n    this._properties = [].concat( properties );\n    this._targetValues = [].concat( targetValues );\n    this._initParams( params );\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (!this.isRunning) {\n      return;\n    }\n\n    deltaTime *= this._timeScale;\n    this._timeElapsed += deltaTime;\n\n    this._updateAnimation( deltaTime );\n    this._checkDuration();\n  }\n\n  /**\n   * Runs animation\n   */\n  start () {\n    if (this.isNotStarted) {\n      this._startValues = this._getPropertyValues( this._properties );\n    }\n    this._state = TweenState.RUNNING;\n    this.emit( TweenEvents.STARTED );\n  }\n\n  /**\n   * Stops animation\n   */\n  pause () {\n    this._state = TweenState.PAUSED;\n    this.emit( TweenEvents.PAUSED );\n  }\n\n  /**\n   * Finish & dispose the tween\n   */\n  finish () {\n    this._state = TweenState.COMPLETED;\n    this.emit( TweenEvents.COMPLETE, this._timeElapsed );\n    this._dispose();\n  }\n\n  /**\n   * Cancels current animation\n   */\n  cancel () {\n    this._state = TweenState.CANCELLED;\n    this.emit( TweenEvents.CANCELLED, this._timeElapsed );\n    this._dispose();\n  }\n\n  /**\n   * @param {Array<number>} targetValues\n   */\n  patchAnimation (targetValues = []) {\n    this._targetValues = targetValues;\n    this._startValues = this._getPropertyValues( this._properties );\n    this._timeElapsed = 0;\n  }\n\n  /**\n   * @param {number} timeScale\n   */\n  setTimeScale (timeScale = 1) {\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isNotStarted () {\n    return this._state === TweenState.NOT_STARTED;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return this._state === TweenState.RUNNING;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._state === TweenState.PAUSED;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isCompleted () {\n    return this._state === TweenState.COMPLETED;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get duration () {\n    return this._duration;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get timingFunctionName () {\n    return this._timingFunctionName;\n  }\n\n  /**\n   * @returns {Function}\n   */\n  get timingFunction () {\n    return this._timingFunction;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeRemaining () {\n    return Math.max( 0, Math.min( this._duration, this._duration - this._timeElapsed ) );\n  }\n\n  /**\n   * @returns {number}\n   */\n  get progress () {\n    return Math.min( 1, Math.max( 0, this._timeElapsed / this._duration ) );\n  }\n\n  /**\n   * @param {*} params\n   * @private\n   */\n  _initParams (params) {\n    let {\n      timeScale,\n      duration,\n      timingFunction\n    } = this._params = Object.assign( {}, DEFAULT_PARAMS, params );\n\n    this._timeScale = timeScale;\n    this._duration = duration;\n    this._timingFunctionName = timingFunction;\n    this._timingFunction = this._getTimingFunction( timingFunction );\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _updateAnimation (deltaTime) {\n    const progress = this.progress;\n    const timingProgress = this._timingFunction( progress );\n\n    for (let i = 0, length = this._properties.length; i < length; ++i) {\n      const property = this._properties[ i ];\n      const delta = ( this._targetValues[ i ] - this._startValues[ i ] ) * timingProgress;\n      this._target[ property ] = this._startValues[ i ] + delta;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _checkDuration () {\n    if (this._timeElapsed >= this._duration) {\n      this.finish();\n    }\n  }\n\n  /**\n   * @param {Array<string>} properties\n   * @returns {Array<number>}\n   * @private\n   */\n  _getPropertyValues (properties = []) {\n    let values = [];\n    for (let i = 0, length = properties.length; i < length; ++i) {\n      values[ i ] = this._getPropertyValue( properties[i] );\n    }\n    return values;\n  }\n\n  /**\n   * @param {string} property\n   * @returns {number}\n   * @private\n   */\n  _getPropertyValue (property) {\n    return this._target[ property ] || 0;\n  }\n\n  /**\n   * @param {string} functionName\n   * @returns {Function}\n   * @private\n   */\n  _getTimingFunction (functionName) {\n    const defaultFunctionName = DEFAULT_PARAMS.timingFunction;\n    return timingFunctions[ functionName ] || timingFunctions[ defaultFunctionName ];\n  }\n\n  /**\n   * Disposes the object\n   *\n   * @private\n   */\n  _dispose () {\n    this._params = null;\n    this._timingFunction = null;\n    this._targetValues = null;\n    this._startValues = null;\n    this._properties = null;\n    this._target = null;\n\n    this.removeAllListeners();\n  }\n}\n","/**\n * @type {{navigatorChart: string, chart: string}}\n */\nexport const ChartTypes = {\n  chart: 'chart',\n  navigatorChart: 'navigatorChart'\n};\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { arrayMinMax, arraysEqual, setAttributeNS, setAttributesNS } from '../../utils';\nimport { Point } from '../point/Point';\nimport { PointGroup } from '../point/PointGroup';\nimport { Tween, TweenEvents } from '../animation/Tween';\nimport { ChartTypes } from '../chart/ChartTypes';\n\nlet SERIES_AUTOINCREMENT = 1;\n\nexport const OpacityAnimationType = {\n  hiding: 1,\n  showing: 2\n};\n\nexport class Series extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = SERIES_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parent = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _isSimpleChart = false;\n\n  /**\n   * @type {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   * @private\n   */\n  _settings = {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _seriesOptions = {};\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _yAxis = [];\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _name = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _label = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _color = '#31a8dc';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _strokeWidth = 1;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _visible = true;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _group = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _pathText = null;\n\n  /**\n   * @type {SVGPathElement}\n   * @private\n   */\n  _pathElement = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _pathUpdateNeeded = false;\n\n  /**\n   * @type {SVGCircleElement}\n   * @private\n   */\n  _marker = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _markersGroup = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _markerVisible = false;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _markerAnimation = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _markerRadius = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _maxMarkerRadius = 4;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _markerPointIndex = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _markerPositionUpdateNeeded = false;\n\n  /**\n   * @type {Array<Point>}\n   * @private\n   */\n  _points = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _opacity = 1;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _opacityAnimation = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _opacityAnimationType = null;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Element} parent\n   * @param {*} settings\n   */\n  constructor (renderer, parent, settings = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._parent = parent;\n    this._settings = settings;\n    this._parseSettings();\n  }\n\n  /**\n   * Initializes series with options\n   */\n  initialize () {\n    this._createPoints();\n    this._addEvents();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    let pathUpdated = false;\n\n    if (this._pathUpdateNeeded) {\n      this.updateViewportPoints();\n      this.updatePath();\n\n      this._pathUpdateNeeded = false;\n      pathUpdated = true;\n    }\n\n    if (this._opacityAnimation\n      && this._opacityAnimation.isRunning) {\n      this._opacityAnimation.update( deltaTime );\n      this.updatePathOpacity();\n    }\n\n    // only base charts has markers\n    if (this._isSimpleChart) {\n      if (this._markerPositionUpdateNeeded || pathUpdated) {\n        this._updateMarkerPosition();\n\n        this._markerPositionUpdateNeeded = false;\n      }\n\n      const markerAnimation = this._markerAnimation;\n      const hasMarkerAnimation = markerAnimation && markerAnimation.isRunning;\n      if (hasMarkerAnimation) {\n        markerAnimation.update( deltaTime );\n\n        this.updateMarkerRadius();\n      }\n    }\n  }\n\n  /**\n   * Creates path\n   */\n  firstRender () {\n    if (this._pathElement) {\n      return;\n    }\n\n    // update svgX & svgY for each point\n    this.updateViewportPoints();\n\n    // creates and stores wrapper for following path element\n    this._createGroup();\n\n    // creates and stores initial path element\n    this._createPath();\n\n    if (this._isSimpleChart) {\n      this._createMarker();\n    }\n  }\n\n  /**\n   * @param {Chart | NavigatorChart | BaseChart} chart\n   */\n  setChart (chart) {\n    this._chart = chart;\n    this._isSimpleChart = chart.chartType === ChartTypes.chart;\n  }\n\n  /**\n   * Shows series on the chart\n   */\n  setVisible () {\n    this._visible = true;\n    this._createShowAnimation();\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Hides series from the chart\n   */\n  setInvisible () {\n    this._visible = false;\n    this._createHideAnimation();\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Toggles series\n   */\n  toggleVisible () {\n    this._visible\n      ? this.setInvisible()\n      : this.setVisible();\n  }\n\n  showMarker () {\n    this._createMarkerShowAnimation();\n    this._markerVisible = true;\n  }\n\n  hideMarker () {\n    this._createMarkerHideAnimation();\n    this._markerVisible = false;\n  }\n\n  toggleMarker () {\n    this._markerVisible\n      ? this.hideMarker()\n      : this.showMarker();\n  }\n\n  /**\n   * @private\n   */\n  updateLocalExtremes () {\n    const [ rangeStartIndex, rangeEndIndex ] = this._chart._viewportRangeIndexes;\n\n    const [ minValue, maxValue ] = arrayMinMax(\n      this._yAxis, rangeStartIndex, rangeEndIndex\n    );\n\n    this._localMinY = minValue;\n    this._localMaxY = maxValue;\n  }\n\n  /**\n   * Updates viewport points\n   */\n  updateViewportPoints () {\n    this._chart._useViewportPointsInterval\n      ? this.updateViewportPointsByInterval()\n      : this.updateViewportPointsByArray();\n  }\n\n  /**\n   * Updates points by array of points\n   */\n  updateViewportPointsByArray () {\n    const indexes = this._chart._viewportPointsIndexes;\n\n    for (let i = 0; i < indexes.length; ++i) {\n      const pointIndex = indexes[ i ];\n      const point = this._points[ pointIndex ];\n      point.setSvgXY(\n        this._chart.projectXToSvg( point.x ),\n        this._chart.projectYToSvg( point.y ),\n      );\n    }\n  }\n\n  /**\n   * Updates points by interval\n   */\n  updateViewportPointsByInterval () {\n    const [ startIndex, endIndex ] = this._chart._viewportPointsIndexes;\n    for (let i = startIndex; i <= endIndex; ++i) {\n      const point = this._points[ i ];\n      point.setSvgXY(\n        this._chart.projectXToSvg( point.x ),\n        this._chart.projectYToSvg( point.y ),\n      );\n    }\n  }\n\n  /**\n   * Recompute path text\n   */\n  updatePath () {\n    this._updatePathText();\n    this._renderer.updatePath( this._pathElement, this._pathText );\n  }\n\n  /**\n   * Recompute path text\n   */\n  updatePathOpacity () {\n    setAttributeNS( this._pathElement, 'opacity', this._opacity, null );\n  }\n\n  /**\n   * Recompute path text\n   */\n  updateMarkerRadius () {\n    setAttributeNS( this._marker, 'r', this._markerRadius, null );\n  }\n\n  /**\n   * Mark to update path in next animation frame\n   */\n  requestPathUpdate () {\n    this._pathUpdateNeeded = true;\n  }\n\n  /**\n   * Mark to update marker in next animation frame\n   */\n  setMarkerPointIndex (index) {\n    this._markerPointIndex = index;\n    this._markerPositionUpdateNeeded = true;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {string}\n   */\n  get label () {\n    return this._label;\n  }\n\n  /**\n   * @return {string}\n   */\n  get color () {\n    return this._color;\n  }\n\n  /**\n   * @return {string}\n   */\n  get name () {\n    return this._name;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isVisible () {\n    return this._visible;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @return {string}\n   */\n  get opacityAnimationType () {\n    return this._opacityAnimationType;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isShowing () {\n    return this._opacityAnimationType === OpacityAnimationType.showing;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isHiding () {\n    return this._opacityAnimationType === OpacityAnimationType.hiding;\n  }\n\n  /**\n   * @private\n   */\n  _parseSettings () {\n    const {\n      xAxis, yAxis,\n      label, type,\n      color, name,\n      options = {}\n    } = this._settings;\n\n    this._xAxis = xAxis;\n    this._yAxis = yAxis;\n    this._label = label;\n    this._color = color;\n    this._name = name;\n\n    const {\n      strokeWidth = 1\n    } = options;\n\n    this._strokeWidth = strokeWidth;\n\n    this._seriesOptions = options;\n  }\n\n  /**\n   * @private\n   */\n  _createGroup () {\n    this._group = this._renderer.createGroup({\n      class: 'telechart-series-path-group',\n      id: `telechart-path-${this._id}`,\n      x: 0,\n      y: 0\n    }, [], this._parent);\n  }\n\n  /**\n   * @private\n   */\n  _createPath () {\n    this._updatePathText();\n\n    this._pathElement = this._renderer.createPath(this._pathText, {\n      class: 'telechart-series-path',\n      d: this._pathText,\n      fill: 'none',\n      stroke: this._color,\n      strokeWidth: this._strokeWidth,\n      strokeLinejoin: 'round',\n      strokeLinecap: 'round'\n    }, this._group);\n  }\n\n  /**\n   * @private\n   */\n  _updatePathText () {\n    this._pathText = this._chart._useViewportPointsInterval\n      ? this._computePathTextByInterval( this._chart._viewportPointsIndexes )\n      : this._computePathTextByArray( this._chart._viewportPointsIndexes );\n  }\n\n  /**\n   * @private\n   */\n  _createPoints () {\n    const xAxis = this._xAxis;\n    const yAxis = this._yAxis;\n\n    for (let i = 0; i < xAxis.length; ++i) {\n      this._points.push(\n        new Point( xAxis[ i ], yAxis[ i ] )\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  _createMarker () {\n    if (!this._markerGroup) {\n      this._markerGroup = this._resolveMarkersGroup();\n    }\n\n    this._marker = this._renderer.createCircle(0, 0, this._markerRadius, {\n      class: 'telechart-chart-marker',\n      stroke: this._color,\n      strokeWidth: 2,\n      fill: 'white'\n    }, this._markerGroup);\n  }\n\n  /**\n   * @return {Element}\n   * @private\n   */\n  _resolveMarkersGroup () {\n    const markersGroupClass = 'telechart-chart-markers';\n    const markersGroup = this._renderer.svgContainer.querySelector( `.${markersGroupClass}` );\n\n    if (markersGroup) {\n      return markersGroup;\n    }\n\n    return this._renderer.createGroup({\n      class: markersGroupClass,\n      transform: `translate(0, ${this._chart._seriesGroupTop}) scale(1 1)`,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _updateMarkerPosition () {\n    const x = this._xAxis[ this._markerPointIndex ];\n    const y = this._yAxis[ this._markerPointIndex ];\n\n    const svgX = this._chart.projectXToSvg( x );\n    const svgY = this._chart.projectYToSvg( y );\n\n    setAttributesNS(this._marker, {\n      cx: svgX,\n      cy: svgY\n    });\n  }\n\n  /**\n   * @private\n   */\n  _addEvents () {\n    this._renderer.on('resize', _ => {\n      this._onRendererResize();\n    });\n  }\n\n  /**\n   * @private\n   */\n  _onRendererResize () {\n    this._pathUpdateNeeded = true;\n  }\n\n  /**\n   * @param {Array<number>} indexes\n   * @return {string}\n   * @private\n   */\n  _computePathTextByArray (indexes) {\n    let result = '';\n\n    if (!indexes.length) {\n      return result;\n    }\n\n    result += 'M';\n\n    let point;\n\n    for (let i = 0; i < indexes.length; ++i) {\n      if (i !== 0) {\n        result += 'L';\n      }\n\n      point = this._points[ indexes[ i ] ];\n\n      result += point.svgX + ' ' + point.svgY;\n    }\n\n    return result;\n  }\n\n  /**\n   * @param {Array<number>} interval\n   * @return {string}\n   * @private\n   */\n  _computePathTextByInterval (interval) {\n    let result = '';\n\n    if (!interval.length\n      || interval[ 1 ] - interval[ 0 ] <= 0) {\n      return result;\n    }\n\n    result += 'M';\n\n    const [ startIndex, endIndex ] = interval;\n\n    for (let i = startIndex; i <= endIndex; ++i) {\n      const point = this._points[ i ];\n\n      if (i !== startIndex) {\n        result += 'L';\n      }\n\n      result += point.svgX + ' ' + point.svgY;\n    }\n\n    return result;\n  }\n\n  /**\n   * @private\n   */\n  _createShowAnimation () {\n    if (this._opacityAnimation\n      && this._opacityAnimationType === OpacityAnimationType.showing) {\n      return;\n    }\n    this._createOpacityAnimation( 1 );\n    this._opacityAnimationType = OpacityAnimationType.showing;\n  }\n\n  /**\n   * @private\n   */\n  _createHideAnimation () {\n    if (this._opacityAnimation\n      && this._opacityAnimationType === OpacityAnimationType.hiding) {\n      return;\n    }\n    this._createOpacityAnimation( 0 );\n    this._opacityAnimationType = OpacityAnimationType.hiding;\n  }\n\n  /**\n   * @param {number} opacity\n   * @private\n   */\n  _createOpacityAnimation (opacity) {\n    this._opacityAnimation = new Tween(this, '_opacity', opacity, {\n      duration: 300,\n      timingFunction: 'easeInOutQuad'\n    });\n\n    const onFinished = _ => {\n      this._opacityAnimation = null;\n      this._opacityAnimationType = null;\n      this.requestPathUpdate();\n    };\n\n    this._opacityAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._opacityAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._opacityAnimation.start();\n  }\n\n  /**\n   * @private\n   */\n  _createMarkerShowAnimation () {\n    if (this._markerAnimation && this._markerVisible) {\n      // already have animation\n      return;\n    }\n\n    this._createMarkerAnimation( this._maxMarkerRadius );\n  }\n\n  /**\n   * @private\n   */\n  _createMarkerHideAnimation () {\n    if (this._markerAnimation && !this._markerVisible) {\n      // already have animation\n      return;\n    }\n\n    this._createMarkerAnimation( 0 );\n  }\n\n  /**\n   * @param {number} radius\n   * @private\n   */\n  _createMarkerAnimation (radius) {\n    this._markerAnimation = new Tween(this, '_markerRadius', radius, {\n      duration: this._markerVisible ? 300 : 100,\n      timingFunction: 'easeInOutCubic'\n    });\n\n    const onFinished = _ => {\n      this._markerAnimation = null;\n    };\n\n    this._markerAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._markerAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._markerAnimation.start();\n  }\n}\n","export const ChartEvents = {\n  SERIES_VISIBLE_CHANGE: 'seriesVisibleChange'\n};\n","import { EventEmitter } from '../misc/EventEmitter';\nimport {\n  addClass, clampNumber,\n  createElement,\n  cssText, getDocumentScrollTop,\n  getElementHeight, getElementOffset,\n  getElementWidth, isTransformSupported,\n  removeClass,\n  setAttributes\n} from '../../utils';\n\nlet LABEL_ID = 1;\n\nexport class Label extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = LABEL_ID++;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _container = null;\n\n  /**\n   * @type {{top: number, left: number, translateY: number, translateX: number}}\n   * @private\n   */\n  _containerPosition = {\n    translateX: 0,\n    translateY: 0,\n    top: 0,\n    left: 0\n  };\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _dateElement = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _tableElement = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _width = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = 0;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  _dataArray = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _yearVisible = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _hasVisibleData = false;\n\n  /**\n   * @param {SvgRenderer} renderer\n   */\n  constructor (renderer) {\n    super();\n\n    this._renderer = renderer;\n  }\n\n  /**\n   * @param {Chart | BaseChart} chart\n   */\n  setChart (chart) {\n    this._chart = chart;\n  }\n\n  initialize () {\n    this._createContainer();\n    this._createContent();\n  }\n\n  /**\n   * @param {*} deltaTime\n   */\n  update (deltaTime) {\n    if (this._positionUpdateNeeded) {\n      if (this._hasVisibleData) {\n        this.updateDimensions();\n        this.updatePosition();\n      }\n\n      this._positionUpdateNeeded = false;\n    }\n  }\n\n  /**\n   * @param {Array} data\n   */\n  setData (data = []) {\n    this._dataArray = data;\n    this._hasVisibleData = this._hasVisibleItems();\n\n    this._updateContent();\n  }\n\n  showLabel () {\n    addClass(this._container, 'telechart-chart-label_visible');\n  }\n\n  hideLabel () {\n    removeClass(this._container, 'telechart-chart-label_visible');\n  }\n\n  showYear () {\n    this._yearVisible = true;\n  }\n\n  hideYear () {\n    this._yearVisible = false;\n  }\n\n  updateDimensions () {\n    if (!this._hasVisibleData) {\n      return;\n    }\n\n    this._width = getElementWidth( this._container );\n    this._height = getElementHeight( this._container );\n  }\n\n  updatePosition () {\n    if (!this._hasVisibleData) {\n      return;\n    }\n\n    const position = this._clampPosition( this._width, this._height );\n    this._setLabelPosition( position );\n  }\n\n  requestUpdatePosition () {\n    this._positionUpdateNeeded = true;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get hasVisibleData () {\n    return this._hasVisibleData;\n  }\n\n  /**\n   * @private\n   */\n  _createContainer () {\n    const parent = this._renderer.parentContainer;\n    const container = createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label'\n      }\n    });\n\n    parent.appendChild( container );\n\n    this._container = container;\n  }\n\n  /**\n   * @private\n   */\n  _createContent () {\n    this._dateElement = createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label__date'\n      }\n    });\n\n    this._tableElement = createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label__table'\n      }\n    }, this._generateTable());\n\n    this._container.appendChild( this._dateElement );\n    this._container.appendChild( this._tableElement );\n  }\n\n  /**\n   * @private\n   */\n  _generateTable () {\n    const items = [];\n\n    for (let i = 0; i < this._dataArray.length; ++i) {\n      const dataItem = this._dataArray[ i ];\n      items.push( this._createTableItem( dataItem ) );\n    }\n\n    return items;\n  }\n\n  /**\n   * @param {*} dataItem\n   * @return {Element}\n   * @private\n   */\n  _createTableItem (dataItem) {\n    const value = createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label__table-item-value'\n      }\n    }, String( this._toPrecise( dataItem.y ) ));\n\n    const title = createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label__table-item-title'\n      }\n    }, dataItem.name);\n\n    return createElement('div', {\n      attrs: {\n        class: 'telechart-chart-label__table-item',\n        id: this._getTableItemId( dataItem.label ),\n        style: cssText({\n          color: dataItem.color,\n          display: dataItem.visible ? 'block' : 'none'\n        })\n      }\n    }, [ value, title ]);\n  }\n\n  /**\n   * @param {string} label\n   * @return {string}\n   * @private\n   */\n  _getTableItemId (label) {\n    return `telechart-chart-label-${this._id}-${label}`;\n  }\n\n  /**\n   * @private\n   */\n  _updateContent () {\n    // update inner content\n    const data = this._dataArray;\n\n    this._updateTitle( data[ 0 ].x );\n\n    for (let i = 0; i < data.length; ++i) {\n      const dataItem = data[ i ];\n      if (dataItem.visible) {\n        const label = dataItem.label;\n        this._updateTableItem( label, dataItem );\n      }\n    }\n\n    if (!this._hasVisibleData) {\n      this.hideLabel();\n    }\n  }\n\n  /**\n   * @param ms\n   * @private\n   */\n  _updateTitle (ms) {\n    const date = new Date( ms );\n    const dateFormatted = date.toUTCString();\n    const dateRegex = /([a-zA-Z]+),\\s?\\d{1,2}\\s([a-zA-Z]+)/i;\n    const dateMatch = dateFormatted.match( dateRegex );\n    const dayText = dateMatch[ 1 ];\n    const monthText = dateMatch[ 2 ];\n\n    let title = `${dayText}, ${monthText} ${date.getDate()}`;\n\n    if (this._yearVisible) {\n      title += ` ${date.getFullYear()}`;\n    }\n\n    this._dateElement.innerHTML = title;\n  }\n\n  /**\n   * @private\n   */\n  _updateTableItem (label, dataItem) {\n    const id = this._getTableItemId( label );\n    let element = this._tableElement.querySelector( `#${id}` );\n\n    if (!element) {\n      element = this._createTableItem( dataItem );\n      this._tableElement.appendChild( element );\n    }\n\n    const titleElement = element.querySelector( '.telechart-chart-label__table-item-title' );\n    const valueElement = element.querySelector( '.telechart-chart-label__table-item-value' );\n\n    // update styles\n    setAttributes(element, {\n      style: cssText({\n        color: dataItem.color,\n        display: dataItem.visible ? 'block' : 'none'\n      })\n    });\n\n    titleElement.innerHTML = dataItem.name;\n    valueElement.innerHTML = String( this._toPrecise( dataItem.y ) );\n  }\n\n  /**\n   * @param {number} value\n   * @param {number} precise\n   * @return {number}\n   * @private\n   */\n  _toPrecise (value, precise = 2) {\n    return 1 * value.toFixed( precise );\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   * @return {{top: number, left: number, translateY: number, translateX: number}}\n   * @private\n   */\n  _clampPosition (width, height) {\n    const chartWidth = this._renderer.width;\n    const labelWidth = this._width;\n    const labelHeight = this._height;\n    const { left: cursorLeft, top: cursorTop } = this._getCursorOffset();\n    const leftRightPadding = 4;\n    const labelPadding = 8;\n\n    let labelTranslateX = clampNumber( cursorLeft - 30, leftRightPadding, chartWidth - labelWidth - leftRightPadding );\n    let labelTranslateY = 40;\n\n    let labelLeft = labelTranslateX;\n    let labelTop = labelTranslateY;\n\n    let labelBottomLine = labelTranslateY + labelHeight + leftRightPadding;\n\n    if (labelBottomLine > cursorTop) {\n      let possibleLabelLeft1 = cursorLeft + labelPadding;\n      if (possibleLabelLeft1 + labelWidth <= chartWidth) {\n        labelLeft = possibleLabelLeft1;\n      } else {\n        let possibleLabelLeft2 = cursorLeft - labelWidth - labelPadding;\n        if (possibleLabelLeft2 >= 0) {\n          labelLeft = possibleLabelLeft2;\n        } else {\n          let possibleLabelTop1 = cursorTop - labelHeight - labelPadding;\n          let documentScrollTop = getDocumentScrollTop();\n          let { top: chartOffsetTop } = getElementOffset( this._renderer.parentContainer );\n\n          if (chartOffsetTop + possibleLabelTop1 >= documentScrollTop) {\n            labelTop = possibleLabelTop1;\n          }\n        }\n      }\n    }\n\n    if (isTransformSupported) {\n      labelTop -= labelTranslateY;\n      labelLeft -= labelTranslateX;\n    }\n\n    return {\n      translateX: labelTranslateX,\n      translateY: labelTranslateY,\n\n      top: labelTop,\n      left: labelLeft\n    };\n  }\n\n  /**\n   * @return {{top: number, left: number}}\n   * @private\n   */\n  _getCursorOffset () {\n    const noop = { left: 0, top: 0 };\n\n    if (!this._dataArray.length) {\n      return noop;\n    }\n\n    const chartOffsetY = this._chart._seriesGroupTop || 0;\n\n    let minIndex = -1;\n    let minY = 1e9;\n    for (let i = 0; i < this._dataArray.length; ++i) {\n      const dataItem = this._dataArray[ i ];\n      if (dataItem.visible && minY > dataItem.svgY) {\n        minIndex = i;\n        minY = dataItem.svgY;\n      }\n    }\n\n    const point = this._dataArray[ minIndex ];\n\n    return {\n      left: point.svgX,\n      top: point.svgY + chartOffsetY\n    };\n  }\n\n  /**\n   * @param {{top: number, left: number, translateY: number, translateX: number}} position\n   * @private\n   */\n  _setLabelPosition (position) {\n    const style = {\n      transform: `translate(${position.translateX}px, ${position.translateY}px)`,\n      top: `${position.top}px`,\n      left: `${position.left}px`,\n    };\n\n    if (!isTransformSupported) {\n      delete style.transform;\n    }\n\n    setAttributes(this._container, {\n      style: cssText( style )\n    });\n\n    this._containerPosition = position;\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  _hasVisibleItems () {\n    return this._dataArray.length > 0\n      && this._dataArray.filter(item => item.visible).length > 0;\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { SeriesTypes } from '../series/SeriesTypes';\nimport { Series } from '../series/Series';\nimport { Tween, TweenEvents } from '../animation/Tween';\nimport { ChartTypes } from './ChartTypes';\nimport { ChartEvents } from './events/ChartEvents';\nimport { Label } from './Label';\n\nimport {\n  arraysEqual,\n  binarySearchIndexes,\n  clampNumber,\n  ensureNumber,\n  getElementOffset,\n  isDate,\n  setAttributeNS\n} from '../../utils';\n\nlet CHART_ID = 1;\n\nexport class BaseChart extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = CHART_ID++;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _type = '';\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartHeight = 280;\n\n  /**\n   * @type {number}\n   * @private\n   * @default 2\n   */\n  _groupingPixels = 2;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<Series>}\n   * @private\n   */\n  _series = [];\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {SVGDefsElement}\n   * @private\n   */\n  _defs = null;\n\n  /**\n   * @type {SVGMaskElement}\n   * @private\n   */\n  _chartMask = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _chartMaskId = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartMaskPadding = 0;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRange = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRangeIndexes = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportPointsIndexes = [ 0, 0 ];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _useViewportPointsInterval = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportDistance = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPixelX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPixelY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPadding = 13;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportLeftPaddingScale = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportRightPaddingScale = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportRangeUpdateNeeded = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportPointsGroupingNeeded = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentLocalMinY = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentLocalMaxY = null;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _minMaxYAnimation = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minMaxYAnimationSign = null;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _rangeAnimation = null;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _rangeAnimationObject = {};\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _cursorInsideChart = false;\n\n  /**\n   * @type {SVGPathElement}\n   * @private\n   */\n  _axisCursor = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _axisCursorPositionX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _axisCursorPointIndex = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _axisCursorUpdateNeeded = false;\n\n  /**\n   * @type {Label}\n   * @private\n   */\n  _label = null;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Object} options\n   */\n  constructor (renderer, options = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._options = options;\n  }\n\n  initialize () {\n    this.resolveDefs();\n    this.createChartMask();\n\n    this.createSeriesGroup();\n    this.createSeries();\n\n    this.addEvents();\n\n    this.setInitialRange();\n    this.approximateViewportPoints();\n\n    if (this._type === ChartTypes.chart) {\n      this.initializeAxisCursor();\n      this.initializeLabel();\n    }\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    const minMaxYAnimation = this._minMaxYAnimation;\n    const extremesUpdated = minMaxYAnimation && minMaxYAnimation.isRunning;\n\n    if (extremesUpdated) {\n      this._minMaxYAnimation.update( deltaTime );\n    }\n\n    const hasRangeAnimation = this._rangeAnimation && this._rangeAnimation.isRunning;\n\n    if (this._viewportRangeUpdateNeeded || hasRangeAnimation) {\n      if (hasRangeAnimation) {\n        this._rangeAnimation.update( deltaTime );\n\n        this.updateViewportRange([\n          this._rangeAnimationObject.from,\n          this._rangeAnimationObject.to\n        ], { skipExtremes: false });\n\n      } else {\n        this.updateViewportRange();\n      }\n\n      this._viewportRangeUpdateNeeded = false;\n    }\n\n    if (this._viewportPointsGroupingNeeded) {\n      this.approximateViewportPoints();\n\n      this._viewportPointsGroupingNeeded = false;\n    }\n\n    if (extremesUpdated) {\n      this.updateViewportPixel();\n    }\n\n    // cursor updating\n    if (this._axisCursorUpdateNeeded && this.isChart) {\n      this._updateAxisCursor();\n\n      this._axisCursorUpdateNeeded = false;\n    }\n\n    this.eachSeries(line => {\n      const hasOpacityAnimation = line.isHiding;\n      const isNavigatorPath = this._type === ChartTypes.navigatorChart;\n\n      if (extremesUpdated && !(isNavigatorPath && hasOpacityAnimation)) {\n        line.requestPathUpdate();\n      }\n\n      line.update( deltaTime );\n    });\n\n    if (this._label) {\n      this._label.update( deltaTime );\n    }\n  }\n\n  /**\n   * Draws initial chart\n   */\n  firstRender () {\n    this.eachSeries(line => line.firstRender());\n  }\n\n  /**\n   * Creates SVG group for storing series paths\n   * @abstract\n   */\n  createSeriesGroup () {\n  }\n\n  /**\n   * Creates array of series\n   */\n  createSeries () {\n    const {\n      series: data,\n      seriesOptions: options = {}\n    } = this._options || {};\n\n    const groupingOptions = options.grouping;\n    if (groupingOptions) {\n      if (groupingOptions.pixels) {\n        this._groupingPixels = ensureNumber( groupingOptions.pixels );\n      }\n    }\n\n    const {\n      columns,\n      types,\n      colors,\n      names\n    } = data;\n\n    const xAxisIndex = columns.findIndex(column => {\n      return types[ column[ 0 ] ] === SeriesTypes.x;\n    });\n    const xAxis = this._xAxis = columns[ xAxisIndex ].slice( 1 );\n\n    let yAxes = columns.slice(); // copy an array to change later\n    yAxes.splice( xAxisIndex, 1 ); // remove x axis from the array\n\n    for (let i = 0; i < yAxes.length; ++i) {\n      const yAxis = yAxes[ i ].slice();\n      const label = yAxis.shift();\n      const type = types[ label ];\n      const color = colors[ label ];\n      const name = names[ label ];\n\n      // prepare series settings\n      const settings = {\n        xAxis, yAxis, label, type,\n        color, name, options: this.extendSeriesOptions( options )\n      };\n\n      // create instance\n      const series = new Series( this._renderer, this._seriesGroup, settings );\n      // provide context for each series\n      series.setChart( this );\n      series.initialize();\n\n      this._series.push( series );\n    }\n  }\n\n  /**\n   * Creates or resolves defs element in SVG container\n   */\n  resolveDefs () {\n    if (this._defs) {\n      return;\n    }\n    const defs = this._renderer.svgContainer.querySelector( 'defs' );\n    this._defs = !defs\n      ? this._renderer.createDefs()\n      : defs;\n  }\n\n  /**\n   * Creates clip mask for the chart and top-bottom shadow mask\n   */\n  createChartMask () {\n    const padding = this._chartMaskPadding;\n\n    this._chartMaskId = `telechart-mask-${this.id}`;\n\n    this._chartMask = this.renderer.createMask({\n      id: this._chartMaskId\n    }, [], this.defs);\n\n    const gradientId = `telechart-mask-gradient-${this.id}`;\n    const sharpGradient = this._type === ChartTypes.navigatorChart;\n\n    // create gradient for rectangle\n    this.renderer.createLinearGradient({\n      id: gradientId,\n      gradientTransform: 'rotate(90)'\n    }, [\n      { offset: '0', stopColor: 'white', stopOpacity: 0 },\n      { offset: sharpGradient ? '0.1%' : '5%', stopColor: 'white', stopOpacity: 1 },\n      { offset: '99.9%', stopColor: 'white', stopOpacity: 1 },\n      { offset: '100%', stopColor: 'white', stopOpacity: 0 },\n    ], this.defs);\n\n    // create rectangle with gradient and append to mask\n    this.renderer.createRect(this.chartWidth, this.chartHeight + padding + 1, {\n      fill: `url(#${gradientId})`,\n      x: 0,\n      y: -padding,\n    }, this._chartMask);\n  }\n\n  /**\n   * Creates chart cursor\n   */\n  initializeAxisCursor () {\n    this._createAxisCursor();\n    this._addAxisCursorEvents();\n  }\n\n  /**\n   * Creates label\n   */\n  initializeLabel () {\n    const label = new Label( this._renderer );\n\n    label.setChart( this );\n    label.initialize();\n\n    this._label = label;\n  }\n\n  /**\n   * Sets initial viewport range for the chart\n   */\n  setInitialRange () {\n    this.setViewportRange();\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   * @param {*} options\n   */\n  animateViewportRangeTo (minX = -Infinity, maxX = Infinity, options = {}) {\n    const {\n      duration = 300,\n      timingFunction = 'easeInOutQuad',\n      preservePadding = false\n    } = options;\n\n    const [ newMinX, newMaxX ] = this._clampViewportRange( minX, maxX, preservePadding );\n\n    if (this._rangeAnimation) {\n      return this._rangeAnimation.patchAnimation( [ newMinX, newMaxX ] );\n    }\n\n    this._rangeAnimationObject = {\n      from: this._viewportRange[ 0 ],\n      to: this._viewportRange[ 1 ]\n    };\n\n    this._rangeAnimation = new Tween(this._rangeAnimationObject, [ 'from', 'to' ], [\n      newMinX, newMaxX\n    ], {\n      duration, timingFunction\n    });\n\n    const onFinished = _ => {\n      this._rangeAnimation = null;\n    };\n\n    this._rangeAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._rangeAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._rangeAnimation.start();\n  }\n\n  /**\n   * @param {number|Date} minX\n   * @param {number|Date} maxX\n   * @param {boolean} skipExtremes\n   * @param {boolean} preservePadding\n   */\n  setViewportRange (minX = -Infinity, maxX = Infinity, { skipExtremes = false, preservePadding = false } = {}) {\n    // recompute X boundaries\n    this._setViewportRange( minX, maxX, preservePadding );\n\n    // remember last indexes\n    const oldRangeIndexes = this._viewportRangeIndexes;\n\n    // recompute indexes range\n    this._updateViewportIndexes();\n\n    let localExtremesUpdateRequested = false;\n\n    if (!arraysEqual( this._viewportRangeIndexes, oldRangeIndexes )) {\n      // do not recompute groups while first render\n      if (oldRangeIndexes.length > 0) {\n        // recompute approximation in next animation update\n        this._viewportPointsGroupingNeeded = true;\n      }\n\n      localExtremesUpdateRequested = true;\n    }\n\n    const updateExtremes = !skipExtremes && localExtremesUpdateRequested;\n\n    this.eachSeries(line => {\n      // update local extremes only if indexes range changed\n      if (updateExtremes) {\n        // update minY and maxY local values for each line\n        line.updateLocalExtremes();\n      }\n\n      // recompute and repaint path in next animation update\n      line.requestPathUpdate();\n    });\n\n    if (updateExtremes) {\n      // update local extremes on chart level\n      this.updateLocalExtremes();\n    }\n\n    // recompute pixel values\n    this.updateViewportPixel();\n\n    // update cursor in next animation frame\n    this._axisCursorUpdateNeeded = true;\n  }\n\n  /**\n   * Recompute key variables for viewport range\n   *\n   * @param {Array<number>} viewportRange\n   * @param {*} options\n   */\n  updateViewportRange (viewportRange = this._viewportRange, options = {}) {\n    const {\n      skipExtremes = true,\n      preservePadding = true\n    } = options;\n\n    // recompute X boundaries\n    this.setViewportRange(\n      viewportRange[ 0 ],\n      viewportRange[ 1 ], {\n        skipExtremes,\n        preservePadding\n      }\n    );\n  }\n\n  /**\n   * Approximate points for better performance\n   */\n  approximateViewportPoints () {\n    let [ startIndex, endIndex ] = this._viewportRangeIndexes;\n\n    startIndex = Math.max( 0, startIndex - 1 );\n    endIndex = Math.min( this._xAxis.length - 1, endIndex + 1 );\n\n    // if we have no enough points\n    // then we don't need to approximate\n    if (endIndex - startIndex < 400) {\n      // just save indexes of points for increase performance\n      // [ startIndex, endIndex ]\n      this._viewportPointsIndexes[ 0 ] = startIndex;\n      this._viewportPointsIndexes[ 1 ] = endIndex;\n      this._useViewportPointsInterval = true;\n\n      // all work done here\n      return;\n    }\n\n    const boostLimit = 500;\n    const boostScale = 1 + this._xAxis.length > boostLimit\n      ? Math.max(0, ( endIndex - startIndex ) / this._xAxis.length ) * 2\n      : 0;\n\n    let groupingDistanceLimitX = boostScale * this._groupingPixels * this._viewportPixelX;\n\n    let viewportIndexes = [];\n    let groupStartIndex = startIndex;\n\n    for (let i = startIndex + 1; i <= endIndex; ++i) {\n      const pointX = this._xAxis[ i ];\n\n      const groupStartDifferenceX = pointX - this._xAxis[ groupStartIndex ];\n\n      if (groupStartDifferenceX >= groupingDistanceLimitX || i === endIndex) {\n        if (groupStartIndex !== i - 1) {\n          // we have 2 or more points to group\n          // [ startIndex, lastIndex ] all indexes inclusive\n          const endIndex = i - 1;\n          const middleIndex = ( groupStartIndex + endIndex ) >> 1;\n          viewportIndexes.push( middleIndex );\n        } else {\n          if (startIndex === i - 1) {\n            // add first point\n            viewportIndexes.push( startIndex );\n          }\n\n          viewportIndexes.push( i );\n        }\n\n        groupStartIndex = i;\n      }\n    }\n\n    this._viewportPointsIndexes = viewportIndexes;\n    this._useViewportPointsInterval = false;\n  }\n\n  /**\n   * Find new local min and max extremes among visible series\n   */\n  updateLocalExtremes () {\n    let localMinY = 0;\n    let localMaxY = 0;\n\n    this.eachSeries(line => {\n      if (!line.isVisible) {\n        // find among visible series\n        return;\n      }\n\n      if (localMinY > line.localMinY) {\n        localMinY = line.localMinY;\n      }\n      if (localMaxY < line.localMaxY) {\n        localMaxY = line.localMaxY;\n      }\n    });\n\n    let oldLocalMinY = this._localMinY;\n    let oldLocalMaxY = this._localMaxY;\n\n    this._localMinY = localMinY;\n    this._localMaxY = localMaxY;\n\n    let updateAnimation = false;\n\n    if (typeof this._currentLocalMinY !== 'number') {\n      // set initial local min y\n      this._currentLocalMinY = this._localMinY;\n    } else if (this._localMinY !== oldLocalMinY) {\n      updateAnimation = true;\n    }\n\n    if (typeof this._currentLocalMaxY !== 'number') {\n      // set initial local max y\n      this._currentLocalMaxY = this._localMaxY;\n    } else if (this._localMaxY !== oldLocalMaxY) {\n      updateAnimation = true;\n    }\n\n    if (updateAnimation) {\n      this._updateOrCreateMinMaxYAnimation();\n    }\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   * @return {number}\n   */\n  computeViewportPixelX (minX = this._viewportRange[ 0 ], maxX = this._viewportRange[ 1 ]) {\n    return ( maxX - minX ) / this.chartWidth;\n  }\n\n  /**\n   * Updates pixel value for each axis\n   */\n  updateViewportPixel () {\n    this._viewportPixelX = this._viewportDistance / this.chartWidth;\n    this._viewportPixelY = this.currentLocalExtremeDifference / this.chartHeight;\n  }\n\n  /**\n   * @param {number} localMinX\n   * @param {number} localMaxX\n   * @return {number}\n   */\n  computeViewportPadding (localMinX, localMaxX) {\n    return this.computeViewportPixelX( localMinX, localMaxX ) * this._viewportPadding;\n  }\n\n  /**\n   * Initialize chart events\n   */\n  addEvents () {\n    this._renderer.on('resize', _ => {\n      this.onRendererResize();\n    });\n\n    this.eachSeries(line => {\n      line.on('visibleChange', _ => {\n        this.onSeriesVisibleChange( line );\n      });\n    });\n  }\n\n  /**\n   * Resize event handler\n   */\n  onRendererResize () {\n    // making requests for future animation update\n    this._viewportRangeUpdateNeeded = true;\n    this._viewportPointsGroupingNeeded = true;\n    this._axisCursorUpdateNeeded = true;\n\n    this._updateMaskDimensions();\n  }\n\n  /**\n   * @param {Series} line\n   */\n  onSeriesVisibleChange (line) {\n    // find new extremes and scale\n    this.updateLocalExtremes();\n    \n    this.emit( ChartEvents.SERIES_VISIBLE_CHANGE, line );\n  }\n\n  /**\n   * @param {string} label\n   * @return {Series}\n   */\n  getSeriesByLabel (label) {\n    return this.findSeries(line => {\n      return line.label === label;\n    });\n  }\n\n  /**\n   * @param {string} label\n   */\n  setSeriesVisible (label) {\n    const series = this.getSeriesByLabel( label );\n    if (series) {\n      series.setVisible();\n    }\n  }\n\n  /**\n   * @param {string} label\n   */\n  setSeriesInvisible (label) {\n    const series = this.getSeriesByLabel( label );\n    if (series) {\n      series.setInvisible();\n    }\n  }\n\n  /**\n   * @param {string} label\n   */\n  toggleSeries (label) {\n    const series = this.getSeriesByLabel( label );\n    if (series) {\n      series.toggleVisible();\n    }\n  }\n\n  /**\n   * @param {Function} predicate\n   * @return {Series}\n   */\n  findSeries (predicate) {\n    for (let i = 0; i < this._series.length; ++i) {\n      if (predicate( this._series[ i ] )) {\n        return this._series[ i ];\n      }\n    }\n  }\n\n  /**\n   * @param {Function} fn\n   */\n  eachSeries (fn = () => {}) {\n    for (let i = 0; i < this._series.length; ++i) {\n      fn( this._series[ i ], i );\n    }\n  }\n\n  /**\n   * @param {Object} options\n   * @return {*}\n   */\n  extendSeriesOptions (options) {\n    return options;\n  }\n\n  /**\n   * @param {string} type\n   */\n  setChartType (type) {\n    this._type = type;\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   */\n  projectXToSvg (x) {\n    return this.toRelativeX( x ) / this._viewportPixelX;\n  }\n\n  /**\n   * @param {number} y\n   * @return {number}\n   */\n  projectYToSvg (y) {\n    return this.chartHeight - ( y - this._currentLocalMinY ) / this._viewportPixelY;\n  }\n\n  /**\n   * @param {number} pageX\n   * @param {number} pageY\n   * @return {number}\n   */\n  projectCursorToX ({ pageX = 0, pageY = 0 }) {\n    const { left } = getElementOffset( this.renderer.svgContainer );\n    const chartLeft = pageX - left;\n\n    return this.viewportRange[ 0 ] + chartLeft * this.viewportPixelX;\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   * @private\n   */\n  toRelativeX (x) {\n    return x - this._viewportRange[ 0 ];\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {string}\n   */\n  get chartType () {\n    return this._type;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isChart () {\n    return this._type === ChartTypes.chart;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isNavigatorChart () {\n    return this._type === ChartTypes.navigatorChart;\n  }\n\n  /**\n   * @return {SvgRenderer}\n   */\n  get renderer () {\n    return this._renderer;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get xAxis () {\n    return this._xAxis;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRange () {\n    return this._viewportRange;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRangeIndexes () {\n    return this._viewportRangeIndexes;\n  }\n\n  /**\n   * @return {number}\n   */\n  get viewportPixelX () {\n    return this._viewportPixelX;\n  }\n\n  /**\n   * @return {number}\n   */\n  get viewportPixelY () {\n    return this._viewportPixelY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localExtremeDifference () {\n    return this._localMaxY - this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalExtremeDifference () {\n    return this._currentLocalMaxY - this._currentLocalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalMinY () {\n    return this._currentLocalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalMaxY () {\n    return this._currentLocalMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartWidth () {\n    return this._renderer.width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return this._chartHeight;\n  }\n\n  /**\n   * @return {string}\n   */\n  get chartMaskId () {\n    return this._chartMaskId;\n  }\n\n  /**\n   * @return {Tween}\n   */\n  get minMaxYAnimation () {\n    return this._minMaxYAnimation;\n  }\n\n  /**\n   * @return {SVGDefsElement}\n   */\n  get defs () {\n    return this._defs;\n  }\n\n  /**\n   * @private\n   */\n  _updateViewportIndexes () {\n    const [ rangeStart, rangeEnd ] = this._viewportRange;\n    const [ minLowerIndex, minUpperIndex ] = binarySearchIndexes( this._xAxis, rangeStart );\n    const [ maxLowerIndex, maxUpperIndex ] = binarySearchIndexes( this._xAxis, rangeEnd );\n\n    this._viewportRangeIndexes = [ minUpperIndex, maxLowerIndex ];\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   * @param {boolean} preservePadding\n   * @private\n   */\n  _setViewportRange (minX, maxX, preservePadding = false) {\n    const [ newMinX, newMaxX ] = this._clampViewportRange( minX, maxX, preservePadding );\n\n    this._viewportRange = [ newMinX, newMaxX ];\n    this._viewportDistance = newMaxX - newMinX;\n  }\n\n  /**\n   * @param {number | Date} minX\n   * @param {number | Date} maxX\n   * @param {boolean} preservePadding\n   * @private\n   */\n  _clampViewportRange (minX, maxX, preservePadding = false) {\n    const xAxis = this._xAxis;\n\n    const globalMinX = xAxis[ 0 ];\n    const globalMaxX = xAxis[ xAxis.length - 1 ];\n\n    if (isDate( minX )) {\n      minX = minX.getTime();\n    }\n    if (isDate( maxX )) {\n      maxX = maxX.getTime();\n    }\n\n    if (minX > maxX) {\n      [ minX, maxX ] = [ maxX, minX ];\n    }\n\n    let newMinX = clampNumber( minX, globalMinX, globalMaxX );\n    let newMaxX = clampNumber( maxX, globalMinX, globalMaxX );\n\n    const actualPaddingX = this.computeViewportPadding( newMinX, newMaxX );\n\n    const receivedLeftPaddingX = clampNumber( newMinX - minX, 0, actualPaddingX );\n    const receivedRightPaddingX = clampNumber( maxX - newMaxX, 0, actualPaddingX );\n\n    if (!preservePadding) {\n      this._viewportLeftPaddingScale = receivedLeftPaddingX / actualPaddingX;\n    }\n    if (this._viewportLeftPaddingScale > 0) {\n      newMinX -= actualPaddingX * this._viewportLeftPaddingScale;\n    }\n\n    if (!preservePadding) {\n      this._viewportRightPaddingScale = receivedRightPaddingX / actualPaddingX;\n    }\n    if (this._viewportRightPaddingScale > 0) {\n      newMaxX += actualPaddingX * this._viewportRightPaddingScale;\n    }\n\n    return [ newMinX, newMaxX ];\n  }\n\n  /**\n   * @private\n   */\n  _updateOrCreateMinMaxYAnimation () {\n    if (!this._minMaxYAnimation) {\n      return this._createMinMaxYAnimation();\n    }\n\n    const currentLocalExtremeDifference = this.currentLocalExtremeDifference;\n    const newLocalExtremeDifference = this.localExtremeDifference;\n    const animationSign = currentLocalExtremeDifference < newLocalExtremeDifference;\n\n    if (animationSign !== this._minMaxYAnimationSign) {\n      return this._createMinMaxYAnimation();\n    }\n\n    this._patchMinMaxYAnimation();\n  }\n\n  /**\n   * @private\n   */\n  _createMinMaxYAnimation () {\n    if (this._minMaxYAnimation) {\n      this._minMaxYAnimation.cancel();\n    }\n\n    this._updateMinMaxAnimationSign();\n\n    this._minMaxYAnimation = new Tween(this, [\n      '_currentLocalMinY',\n      '_currentLocalMaxY'\n    ], [\n      this._localMinY,\n      this._localMaxY\n    ], {\n      duration: 300,\n      timingFunction: 'easeInOutQuad'\n    });\n\n    const onFinished = _ => {\n      this._minMaxYAnimation = null;\n    };\n\n    this._minMaxYAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._minMaxYAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._minMaxYAnimation.start();\n  }\n\n  /**\n   * @private\n   */\n  _patchMinMaxYAnimation () {\n    this._minMaxYAnimation.patchAnimation([\n      this._localMinY,\n      this._localMaxY\n    ]);\n  }\n\n  /**\n   * @private\n   */\n  _updateMinMaxAnimationSign () {\n    this._minMaxYAnimationSign = this.currentLocalExtremeDifference < this.localExtremeDifference;\n  }\n\n  /**\n   * @private\n   */\n  _updateMaskDimensions () {\n    if (!this._chartMask) {\n      return;\n    }\n    const rect = this._chartMask.querySelector( 'rect' );\n    setAttributeNS( rect, 'width', this.chartWidth, null );\n  }\n\n  /**\n   * @private\n   */\n  _createAxisCursor () {\n    const pathText = this._computeAxisCursorPath();\n\n    this._axisCursor = this.renderer.createPath(pathText, {\n      class: 'telechart-chart-cursor',\n      strokeWidth: 1,\n      stroke: '#ccc'\n    }, this._axisCursorGroup);\n\n    this._axisCursorGroup = this.renderer.createGroup({\n      class: 'telechart-chart-cursor-group',\n      transform: `translate(0, ${this._seriesGroupTop}) scale(1 1)`\n    }, this._axisCursor);\n\n    this.renderer.svgContainer.insertBefore( this._axisCursorGroup, this._seriesGroup );\n  }\n\n  /**\n   * @private\n   */\n  _updateAxisCursor () {\n    this.renderer.updatePath( this._axisCursor, this._computeAxisCursorPath() );\n  }\n\n  /**\n   * @return {string}\n   * @private\n   */\n  _computeAxisCursorPath () {\n    const x = this.xAxis[ this._axisCursorPointIndex ];\n    const svgX = this.projectXToSvg( x );\n\n    return `M${svgX} 0L${svgX} ${this.chartHeight}`;\n  }\n\n  /**\n   * @private\n   */\n  _addAxisCursorEvents () {\n    const mouseMoveListener = this._onMouseMove.bind( this );\n    const mouseLeaveListener = this._onMouseLeave.bind( this );\n\n    const touchStartListener = this._onTouchStart.bind( this );\n    const touchMoveListener = this._onTouchMove.bind( this );\n    const touchEndListener = this._onTouchEnd.bind( this );\n\n    this.renderer.svgContainer.addEventListener( 'touchstart', touchStartListener, { passive: false } );\n    this.renderer.svgContainer.addEventListener( 'touchmove', touchMoveListener, { passive: false } );\n    this.renderer.svgContainer.addEventListener( 'touchend', touchEndListener );\n\n    this.renderer.svgContainer.addEventListener( 'mousemove', mouseMoveListener );\n    this.renderer.svgContainer.addEventListener( 'mouseleave', mouseLeaveListener );\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onMouseMove (ev) {\n    this._onCursorMove( ev );\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onMouseLeave (ev) {\n    this._onCursorLeave();\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onTouchStart (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    this._touchStartPosition = {\n      pageX: targetTouch.pageX,\n      pageY: targetTouch.pageY\n    };\n\n    this._onCursorMove( targetTouch );\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onTouchMove (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    this._onCursorMove( targetTouch );\n\n    if (this._isScrollingAction === null) {\n      const {\n        pageX: startPageX,\n        pageY: startPageY\n      } = this._touchStartPosition;\n\n      const deltaY = Math.abs( startPageY - targetTouch.pageY );\n      const deltaX = Math.abs( startPageX - targetTouch.pageX );\n\n      this._isScrollingAction = deltaY >= deltaX;\n    }\n\n    if (this._cursorInsideChart\n      && !this._isScrollingAction) {\n      ev.preventDefault();\n    }\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onTouchEnd (ev) {\n    if (this._cursorInsideChart && ev.cancelable) {\n      ev.preventDefault();\n    }\n\n    this._isScrollingAction = null;\n    this._onCursorLeave();\n  }\n\n  /**\n   * @param cursorPosition\n   * @private\n   */\n  _onCursorMove (cursorPosition) {\n    const insideChart = this._insideChart( cursorPosition );\n\n    this._setInsideChartState(\n      insideChart\n    );\n\n    if (!insideChart) {\n      return;\n    }\n\n    const oldIndex = this._axisCursorPointIndex;\n\n    this._axisCursorPositionX = this.projectCursorToX( cursorPosition );\n    this._axisCursorPointIndex = this._findPointIndexByCursor( this._axisCursorPositionX );\n    this._axisCursorUpdateNeeded = true;\n\n    this.eachSeries(line => {\n      line.setMarkerPointIndex( this._axisCursorPointIndex );\n    });\n\n    this._updateLabel( this._axisCursorPointIndex !== oldIndex );\n  }\n\n  /**\n   * @private\n   */\n  _updateLabel (changed = true) {\n    this._label.setData(\n      this._prepareLabelData()\n    );\n\n    const date1 = new Date( this._viewportRange[ 0 ] );\n    const date2 = new Date( this._viewportRange[ 1 ] );\n    if (date1.getFullYear() !== date2.getFullYear()) {\n      this._label.showYear();\n    } else {\n      this._label.hideYear();\n    }\n\n    if (changed) {\n      this._label.requestUpdatePosition();\n    }\n  }\n\n  /**\n   * @param {number} cursorX\n   * @return {number}\n   * @private\n   */\n  _findPointIndexByCursor (cursorX) {\n    const [ lowerIndex, upperIndex ] = binarySearchIndexes( this.xAxis, cursorX );\n\n    let index = null;\n    if (lowerIndex < 0 && upperIndex >= 0) {\n      index = upperIndex;\n    } else if (lowerIndex >= 0 && upperIndex >= this.xAxis.length) {\n      index = lowerIndex;\n    } else {\n      const lowerDistance = Math.abs( cursorX - this.xAxis[ lowerIndex ] );\n      const upperDistance = Math.abs( cursorX - this.xAxis[ upperIndex ] );\n      const isLowerCloser = lowerDistance <= upperDistance;\n\n      const isLowerVisible = this.xAxis[ lowerIndex ] >= this.viewportRange[ 0 ];\n      const isUpperVisible = this.xAxis[ upperIndex ] <= this.viewportRange[ 1 ];\n\n      index = isLowerCloser\n        ? ( isLowerVisible ? lowerIndex : upperIndex )\n        : ( isUpperVisible ? upperIndex : lowerIndex );\n    }\n\n    return index;\n  }\n\n  /**\n   * @private\n   */\n  _onCursorLeave () {\n    this._setInsideChartState( false );\n  }\n\n  /**\n   * @param {boolean} isInside\n   * @private\n   */\n  _setInsideChartState (isInside) {\n    const changed = this._cursorInsideChart !== isInside;\n    if (!changed) {\n      return;\n    }\n\n    this._cursorInsideChart = isInside;\n\n    if (this._markerHideTimeout) {\n      clearTimeout( this._markerHideTimeout );\n      this._markerHideTimeout = null;\n    }\n\n    const change = _ => {\n      this._onCursorInsideChartChanged( isInside );\n    };\n\n    if (!isInside) {\n      // create short delay for cursor & markers hiding\n      this._markerHideTimeout = setTimeout( change , 1000 );\n    } else {\n      change();\n    }\n  }\n\n  /**\n   * @param {boolean} isInside\n   * @private\n   */\n  _onCursorInsideChartChanged (isInside) {\n    if (isInside) {\n      this._showMarkers();\n      this._showCursor();\n      this._label.showLabel();\n    } else {\n      this._hideMarkers();\n      this._hideCursor();\n      this._label.hideLabel();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _showMarkers () {\n    this.eachSeries(line => {\n      if (line.isVisible) {\n        line.showMarker();\n      }\n    });\n  }\n\n  /**\n   * @private\n   */\n  _hideMarkers () {\n    this.eachSeries(line => {\n      line.hideMarker();\n    });\n  }\n\n  /**\n   * @private\n   */\n  _showCursor () {\n    setAttributeNS( this._axisCursor, 'stroke-opacity', 1, null );\n  }\n\n  /**\n   * @private\n   */\n  _hideCursor () {\n    setAttributeNS( this._axisCursor, 'stroke-opacity', 0, null );\n  }\n\n  /**\n   * @param {number} pageX\n   * @param {number} pageY\n   * @return {boolean}\n   * @private\n   */\n  _insideChart ({ pageX, pageY }) {\n    const { top, left } = getElementOffset( this.renderer.svgContainer );\n    const chartTop = pageY - top - this._seriesGroupTop;\n    const chartLeft = pageX - left;\n\n    return chartTop >= 0 && chartTop <= this.chartHeight\n      && chartLeft >= 0 && chartLeft <= this.chartWidth;\n  }\n\n  /**\n   * @return {Array}\n   * @private\n   */\n  _prepareLabelData () {\n    const data = [];\n\n    const index = this._axisCursorPointIndex;\n    const x = this._xAxis[ index ];\n\n    this.eachSeries(line => {\n      data.push({\n        color: line.color,\n        label: line.label,\n        name: line.name,\n        visible: line.isVisible,\n        x,\n        y: line._yAxis[ index ],\n        svgY: this.projectYToSvg( line._yAxis[ index ] ),\n        svgX: this.projectXToSvg( line._xAxis[ index ] )\n      });\n    });\n\n    return data;\n  }\n}\n","import { BaseChart } from './BaseChart';\nimport { cssText } from '../../utils';\nimport { ChartTypes } from './ChartTypes';\n\nexport class Chart extends BaseChart {\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _type = ChartTypes.chart;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartHeight = 290;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartMaskPadding = 20;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _seriesGroupTop = 65;\n\n  /**\n   * Creates SVG group for storing series paths\n   */\n  createSeriesGroup () {\n    this._seriesGroup = this.renderer.createGroup({\n      class: 'telechart-series-group',\n      transform: `translate(0, ${this._seriesGroupTop}) scale(1 1)`,\n      mask: `url(#${this.chartMaskId})`\n    });\n\n    this.renderer.createRect(this.renderer.width, '1px', {\n      fill: '#ccc',\n      y: 1,\n      style: cssText({\n        shapeRendering: 'crispEdges'\n      })\n    }, this._seriesGroup);\n\n    this.renderer.createRect(this.renderer.width, '1px', {\n      fill: '#ccc',\n      y: this.chartHeight,\n      style: cssText({\n        shapeRendering: 'crispEdges'\n      })\n    }, this._seriesGroup);\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   */\n  setNavigationRange (min, max) {\n    const [ minX, maxX ] = this._resolveNavigationRange( min, max );\n\n    this.setViewportRange( minX, maxX );\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   */\n  animateNavigationRangeTo (min, max) {\n    const [ minX, maxX ] = this._resolveNavigationRange( min, max );\n\n    this.animateViewportRangeTo( minX, maxX );\n  }\n\n  /**\n   * Sets initial viewport range for the chart\n   */\n  setInitialRange () {\n    const globalMinX = this.xAxis[ 0 ];\n    const globalMaxX = this.xAxis[ this.xAxis.length - 1 ];\n    const initialViewport = Math.floor( ( globalMaxX - globalMinX ) * .3 );\n    const viewportPadding = this.computeViewportPadding(\n      globalMaxX - initialViewport,\n      globalMaxX\n    );\n\n    // set initial range\n    this.setViewportRange(\n      globalMaxX - initialViewport - viewportPadding,\n      globalMaxX + viewportPadding\n    );\n  }\n\n  /**\n   * @param {*} options\n   * @return {*}\n   */\n  extendSeriesOptions (options) {\n    return Object.assign({}, options, {\n      strokeWidth: 2\n    });\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return this._chartHeight;\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @private\n   */\n  _resolveNavigationRange (min, max) {\n    const globalMinX = this.xAxis[ 0 ];\n    const globalMaxX = this.xAxis[ this.xAxis.length - 1 ];\n\n    const globalDistance = globalMaxX - globalMinX;\n\n    let minX = globalMinX + min * globalDistance;\n    let maxX = globalMinX + max * globalDistance;\n\n    const padding = this.computeViewportPadding( minX, maxX );\n\n    return [ minX - padding, maxX + padding ];\n  }\n}\n","export class Clock {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateMs = 0;\n\n  constructor () {\n    this._lastUpdateMs = performance.now();\n  }\n\n  /**\n   * @return {number}\n   */\n  getDelta () {\n    const now = performance.now();\n    const delta = now - this._lastUpdateMs;\n    this._lastUpdateMs = now;\n\n    return delta;\n  }\n}\n","export const NavigatorChartEvents = {\n  RANGE_CHANGED: 'rangeChanged',\n  ANIMATE_RANGE: 'animateRange',\n};\n","import { BaseChart } from './BaseChart';\nimport { ChartTypes } from './ChartTypes';\nimport {\n  clampNumber,\n  cssText,\n  getElementOffset, isTouchEventsSupported,\n  passiveIfSupported,\n  setAttributeNS,\n  setAttributesNS\n} from '../../utils';\nimport { NavigatorChartEvents } from './events/NavigatorChartEvents';\nimport { Tween, TweenEvents } from '../animation/Tween';\n\nexport class NavigatorChart extends BaseChart {\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _type = ChartTypes.navigatorChart;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartHeight = 40;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _offsetY = 388;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _paddingTopBottom = 2;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _paddingLeftRight = 11;\n\n  /**\n   * @extends\n   * @type {number}\n   * @private\n   * @readonly\n   */\n  _chartMaskPadding = 1;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _navigatorGroup = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _sliderGroup = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _slider = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _sliderControllerLeft = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _sliderControllerRight = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderControllerWidth = isTouchEventsSupported() ? 30 : 20;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderControllerOffset = isTouchEventsSupported() ? 17 : 12;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderWidth = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _sliderLeftRightBorderWidth = 5;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _overlayLeft = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _overlayRight = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _overlayLeftWidth = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _overlayRightWidth = 0;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _overlayColor = 'rgba(240, 246, 249, 0.75)';\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _sliderUpdateNeeded = false;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _navigatorRange = [ .7, 1 ];\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _navigatorRangeAnimation = null;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _navigationRangeAnimationObject = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _navigatorMinRangeDistance = .05;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _navigatorChangeDirection = 'right';\n\n  /**\n   * Initializes navigator chart\n   */\n  initialize () {\n    super.initialize();\n\n    this._updateNavigatorDimensions();\n    this._createNavigatorGroup();\n    this._createOverlays();\n\n    this._createSliderEventsListeners();\n  }\n\n  update (deltaTime) {\n    super.update( deltaTime );\n\n    const hasRangeAnimation = this._navigatorRangeAnimation && this._navigatorRangeAnimation.isRunning;\n    if (hasRangeAnimation) {\n      this._navigatorRangeAnimation.update( deltaTime );\n\n      this.updateNavigationRange(\n        this._navigationRangeAnimationObject.from,\n        this._navigationRangeAnimationObject.to\n      );\n    }\n\n    if (this._sliderUpdateNeeded) {\n      this._updateNavigatorElements();\n\n      this._sliderUpdateNeeded = false;\n    }\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @param {*} options\n   */\n  animateNavigationRangeTo (min = 0, max = 1, options = {}) {\n    const {\n      duration = 300,\n      timingFunction = 'easeInOutQuad'\n    } = options;\n\n    const [ newMin, newMax ] = this._clampNavigationRange( min, max );\n\n    if (this._navigatorRangeAnimation) {\n      return this._navigatorRangeAnimation.patchAnimation( [ newMin, newMax ] );\n    }\n\n    this._navigationRangeAnimationObject = {\n      from: this._navigatorRange[ 0 ],\n      to: this._navigatorRange[ 1 ]\n    };\n\n    this._navigatorRangeAnimation = new Tween(this._navigationRangeAnimationObject, [ 'from', 'to' ], [\n      newMin, newMax\n    ], {\n      duration, timingFunction\n    });\n\n    const onFinished = _ => {\n      this._navigatorRangeAnimation = null;\n    };\n\n    this._navigatorRangeAnimation.on( TweenEvents.COMPLETE, onFinished );\n    this._navigatorRangeAnimation.on( TweenEvents.CANCELLED, onFinished );\n\n    this._navigatorRangeAnimation.start();\n\n    this.emit( NavigatorChartEvents.ANIMATE_RANGE, [ newMin, newMax ] );\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @param {boolean} emitChange\n   */\n  setNavigationRange (min = 0, max = 1, { emitChange = true } = {}) {\n    [ min, max ] = this._clampNavigationRange( min, max );\n    this._navigatorRange = [ min, max ];\n\n    this._updateNavigatorDimensions();\n    this._sliderUpdateNeeded = true;\n\n    if (emitChange) {\n      this.emit( NavigatorChartEvents.RANGE_CHANGED, this._navigatorRange );\n    }\n  }\n\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   */\n  updateNavigationRange (min, max) {\n    this.setNavigationRange( min, max, { emitChange: false } );\n  }\n\n  /**\n   * Creates SVG group for storing series paths\n   */\n  createSeriesGroup () {\n    this._seriesGroup = this.renderer.createGroup({\n      class: 'telechart-navigator-series-group',\n      transform: `translate(0, ${this._offsetY}) scale(1 1)`,\n      mask: `url(#${this.chartMaskId})`\n    });\n  }\n\n  onRendererResize () {\n    super.onRendererResize();\n\n    this._updateNavigatorDimensions();\n    this._sliderUpdateNeeded = true;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return this._chartHeight;\n  }\n\n  /**\n   * @return {number}\n   */\n  get navigatorWidth () {\n    return this.chartWidth - this._paddingLeftRight * 2;\n  }\n\n  /**\n   * @return {number}\n   */\n  get navigatorHeight () {\n    return this._chartHeight + this._paddingTopBottom * 2;\n  }\n\n  /**\n   * @private\n   */\n  _updateNavigatorDimensions () {\n    const overlayLeftScale = this._navigatorRange[ 0 ];\n    const overlayRightScale = ( 1 - this._navigatorRange[ 1 ] );\n    const navigatorWidth = this.navigatorWidth;\n\n    this._overlayLeftWidth = navigatorWidth * overlayLeftScale;\n    this._overlayRightWidth = navigatorWidth * overlayRightScale;\n    this._sliderWidth = navigatorWidth - this._overlayLeftWidth - this._overlayRightWidth;\n  }\n\n  /**\n   * @private\n   */\n  _createNavigatorGroup () {\n    const offsetY = this._offsetY - this._paddingTopBottom;\n\n    this._navigatorGroup = this.renderer.createGroup({\n      class: 'telechart-navigator',\n      transform: `translate(${this._paddingLeftRight}, ${offsetY}) scale(1 1)`,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _createOverlays () {\n    this._overlayLeft = this.renderer.createRect(this._overlayLeftWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-overlay',\n      x: 0,\n      y: 0,\n      style: cssText({\n        fill: this._overlayColor\n      })\n    }, this._navigatorGroup);\n\n    this._overlayRight = this.renderer.createRect(this._overlayRightWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-overlay',\n      x: this.navigatorWidth - this._overlayRightWidth,\n      y: 0,\n      style: cssText({\n        fill: this._overlayColor\n      })\n    }, this._navigatorGroup);\n\n    // creating slider\n    this._sliderGroup = this.renderer.createGroup({\n      class: 'telechart-navigator-slider-group',\n      transform: `translate(${this._overlayLeftWidth}, 0) scale(1 1)`,\n      fill: 'none'\n    }, [], this._navigatorGroup);\n\n    this._slider = this.renderer.createRect(this._sliderWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-slider',\n      x: 0,\n      y: 0,\n      fill: 'rgba(163, 196, 220, 0.47)'\n    }, this._sliderGroup);\n\n    this._sliderControllerLeft = this.renderer.createRect(this._sliderControllerWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-slider-controller left',\n      x: -this._sliderControllerOffset,\n      y: 0,\n      fill: 'rgba(255,255,255,.0001)'\n    }, this._sliderGroup);\n\n    this._sliderControllerRight = this.renderer.createRect(this._sliderControllerWidth, this.navigatorHeight, {\n      class: 'telechart-navigator-slider-controller right',\n      x: this._sliderWidth - this._sliderControllerWidth + this._sliderControllerOffset,\n      y: 0,\n      fill: 'rgba(255,255,255,.0001)'\n    }, this._sliderGroup);\n\n    // creating mask\n    const maskId = `telechart-navigator-slider-mask-${this.id}`;\n    this._sliderMask = this.renderer.createMask({\n      id: maskId\n    }, [], this.defs);\n\n    this._sliderMaskOuter = this.renderer.createRect(this._sliderWidth, this.navigatorHeight, {\n      x: 0,\n      y: 0,\n      fill: 'white'\n    }, this._sliderMask);\n\n    this._sliderMaskInner = this.renderer.createRect(this._sliderWidth - 2 * this._sliderLeftRightBorderWidth, this.navigatorHeight - 2, {\n      x: this._sliderLeftRightBorderWidth,\n      y: 1,\n      fill: 'black'\n    }, this._sliderMask);\n\n    // connect mask to slider\n    setAttributeNS( this._sliderGroup, 'mask', `url(#${maskId})`, null );\n  }\n\n  /**\n   * @private\n   */\n  _updateNavigatorElements () {\n    // left overlay\n    setAttributeNS( this._overlayLeft, 'width', this._overlayLeftWidth, null );\n\n    // right overlay\n    setAttributeNS( this._overlayRight, 'width', this._overlayRightWidth, null );\n    setAttributeNS( this._overlayRight, 'x', this.navigatorWidth - this._overlayRightWidth, null );\n\n    // slider\n    setAttributeNS( this._sliderGroup, 'transform', `translate(${this._overlayLeftWidth}, 0) scale(1 1)`, null );\n    setAttributeNS( this._slider, 'width', this._sliderWidth, null );\n    setAttributeNS( this._sliderControllerRight, 'x', this._sliderWidth - this._sliderControllerWidth + this._sliderControllerOffset, null );\n\n    // mask\n    setAttributeNS( this._sliderMaskOuter, 'width', this._sliderWidth, null );\n    setAttributesNS(this._sliderMaskInner, {\n      width: Math.max( 0, this._sliderWidth - 2 * this._sliderLeftRightBorderWidth ),\n      height: this.navigatorHeight - 2,\n      x: this._sliderLeftRightBorderWidth\n    });\n  }\n\n  /**\n   * @param {number} min\n   * @param {number} max\n   * @param {boolean} preserveDistance\n   * @return {Array<number>}\n   * @private\n   */\n  _clampNavigationRange (min = 0, max = 1, preserveDistance = false) {\n    const preservedDistance = clampNumber( max - min, this._navigatorMinRangeDistance, 1 );\n\n    min = clampNumber( min, 0, 1 );\n    max = clampNumber( max, 0, 1 );\n\n    const isRightController = this._navigatorChangeDirection === 'right';\n\n    const distance = max - min;\n    const minDistance = preserveDistance\n      ? preservedDistance\n      : this._navigatorMinRangeDistance;\n\n    if (distance < minDistance) {\n      if (isRightController) {\n        if (max - minDistance >= 0) {\n          min = max - minDistance;\n        } else {\n          min = 0;\n          max = minDistance;\n        }\n      } else {\n        if (min + minDistance <= 1) {\n          max = min + minDistance;\n        } else {\n          max = 1;\n          min = 1 - minDistance;\n        }\n      }\n    }\n\n    return [ min, max ];\n  }\n\n  /**\n   * @private\n   */\n  _createSliderEventsListeners () {\n    // slider\n    const touchStartListener = this._onSliderTouchStart.bind( this );\n    const touchMoveListener = this._onSliderTouchMove.bind( this );\n    const mouseDownListener = this._onSliderMouseDown.bind( this );\n\n    this._slider.addEventListener( 'touchstart', touchStartListener, passiveIfSupported );\n    this._slider.addEventListener( 'touchmove', touchMoveListener, passiveIfSupported );\n\n    this._slider.addEventListener( 'mousedown', mouseDownListener );\n\n    // slider controllers\n    // left\n    const controllerLeftTouchStartListener = this._onSliderControllerTouchStart.bind( this, 'left' );\n    const controllerLeftTouchMoveListener = this._onSliderControllerTouchMove.bind( this );\n    const controllerLeftMouseDownListener = this._onSliderControllerMouseDown.bind( this, 'left' );\n\n    //right\n    const controllerRightTouchStartListener = this._onSliderControllerTouchStart.bind( this, 'right' );\n    const controllerRightTouchMoveListener = this._onSliderControllerTouchMove.bind( this );\n    const controllerRightMouseDownListener = this._onSliderControllerMouseDown.bind( this, 'right' );\n\n    // left\n    this._sliderControllerLeft.addEventListener( 'touchstart', controllerLeftTouchStartListener, passiveIfSupported );\n    this._sliderControllerLeft.addEventListener( 'touchmove', controllerLeftTouchMoveListener, passiveIfSupported );\n    this._sliderControllerLeft.addEventListener( 'mousedown', controllerLeftMouseDownListener );\n\n    // right\n    this._sliderControllerRight.addEventListener( 'touchstart', controllerRightTouchStartListener, passiveIfSupported );\n    this._sliderControllerRight.addEventListener( 'touchmove', controllerRightTouchMoveListener, passiveIfSupported );\n    this._sliderControllerRight.addEventListener( 'mousedown', controllerRightMouseDownListener );\n\n    // overlays\n    const overlayLeftClickListener = this._onSliderOverlayClick.bind( this, 'left' );\n    const overlayRightClickListener = this._onSliderOverlayClick.bind( this, 'right' );\n\n    this._overlayLeft.addEventListener( 'click', overlayLeftClickListener );\n    this._overlayRight.addEventListener( 'click', overlayRightClickListener );\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderTouchStart (ev) {\n    const {\n      pageX, pageY\n    } = ev.targetTouches[ 0 ];\n\n    this._sliderStartEvent = {\n      pageX, pageY\n    };\n\n    this._sliderStartPosition = this._navigatorRange.slice();\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderTouchMove (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    const {\n      pageX: startPageX\n    } = this._sliderStartEvent;\n\n    const {\n      pageX = 0\n    } = targetTouch;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n\n    const startPosition = this._sliderStartPosition;\n\n    let [ min, max ] = this._clampNavigationRange(\n      startPosition[ 0 ] - positionDelta,\n      startPosition[ 1 ] - positionDelta,\n      true\n    );\n\n    this.setNavigationRange( min, max );\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderMouseDown (ev) {\n    const {\n      pageX, pageY\n    } = ev;\n\n    this._sliderStartEvent = {\n      pageX, pageY\n    };\n\n    this._sliderStartPosition = this._navigatorRange.slice();\n\n    const sliderMouseMoveListener = this._onSliderMouseMove.bind( this );\n\n    const lastBodyStyle = document.body.getAttribute( 'style' );\n    setAttributeNS( document.body, 'style', cssText({ cursor: 'grabbing' }), null );\n    setAttributeNS( this._slider, 'style', cssText({ cursor: 'grabbing' }), null );\n\n    document.addEventListener('mousemove', sliderMouseMoveListener);\n    document.addEventListener('mouseup', ev => {\n      if (lastBodyStyle) {\n        setAttributeNS( document.body, 'style', lastBodyStyle, null );\n      } else {\n        document.body.removeAttribute( 'style' );\n      }\n      setAttributeNS( this._slider, 'style', cssText({ cursor: 'grab' }), null );\n\n      document.removeEventListener( 'mousemove', sliderMouseMoveListener )\n    });\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderMouseMove (ev) {\n    ev.preventDefault();\n\n    const {\n      pageX: startPageX\n    } = this._sliderStartEvent;\n\n    const {\n      pageX = 0\n    } = ev;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n\n    const startPosition = this._sliderStartPosition;\n\n    let [ min, max ] = this._clampNavigationRange(\n      startPosition[ 0 ] - positionDelta,\n      startPosition[ 1 ] - positionDelta,\n      true\n    );\n\n    this.setNavigationRange( min, max );\n  }\n\n  /**\n   * @param {string} direction\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderControllerTouchStart (direction, ev) {\n    const {\n      pageX, pageY\n    } = ev.targetTouches[ 0 ];\n\n    this._sliderControllerStartPosition = this._navigatorRange.slice();\n    this._navigatorChangeDirection = direction;\n    this._sliderControllerStartEvent = {\n      pageX, pageY\n    };\n  }\n\n  /**\n   * @param {TouchEvent} ev\n   * @private\n   */\n  _onSliderControllerTouchMove (ev) {\n    const targetTouch = ev.targetTouches[ 0 ];\n\n    const {\n      pageX: startPageX\n    } = this._sliderControllerStartEvent;\n\n    const {\n      pageX = 0\n    } = targetTouch;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n    const startPosition = this._sliderControllerStartPosition;\n    const isLeft = this._navigatorChangeDirection === 'left';\n\n    let [ min, max ] = [\n      startPosition[ 0 ] - ( isLeft ? positionDelta : 0 ),\n      startPosition[ 1 ] - ( !isLeft ? positionDelta : 0 )\n    ];\n\n    [ min, max ] = this._clampNavigationRange( min, max );\n\n    if (isLeft) {\n      this._sliderControllerStartPosition[ 1 ] = max;\n    } else {\n      this._sliderControllerStartPosition[ 0 ] = min;\n    }\n\n    this.setNavigationRange( min, max );\n  }\n\n  /**\n   * @param {string} direction\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderControllerMouseDown (direction, ev) {\n    const {\n      pageX, pageY\n    } = ev;\n\n    this._sliderControllerStartPosition = this._navigatorRange.slice();\n    this._navigatorChangeDirection = direction;\n    this._sliderControllerStartEvent = {\n      pageX, pageY\n    };\n\n    const mouseMoveListener = this._onSliderControllerMouseMove.bind( this );\n\n    const lastBodyStyle = document.body.getAttribute( 'style' );\n    setAttributeNS( document.body, 'style', cssText({ cursor: 'e-resize' }), null );\n\n    document.addEventListener('mousemove', mouseMoveListener);\n    document.addEventListener('mouseup', ev => {\n      if (lastBodyStyle) {\n        setAttributeNS( document.body, 'style', lastBodyStyle, null );\n      } else {\n        document.body.removeAttribute( 'style' );\n      }\n\n      document.removeEventListener( 'mousemove', mouseMoveListener )\n    });\n  }\n\n  /**\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderControllerMouseMove (ev) {\n    ev.preventDefault();\n\n    const {\n      pageX: startPageX\n    } = this._sliderControllerStartEvent;\n\n    const {\n      pageX = 0\n    } = ev;\n\n    const positionDelta = ( startPageX - pageX ) / this.navigatorWidth;\n    const startPosition = this._sliderControllerStartPosition;\n    const isLeft = this._navigatorChangeDirection === 'left';\n\n    let [ min, max ] = [\n      startPosition[ 0 ] - ( isLeft ? positionDelta : 0 ),\n      startPosition[ 1 ] - ( !isLeft ? positionDelta : 0 )\n    ];\n\n    [ min, max ] = this._clampNavigationRange( min, max );\n\n    if (isLeft) {\n      this._sliderControllerStartPosition[ 1 ] = max;\n    } else {\n      this._sliderControllerStartPosition[ 0 ] = min;\n    }\n\n    this.setNavigationRange( min, max );\n  }\n\n  /**\n   * @param {string} direction\n   * @param {MouseEvent} ev\n   * @private\n   */\n  _onSliderOverlayClick (direction, ev) {\n    const position = this._resolveNavigatorPosition( ev );\n    const halfDistance = ( this._navigatorRange[ 1 ] - this._navigatorRange[ 0 ] ) * .5;\n\n    const [ min, max ] = this._clampNavigationRange(\n      position - halfDistance,\n      position + halfDistance,\n      true\n    );\n\n    this.animateNavigationRangeTo( min, max );\n  }\n\n  /**\n   * @param {number} pageX\n   * @param {number} pageY\n   * @private\n   */\n  _resolveNavigatorPosition ({ pageX, pageY }) {\n    const { left } = getElementOffset( this._navigatorGroup );\n    return ( pageX - left ) / this.navigatorWidth;\n  }\n}\n","import './style/telechart.scss';\n\nimport { AnimationSource, AnimationSourceEvents } from './core/animation/AnimationSource';\nimport { SvgRenderer } from \"./core/SvgRenderer\";\nimport { Chart } from './core/chart/Chart';\nimport { Clock } from './core/misc/Clock';\nimport { NavigatorChart } from './core/chart/NavigatorChart';\nimport { ChartEvents } from './core/chart/events/ChartEvents';\n\nimport {\n  addClass,\n  interpolateThemeClass,\n  removeClass,\n  resolveElement,\n  ChartThemes,\n  setAttributesNS,\n  cssText, createElement, ROOT_CLASS_NAME\n} from \"./utils\";\nimport { NavigatorChartEvents } from './core/chart/events/NavigatorChartEvents';\n\nlet TELECHART_ID = 1;\n\nexport class Telechart {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = TELECHART_ID++;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _rootElement = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {NavigatorChart}\n   * @private\n   */\n  _navigatorChart = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _themeName = ChartThemes.default;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _title = '';\n\n  /**\n   * @type {SVGTextElement}\n   * @private\n   */\n  _titleElement = null;\n\n  /**\n   * @type {Clock}\n   * @private\n   */\n  _clock = null;\n\n  /**\n   * @type {AnimationSource}\n   * @private\n   */\n  _animationSource = null;\n\n  /**\n   * @static\n   * @param {Element | string} mountTo Element or selector\n   * @param {Object} options\n   */\n  static create (mountTo, options = {}) {\n    const chart = new Telechart();\n\n    chart.setOptions( options );\n    chart.mount( resolveElement( mountTo ) );\n    chart.initialize();\n\n    chart.firstRender();\n\n    return chart;\n  }\n\n  /**\n   * @param {Object} options\n   */\n  setOptions (options = {}) {\n    this._options = options;\n  }\n\n  /**\n   * @param {Element} parent\n   */\n  mount (parent) {\n    const root = createElement('div', {\n      attrs: {\n        class: ROOT_CLASS_NAME\n      }\n    });\n\n    parent.appendChild( root );\n\n    this._rootElement = root;\n    this._renderer = new SvgRenderer( root );\n  }\n\n  /**\n   * Initialize the chart\n   */\n  initialize () {\n    this.setTheme( this._options.theme || ChartThemes.default );\n    this.setTitle( this._options.title );\n\n    // create components\n    this._createChart();\n    this._createNavigatorChart();\n    this._addEventsListeners();\n\n    // create animation loop\n    this._clock = new Clock();\n    this._animationSource = new AnimationSource( 60, 1 ); // fps, timeScale\n    this._animationSource.on(AnimationSourceEvents.UPDATE, deltaTime => {\n      this.update( deltaTime );\n    });\n\n    requestAnimationFrame(_ => {\n      this.animate();\n    });\n  }\n\n  /**\n   * Draws first frame\n   */\n  firstRender () {\n    this._chart.firstRender();\n    this._navigatorChart.firstRender();\n  }\n\n  /**\n   * Animation loop\n   */\n  animate () {\n    const deltaTime = this._clock.getDelta();\n    this._animationSource.update( deltaTime );\n\n    requestAnimationFrame(_ => this.animate());\n  }\n\n  /**\n   * Update loop\n   */\n  update (deltaTime) {\n    this._chart.update( deltaTime );\n    this._navigatorChart.update( deltaTime );\n  }\n\n  /**\n   * @param {string} themeName\n   */\n  setTheme (themeName) {\n    const rootElement = this._rootElement;\n\n    removeClass(\n      rootElement,\n      Object.keys( ChartThemes )\n        .map( interpolateThemeClass )\n    );\n\n    addClass(\n      rootElement,\n      interpolateThemeClass( themeName )\n    );\n\n    this._themeName = themeName;\n  }\n\n  /**\n   * @param {string} title\n   */\n  setTitle (title) {\n    this._title = title;\n\n    !this._titleElement\n      ? this._createTitle( title )\n      : this._updateTitle( title );\n  }\n\n  /**\n   * Destroys the chart instance\n   */\n  destroy () {\n    this._renderer && this._renderer.destroy();\n    this._rootElement = null;\n    this._renderer = null;\n  }\n\n  /*/!**\n   * @return {boolean}\n   *!/\n  get inWindowViewport () {\n    const windowHeight = getWindowHeight();\n    const windowTopLine = getDocumentScrollTop();\n    const windowBottomLine = windowHeight + windowTopLine;\n\n    const { top: chartTopLine } = getElementOffset( this._renderer.parentContainer );\n    const chartHeight = getElementHeight( this._renderer.parentContainer );\n    const chartBottomLine = chartTopLine + chartHeight;\n\n    return windowTopLine < chartTopLine\n      && windowBottomLine > chartTopLine\n      || windowTopLine < chartBottomLine\n      && windowBottomLine > chartBottomLine;\n  }*/\n\n  /**\n   * @return {string}\n   */\n  get themeName () {\n    return this._themeName;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _createTitle (title = this._options.title) {\n    if (!title) {\n      return;\n    }\n\n    const text = this._renderer.createText(title, {\n      class: 'telechart-title',\n      x: 16,\n      y: 36,\n      textAnchor: 'start',\n      style: cssText({\n        opacity: 0\n      })\n    });\n\n    setTimeout(_ => {\n      setAttributesNS(text, {\n        style: cssText({\n          opacity: 1\n        })\n      });\n    }, 200);\n\n    this._titleElement = text;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _updateTitle (title) {\n    if (!this._titleElement) {\n      return;\n    }\n    const tspan = this._titleElement.querySelector( 'tspan' );\n    tspan.textContent = title;\n  }\n\n  /**\n   * @private\n   */\n  _createChart () {\n    this._chart = new Chart(\n      this._renderer,\n      this._options\n    );\n\n    this._chart.initialize();\n  }\n\n  /**\n   * @private\n   */\n  _createNavigatorChart () {\n    this._navigatorChart = new NavigatorChart(\n      this._renderer,\n      this._options\n    );\n\n    this._navigatorChart.initialize();\n  }\n\n  /**\n   * @private\n   */\n  _addEventsListeners () {\n    this._chart.on(ChartEvents.SERIES_VISIBLE_CHANGE, line => {\n      this._navigatorChart.toggleSeries( line.label );\n    });\n\n    this._navigatorChart.on(NavigatorChartEvents.RANGE_CHANGED, range => {\n      this._chart.setNavigationRange( ...range );\n    });\n\n    this._navigatorChart.on(NavigatorChartEvents.ANIMATE_RANGE, range => {\n      this._chart.animateNavigationRangeTo( ...range );\n    });\n  }\n}\n","export * from './Telechart';\n"],"sourceRoot":""}