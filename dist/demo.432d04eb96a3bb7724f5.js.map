{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/index.js","webpack:///./src/utils/base.js","webpack:///./src/utils/text.js","webpack:///./src/utils/constants.js","webpack:///./src/utils/dom.js","webpack:///./src/utils/svg.js","webpack:///./src/utils/themes.js","webpack:///./src/lib/EventEmitter.js","webpack:///./src/core/SvgRenderer.js","webpack:///./src/core/chart/ChartTypes.js","webpack:///./src/core/series/Series.js","webpack:///./src/core/chart/Chart.js","webpack:///./src/Telechart.js","webpack:///./src/index.js","webpack:///./demo/highcharts-demo.js","webpack:///./demo/telechart-demo.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_constants__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__","_animation__WEBPACK_IMPORTED_MODULE_1__","_base__WEBPACK_IMPORTED_MODULE_2__","_dom__WEBPACK_IMPORTED_MODULE_4__","_text__WEBPACK_IMPORTED_MODULE_7__","_themes__WEBPACK_IMPORTED_MODULE_8__","objectEachKey","fn","arguments","length","undefined","keys","forEach","clampNumber","min","Infinity","max","_ref","Math","ensureNumber","Number","isNaN","capitalize","text","String","toUpperCase","substr","cssText","styleObject","reduce","css","prop","concat","camelToKebabCase","toLowerCase","replace","TimeRanges","second","minute","hour","day","week","month","year","createElement","tagName","options","children","element","document","createElementNS","attrs","useNS","setAttributesNS","attrsNS","setAttributes","Array","isArray","node","createTextNode","appendChild","resolveElement","elementOrSelector","querySelector","getElementWidth","innerWidth","clientWidth","camelCaseAttrWhiteList","attr","includes","setAttribute","setAttributeNS","hasClass","className","classList","contains","RegExp","test","addClass","_element$classList","classNames","add","apply","_toConsumableArray","trim","removeClass","_element$classList2","remove","existingClasses","split","classesToDelete","Set","has","ROOT_CLASS_NAME","interpolateThemeClass","ChartThemes","themeName","default","dark","EventEmitter","_classCallCheck","this","eventName","_len","args","_key","_fireEvent","cb","context","addEventListener","addEventListenerOnce","_subscribeEvent","_this","listener","_len2","_key2","removeEventListener","_eventListeners","listenerIndex","findIndex","_slicedToArray","splice","_allocateEvent","push","eventListeners","_len3","_key3","_eventListeners$i","telechartTitle","TELECHART_NAME","TELECHART_VERSION","TELECHART_AUTHOR","INTERNAL_AUTOINCREMENT","SvgRenderer","_EventEmitter","contextElement","SvgRenderer_classCallCheck","_getPrototypeOf","SvgRenderer_defineProperty","_assertThisInitialized","_parentContainer","_init","_inherits","parent","_svgContainer","group","NS","tspan","textElement","defs","pathText","assign","pathElement","updatingAttrs","_detachEvents","_clearParentContainer","_isInitialized","_updateDimensions","_createSvgContainer","_insertSvgContainer","createDesc","_attachEvents","Error","xmlns","version","width","_width","height","_height","viewBox","class","_minWidth","_minHeight","innerHTML","ev","emit","_attachResizeListener","_detachResizeListener","_resizeListener","_onResize","window","_id","join","ChartTypes","Series","renderer","settings","Series_classCallCheck","Series_getPrototypeOf","Series_defineProperty","Series_assertThisInitialized","_renderer","_settings","_parseSettings","initialize","Series_inherits","deltaTimeMs","_pathText","_pathElement","_this$_settings","xAxis","yAxis","label","color","type","_xAxis","_yAxis","_label","_color","_name","_seriesOptions","Chart","Chart_classCallCheck","Chart_getPrototypeOf","Chart_defineProperty","Chart_assertThisInitialized","_options","_initialize","Chart_inherits","minX","maxX","actualMinX","actualMaxX","_range","_createSeries","series","_ref$seriesOptions","seriesOptions","columns","types","colors","names","xAxisIndex","column","slice","yAxes","shift","_series","twoWeeks","setRange","Telechart","Telechart_classCallCheck","Telechart_defineProperty","mountTo","chart","setOptions","mount","root","_rootElement","setTheme","theme","setTitle","title","_createChart","renderRoot","svgContainer","map","_themeName","_title","_titleElement","_updateTitle","_createTitle","destroy","createText","x","y","textAnchor","style","opacity","setTimeout","_","_chart","Telechart_Telechart","script","async","onload","Highcharts","stockChart","rangeSelector","selected","src","head","sample","sourceData","yColumns","filter","chartLabel","xColumn","data","index","tooltip","valueDecimals","chartData","console","log","container","grouping","pixels"],"mappings":"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","file":"demo.432d04eb96a3bb7724f5.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","export * from './constants';\nexport * from './animation';\nexport * from './base';\nexport * from './browser';\nexport * from './dom';\nexport * from './events';\nexport * from './svg';\nexport * from './text';\nexport * from './themes';\nexport * from './algorithms';\n","/**\n * @param {*} object\n * @param {Function} fn\n */\nexport function objectEachKey (object, fn = () => {}) {\n  Object.keys( object ).forEach( fn );\n}\n\n/**\n * @param {*} object\n * @param {Function} fn\n * @return {*[]}\n */\nexport function objectMapKey (object, fn = () => {}) {\n  return Object.keys( object ).map( fn );\n}\n\n/**\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nexport function clampNumber (value, min = -Infinity, max = Infinity) {\n  if (min > max) {\n    [ min, max ] = [ max, min ];\n  }\n  return Math.min(\n    Math.max(ensureNumber(value), min),\n    max\n  );\n}\n\n/**\n * @param {*} value\n * @return {number}\n */\nexport function ensureNumber (value) {\n  value = Number(value);\n  if (Number.isNaN(value)) {\n    return 0;\n  }\n  return value;\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nexport function isObject (value) {\n  return typeof value === 'object' && value !== null;\n}\n","/**\n * @param {string} text\n * @return {string}\n */\nexport function capitalize (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return text[ 0 ].toUpperCase() + text.substr(1);\n}\n\n/**\n * @param {Object} styleObject\n * @returns {string}\n */\nexport function cssText (styleObject) {\n  return Object.keys( styleObject ).reduce((css, prop) => {\n    return `${css ? css + ' ' : ''}${camelToKebabCase( prop )}: ${styleObject[ prop ]};`;\n  }, '');\n}\n\n/**\n * @param {string} text\n * @returns {string}\n */\nexport function camelToKebabCase (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return (\n    text[ 0 ].toLowerCase() + text.substr( 1 )\n  ).replace( /([A-Z])/g, '-$1' ).toLowerCase();\n}\n","const hour = 3600 * 1000;\n\n/**\n * @type {{second: number, minute: number, hour: number, day: number, week: number, month: number, year: number}}\n */\nexport const TimeRanges = {\n  second: 1000,\n  minute: hour / 60,\n  hour,\n  day: hour * 24,\n  week: hour * 24 * 7,\n  month: hour * 24 * 30, // rude\n  year: hour * 24 * 365\n};\n","import { objectEachKey } from \"./base\";\nimport { camelToKebabCase } from './text';\n\n/**\n * @param {string} tagName\n * @param {Object} options\n * @param {Array|*} children\n * @param {string|*} ns\n * @return {Element}\n */\nexport function createElement (tagName, options = {}, children = [], ns = null) {\n  const element = !ns\n    ? document.createElement( tagName )\n    : document.createElementNS( ns, tagName );\n\n  if (options.attrs) {\n    !options.useNS\n      ? setAttributes( element, options.attrs )\n      : setAttributesNS( element, options.attrs, options.attrsNS || null );\n  }\n\n  if (children || Array.isArray( children )) {\n    children = [].concat( children );\n    children.forEach(node => {\n      if (typeof node === 'string') {\n        node = document.createTextNode( node );\n      }\n      element.appendChild( node );\n    });\n  }\n\n  return element;\n}\n\n/**\n * @param {Element|string} elementOrSelector\n * @return {Element | null}\n */\nexport function resolveElement (elementOrSelector) {\n  if (typeof elementOrSelector !== 'string') {\n    return elementOrSelector;\n  }\n  return document.querySelector( elementOrSelector );\n}\n\n/**\n * @param {Element} element\n * @return {{top: number, left: number}}\n */\nexport function getElementOffset (element) {\n  if (!element) {\n    return { top: 0, left: 0 };\n  }\n\n  // Return zeros for disconnected and hidden (display: none) elements\n  // Support: IE <= 11 only\n  // Running getBoundingClientRect on a\n  // disconnected node in IE throws an error\n  if (element.getClientRects && !element.getClientRects().length) {\n    return { top: 0, left: 0 };\n  }\n\n  // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n  const rect = element.getBoundingClientRect();\n  const win = element.ownerDocument.defaultView;\n  return {\n    top: rect.top + win.pageYOffset,\n    left: rect.left + win.pageXOffset\n  };\n}\n\n/**\n * @param {Element} targetElement\n * @param {Element} relativeElement\n * @return {{ top: number, left: number }}\n */\nexport function getElementRelativeOffset (targetElement, relativeElement) {\n  const targetOffset = getElementOffset(targetElement);\n  const relativeOffset = getElementOffset(relativeElement);\n\n  return {\n    top: targetOffset.top - relativeOffset.top + relativeElement.scrollTop,\n    left: targetOffset.left - relativeOffset.left + relativeElement.scrollLeft\n  };\n}\n\n/**\n * @returns {number}\n */\nexport function getDocumentHeight () {\n  return Math.max(\n    document.body.scrollHeight,\n    document.documentElement.scrollHeight,\n    document.body.offsetHeight,\n    document.documentElement.offsetHeight,\n    document.body.clientHeight,\n    document.documentElement.clientHeight\n  );\n}\n\n/**\n * @returns {number}\n */\nexport function getWindowHeight () {\n  return window.innerHeight ||\n    (document.documentElement || document.body).clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementHeight (element) {\n  return element.innerHeight || element.clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementWidth (element) {\n  return element.innerWidth || element.clientWidth;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollHeight (element) {\n  return Math.max(\n    element.scrollHeight,\n    element.offsetHeight,\n    element.clientHeight\n  );\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollWidth (element) {\n  return Math.max(\n    element.scrollWidth,\n    element.offsetWidth,\n    element.clientWidth\n  );\n}\n\nconst camelCaseAttrWhiteList = [\n  'viewBox'\n];\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n */\nexport function setAttributes (element, attrs = {}) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttribute( attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n * @param {string | *} ns\n */\nexport function setAttributesNS (element, attrs = {}, ns = null) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttributeNS( ns, attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {string} className\n */\nexport function hasClass (element, className) {\n  if (element.classList) {\n    return element.classList.contains( className );\n  }\n  return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test( element.className );\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function addClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    return element.classList.add( ...classNames );\n  }\n\n  let className = element.className;\n\n  for (let i = 0; i < classNames.length; ++i) {\n    if (!hasClass( element, classNames[ i ] )) {\n      className += ` ${classNames[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function removeClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    return element.classList.remove( ...classNames );\n  }\n\n  let existingClasses = element.className.split( ' ' );\n  let classesToDelete = new Set( classNames );\n  let className = '';\n\n  for (let i = 0; i < existingClasses.length; ++i) {\n    if (!classesToDelete.has( existingClasses[ i ] )) {\n      className += ` ${existingClasses[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n","import { ensureNumber } from \"./index\";\n\n/**\n * Returns path segments\n *\n * @param {string} pathText\n * @return {Array<Array<Array<number>>>}\n */\nexport function parseSimplePathText (pathText) {\n  const parseRegex = /([ML])\\s?(-?\\d+\\.?(?:\\d+)?)\\s(-?\\d+\\.?(?:\\d+)?)/gi;\n\n  const segments = [];\n  let m;\n\n  while ((m = parseRegex.exec( pathText )) !== null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (m.index === parseRegex.lastIndex) {\n      parseRegex.lastIndex++;\n    }\n\n    const type = m[ 1 ];\n    const x = ensureNumber( m[2] );\n    const y = ensureNumber( m[3] );\n\n    if (type === 'm' || !segments.length) {\n      segments.push([ [ x, y ] ]);\n    } else {\n      const lastSegment = segments[ segments.length - 1 ];\n      lastSegment.push([ x, y ]);\n    }\n  }\n\n  return segments;\n}\n\n/**\n * @param {Array<Array<Array<number>>>} segments\n * @return {string}\n */\nexport function segmentsToPathText (segments) {\n  let result = '';\n\n  for (let i = 0; i < segments.length; ++i) {\n    result += 'M ';\n    for (let j = 0; j < segments[ i ].length; ++j) {\n      const coordinates = segments[ i ][ j ];\n      if (j !== 0) {\n        result += 'L ';\n      }\n      result += coordinates.join(' ') + ' ';\n    }\n  }\n\n  return result;\n}\n","export const ROOT_CLASS_NAME = 'telechart-root';\n\n/**\n * @param {string} themeName\n * @returns {string}\n */\nexport function interpolateThemeClass (themeName) {\n  return `${ROOT_CLASS_NAME}_theme_${themeName}`;\n}\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemes = {\n  default: 'default',\n  dark: 'dark'\n};\n","/**\n * Simple event emitter for better performance and app size\n *\n * @author Alexander Belov\n */\nexport class EventEmitter {\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _eventListeners = {};\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   */\n  emit (eventName, ...args) {\n    this._fireEvent( eventName, ...args );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  on (eventName, cb, context = null) {\n    this.addEventListener( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  once (eventName, cb, context = null) {\n    this.addEventListenerOnce( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListener (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    this._subscribeEvent( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListenerOnce (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    const listener = (...args) => {\n      cb.apply( context, args );\n      this.removeEventListener( eventName, listener );\n    };\n\n    this.addEventListener( eventName, listener );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} listener\n   */\n  removeEventListener (eventName, listener) {\n    if (!this._eventListeners[ eventName ]) {\n      return;\n    }\n\n    const listenerIndex = this._eventListeners[ eventName ].findIndex(([ cb ]) => {\n      return listener === cb;\n    });\n\n    if (listenerIndex < 0) {\n      return;\n    }\n\n    this._eventListeners[ eventName ].splice( listenerIndex, 1 );\n  }\n\n  /**\n   * @param {string | *} eventName\n   */\n  removeAllListeners (eventName = null) {\n    if (!eventName) {\n      this._eventListeners = {};\n    } else if (this._eventListeners[ eventName ]) {\n      this._eventListeners[ eventName ] = null;\n      delete this._eventListeners[ eventName ];\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @private\n   */\n  _allocateEvent (eventName) {\n    this._eventListeners[ eventName ] = this._eventListeners[ eventName ] || []\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  _subscribeEvent (eventName, cb, context) {\n    this._allocateEvent( eventName );\n    this._eventListeners[ eventName ].push([ cb, context ]);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   * @private\n   */\n  _fireEvent (eventName, ...args) {\n    const eventListeners = this._eventListeners[ eventName ] || [];\n\n    for (let i = 0; i < eventListeners.length; ++i) {\n      const [ cb, context ] = eventListeners[ i ];\n      cb.apply( context, args );\n    }\n  }\n}\n","import { EventEmitter } from \"../lib/EventEmitter\";\nimport {\n  ROOT_CLASS_NAME,\n  capitalize,\n  clampNumber,\n  createElement,\n  getElementWidth,\n  resolveElement,\n  setAttributes,\n  setAttributesNS\n} from \"../utils\";\n\nconst telechartTitle = `${capitalize( TELECHART_NAME )} ${TELECHART_VERSION} (c) ${TELECHART_AUTHOR}`;\n\nlet INTERNAL_AUTOINCREMENT = 1;\n\nexport class SvgRenderer extends EventEmitter {\n\n  static NS = 'http://www.w3.org/2000/svg';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = INTERNAL_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parentContainer = null;\n\n  /**\n   * @type {SVGElement}\n   * @private\n   */\n  _svgContainer = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minHeight = 400;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minWidth = 300;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _width = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _isInitialized = false;\n\n  /**\n   * @param {Element|string} contextElement\n   */\n  constructor (contextElement) {\n    super();\n\n    this._parentContainer = resolveElement( contextElement );\n    this._init();\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>} children\n   * @param {Element} parent\n   * @return {Element}\n   */\n  createGroup (attrs = {}, children = [], parent = this._svgContainer) {\n    const group = createElement('g', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Element} parent\n   * @return {SVGDescElement}\n   */\n  createDesc (text = '', parent = this._svgContainer) {\n    const group = createElement('desc', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGTextElement}\n   */\n  createText (text = '', attrs = {}, parent = this._svgContainer) {\n    const tspan = createElement('tspan', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n\n    const textElement = createElement('text', {\n      useNS: true,\n      attrs\n    }, tspan, SvgRenderer.NS);\n\n    parent.appendChild( textElement );\n\n    return textElement;\n  }\n\n  /**\n   * @param {Element[]} defs\n   * @param {Element} parent\n   * @return {SVGDefsElement}\n   */\n  createDefs (defs = [], parent = this._svgContainer) {\n    defs = [].concat( defs );\n\n    const element = createElement('defs', {\n      useNS: true\n    }, defs, SvgRenderer.NS);\n    parent.appendChild( element );\n\n    return element;\n  }\n\n  /**\n   * @param {string} pathText\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGPathElement}\n   */\n  createPath (pathText, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, { d: pathText });\n\n    const pathElement = createElement('path', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n    parent.appendChild( pathElement );\n\n    return pathElement;\n  }\n\n  /**\n   * @param {SVGPathElement} pathElement\n   * @param {Object} updatingAttrs\n   */\n  updatePath (pathElement, pathText, updatingAttrs = {}) {\n    updatingAttrs.d = pathText;\n    setAttributesNS( pathElement, updatingAttrs, null );\n  }\n\n  /**\n   * Destroy the renderer\n   */\n  destroy () {\n    this._detachEvents();\n    this._clearParentContainer();\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {Element}\n   */\n  get parentContainer () {\n    return this._parentContainer;\n  }\n\n  /**\n   * @return {SVGElement}\n   */\n  get svgContainer () {\n    return this._svgContainer;\n  }\n\n  /**\n   * @return {string}\n   */\n  get viewBox () {\n    return [ 0, 0, this._width, this._height ].join( ' ' );\n  }\n\n  /**\n   * @private\n   */\n  _init () {\n    if (this._isInitialized) {\n      return;\n    }\n\n    this._updateDimensions();\n    this._svgContainer = this._createSvgContainer();\n    this._insertSvgContainer();\n\n    this.createDesc( telechartTitle );\n\n    this._attachEvents();\n\n    this._isInitialized = true;\n  }\n\n  /**\n   * @return {Element}\n   * @private\n   */\n  _createSvgContainer () {\n    const parentContainer = this._parentContainer;\n\n    if (!parentContainer) {\n      throw new Error( 'Parent container is not provided' );\n    }\n\n    return createElement('svg', {\n      useNS: false,\n      attrs: {\n        xmlns: SvgRenderer.NS,\n        version: '1.1',\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox,\n        class: ROOT_CLASS_NAME\n      }\n    }, [], SvgRenderer.NS);\n  }\n\n  /**\n   * @private\n   */\n  _insertSvgContainer () {\n    this._clearParentContainer();\n    this._parentContainer.appendChild( this._svgContainer );\n  }\n\n  /**\n   * @private\n   */\n  _updateDimensions () {\n    this._width = clampNumber(\n      getElementWidth( this._parentContainer ),\n      this._minWidth\n    );\n    this._height = this._minHeight;\n\n    if (this._svgContainer) {\n      setAttributes(this._svgContainer, {\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  _clearParentContainer () {\n    // clears the child content\n    this._parentContainer.innerHTML = '';\n  }\n\n  /**\n   * @private\n   */\n  _onResize (ev) {\n    this.emit( 'resize', ev );\n    this._updateDimensions();\n  }\n\n  /**\n   * @private\n   */\n  _attachEvents () {\n    this._attachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _detachEvents () {\n    this._detachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _attachResizeListener () {\n    if (this._resizeListener) {\n      this._detachResizeListener();\n    }\n\n    this._resizeListener = this._onResize.bind( this );\n    window.addEventListener( 'resize', this._resizeListener );\n  }\n\n  /**\n   * @private\n   */\n  _detachResizeListener () {\n    if (!this._resizeListener) {\n      return;\n    }\n\n    window.removeEventListener( 'resize', this._resizeListener );\n  }\n}\n","/**\n * @type {{x: string, line: string}}\n */\nexport const ChartTypes = {\n  x: 'x',\n  line: 'line'\n};\n","import { EventEmitter } from '../../lib/EventEmitter';\n\nexport class Series extends EventEmitter {\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _pathText = null;\n\n  /**\n   * @type {SVGPathElement}\n   * @private\n   */\n  _pathElement = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _yAxis = [];\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _name = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _label = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _color = '#31a8dc';\n\n  /**\n   * @type {Array<Point>}\n   * @private\n   */\n  _points = [];\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  _visiblePoints = [];\n\n  /**\n   * @type {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   * @private\n   */\n  _settings = {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _seriesOptions = {};\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {*} settings\n   */\n  constructor (renderer, settings = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._settings = settings;\n    this._parseSettings();\n\n    this.initialize();\n  }\n\n  /**\n   * Initializes series with options\n   */\n  initialize () {\n    // console.log( this._settings, this._xAxis, this._yAxis );\n  }\n\n  /**\n   * @param {number} deltaTimeMs\n   */\n  update (deltaTimeMs) {\n  }\n\n  /**\n   * @param {string} pathText\n   */\n  setPathText (pathText) {\n    this._pathText = pathText;\n  }\n\n  /**\n   * @param {SVGPathElement} pathElement\n   */\n  setPathElement (pathElement) {\n    this._pathElement = pathElement;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get xAxis () {\n    return this._xAxis;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get yAxis () {\n    return this._yAxis;\n  }\n\n  /**\n   * @return {string}\n   */\n  get pathText () {\n    return this._pathText;\n  }\n\n  /**\n   * @return {SVGPathElement}\n   */\n  get pathElement () {\n    return this._pathElement;\n  }\n\n  /**\n   * @return {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   */\n  get settings () {\n    return this._settings;\n  }\n\n  /**\n   * @private\n   */\n  _parseSettings () {\n    const {\n      xAxis, yAxis,\n      label, type,\n      color, name,\n      options\n    } = this._settings;\n\n    this._xAxis = xAxis;\n    this._yAxis = yAxis;\n    this._label = label;\n    this._color = color;\n    this._name = name;\n\n    this._seriesOptions = options;\n  }\n}\n","import { EventEmitter } from '../../lib/EventEmitter';\nimport { ChartTypes } from './ChartTypes';\nimport { Series } from '../series/Series';\nimport { clampNumber, TimeRanges } from '../../utils';\n\nexport class Chart extends EventEmitter {\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = 250;\n\n  /**\n   * @type {Array<number>}\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<Series>}\n   * @private\n   */\n  _series = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _range = [];\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Object} options\n   */\n  constructor (renderer, options = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._options = options;\n\n    this._initialize();\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   */\n  setRange (minX, maxX) {\n    const xAxis = this._xAxis;\n\n    const actualMinX = xAxis[ 0 ];\n    const actualMaxX = xAxis[ xAxis.length - 1 ];\n\n    minX = Math.max( minX, actualMinX );\n    maxX = Math.max( maxX, actualMaxX );\n\n    this._range = [ minX, maxX ];\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get range () {\n    return this._range;\n  }\n\n  /**\n   * @private\n   */\n  _initialize () {\n    this._createSeries();\n  }\n\n  /**\n   * @private\n   */\n  _createSeries () {\n    const {\n      series,\n      seriesOptions: options = {}\n    } = this._options || {};\n\n    const {\n      columns,\n      types,\n      colors,\n      names\n    } = series;\n\n    const xAxisIndex = columns.findIndex(column => {\n      return types[ column[ 0 ] ] === ChartTypes.x;\n    });\n    const xAxis = this._xAxis = columns[ xAxisIndex ].slice( 1 );\n\n    let yAxes = columns.slice(); // copy an array to change later\n    yAxes.splice( xAxisIndex, 1 ); // remove x axis from the array\n\n    for (let i = 0; i < yAxes.length; ++i) {\n      const yAxis = yAxes[ i ];\n      const label = yAxis.shift();\n      const type = types[ label ];\n      const color = colors[ label ];\n      const name = names[ label ];\n\n      const settings = {\n        xAxis, yAxis,\n        label, type,\n        color, name,\n        options\n      };\n\n      this._series.push(\n        new Series( this._renderer, settings )\n      );\n    }\n\n    const maxX = xAxis[ xAxis.length - 1 ];\n    const twoWeeks = 2 * TimeRanges.week;\n\n    // set initial range\n    this.setRange( maxX - twoWeeks, maxX );\n  }\n}\n","import './style/telechart.scss';\nimport {\n  addClass,\n  interpolateThemeClass,\n  removeClass,\n  resolveElement,\n  ChartThemes,\n  setAttributesNS,\n  cssText\n} from \"./utils\";\nimport { SvgRenderer } from \"./core/SvgRenderer\";\nimport { Chart } from './core/chart/Chart';\n\nexport class Telechart {\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _rootElement = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _themeName = ChartThemes.default.name;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _title = '';\n\n  /**\n   * @type {SVGTextElement}\n   * @private\n   */\n  _titleElement = null;\n\n  /**\n   * @static\n   * @param {Element | string} mountTo Element or selector\n   * @param {Object} options\n   */\n  static create (mountTo, options = {}) {\n    const chart = new Telechart();\n\n    chart.setOptions( options );\n    chart.mount( resolveElement( mountTo ) );\n    chart.initialize();\n\n    return chart;\n  }\n\n  /**\n   * @param {Object} options\n   */\n  setOptions (options = {}) {\n    this._options = options;\n  }\n\n  /**\n   * @param {Element} root\n   */\n  mount (root) {\n    this._rootElement = root;\n    this._renderer = new SvgRenderer( root );\n  }\n\n  /**\n   * Initialize the chart\n   */\n  initialize () {\n    this.setTheme( this._options.theme || ChartThemes.default );\n    this.setTitle( this._options.title );\n\n    this._createChart();\n\n    // todo:\n    // createNavigationChart\n    // createLabels\n  }\n\n  /**\n   * @param {string} themeName\n   */\n  setTheme (themeName) {\n    const renderRoot = this._renderer.svgContainer;\n\n    removeClass(\n      renderRoot,\n      Object.keys( ChartThemes )\n        .map( interpolateThemeClass )\n    );\n\n    addClass(\n      renderRoot,\n      interpolateThemeClass( themeName )\n    );\n\n    this._themeName = themeName;\n  }\n\n  /**\n   * @param {string} title\n   */\n  setTitle (title) {\n    this._title = title;\n\n    !this._titleElement\n      ? this._createTitle( title )\n      : this._updateTitle( title );\n  }\n\n  /**\n   * Destroys the chart instance\n   */\n  destroy () {\n    this._renderer && this._renderer.destroy();\n    this._rootElement = null;\n    this._renderer = null;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _createTitle (title = this._options.title) {\n    if (!title) {\n      return;\n    }\n\n    const text = this._renderer.createText(title, {\n      class: 'telechart-title',\n      x: 16,\n      y: 36,\n      textAnchor: 'start',\n      style: cssText({\n        opacity: 0\n      })\n    });\n\n    setTimeout(_ => {\n      setAttributesNS(text, {\n        style: cssText({\n          opacity: 1\n        })\n      });\n    }, 200);\n\n    this._titleElement = text;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _updateTitle (title) {\n    if (!this._titleElement) {\n      return;\n    }\n    const tspan = this._titleElement.querySelector( 'tspan' );\n    tspan.innerHTML = title;\n  }\n\n  /**\n   * @private\n   */\n  _createChart () {\n    this._chart = new Chart(\n      this._renderer,\n      this._options\n    );\n  }\n}\n","export * from './Telechart';\n","import sourceData from '../samples/chart_data.json';\n\nconst script = document.createElement('script');\n\n// script loader\nscript.async = true;\nscript.onload = initDemo;\nscript.src = 'https://code.highcharts.com/stock/highstock.js';\ndocument.head.appendChild( script );\n\nconst sample = sourceData[ 3 ];\nconst columns = sample.columns;\n\nconst yColumns = columns.filter(column => {\n  const chartLabel = column[ 0 ];\n  return sample.types[ chartLabel ] === 'line';\n});\n\nconst xColumn = columns.filter(column => {\n  const chartLabel = column[ 0 ];\n  return sample.types[ chartLabel ] === 'x';\n})[0].slice( 1 );\n\nconst series = yColumns.map(column => {\n  const chartLabel = column[ 0 ];\n  const chartType = sample.types[ chartLabel ];\n  const chartName = sample.names[ chartLabel ];\n  const chartData = column.slice( 1 ).map((value, index) => {\n    return [\n      xColumn[ index ],\n      value\n    ];\n  });\n\n  return {\n    name: chartName,\n    data: chartData,\n    tooltip: {\n      valueDecimals: 2\n    }\n  };\n});\n\nfunction initDemo () {\n  Highcharts.stockChart('highchart', {\n    rangeSelector: {\n      selected: 1\n    },\n\n    title: {\n      text: 'Followers'\n    },\n\n    series\n  });\n}\n","import sourceData from '../samples/chart_data.json';\nimport { Telechart } from '../src';\nimport { ChartThemes } from '../src/utils';\n\nconst chartData = sourceData[ 0 ];\n\nconsole.log( chartData );\n\nconst container = document.querySelector( '#telechart' );\n\nconst chart = Telechart.create(container, {\n  title: 'Followers',\n  series: {\n    columns: chartData.columns,\n    names: chartData.names,\n    types: chartData.types,\n    colors: chartData.colors,\n  },\n  seriesOptions: {\n    grouping: {\n      pixels: 2\n    }\n  }\n});\n\nsetTimeout(_ => {\n  chart.setTheme( ChartThemes.dark );\n  chart.setTitle( 'Followers Dark' );\n\n  console.log( chart );\n}, 5000);\n"],"sourceRoot":""}