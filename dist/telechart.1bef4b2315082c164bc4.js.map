{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/base.js","webpack:///./src/utils/text.js","webpack:///./src/utils/dom.js","webpack:///./src/utils/themes.js","webpack:///./src/utils/algorithms.js","webpack:///./src/utils/index.js","webpack:///./src/utils/animation.js","webpack:///./src/core/misc/EventEmitter.js","webpack:///./src/core/animation/AnimationSource.js","webpack:///./src/core/SvgRenderer.js","webpack:///./src/core/chart/ChartTypes.js","webpack:///./src/core/point/Point.js","webpack:///./src/core/series/Series.js","webpack:///./src/core/chart/Chart.js","webpack:///./src/core/misc/Clock.js","webpack:///./src/Telechart.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","objectEachKey","fn","arguments","length","undefined","keys","forEach","clampNumber","min","Infinity","max","_ref","Math","ensureNumber","Number","isNaN","isDate","Date","valueOf","capitalize","text","String","toUpperCase","substr","cssText","styleObject","reduce","css","prop","concat","camelToKebabCase","toLowerCase","replace","parseQueryString","href","queryString","split","slice","map","part","keyValue","result","obj","assign","createElement","tagName","options","children","element","document","createElementNS","attrs","useNS","setAttributesNS","attrsNS","setAttributes","Array","isArray","node","createTextNode","appendChild","resolveElement","elementOrSelector","querySelector","getElementWidth","innerWidth","clientWidth","camelCaseAttrWhiteList","attr","includes","setAttribute","setAttributeNS","hasClass","className","classList","contains","RegExp","test","addClass","_element$classList","classNames","add","apply","_toConsumableArray","trim","removeClass","_element$classList2","remove","existingClasses","classesToDelete","Set","has","ROOT_CLASS_NAME","interpolateThemeClass","themeName","ChartThemes","default","dark","arrayMinMax","array","_arrayMinMaxIndexes2","_slicedToArray","startIndex","endIndex","minIndex","maxIndex","arrayMinMaxIndexes","binarySearchIndexes","order","left","right","mid","__webpack_exports__","EventEmitter","_classCallCheck","this","eventName","_len","args","_key","_fireEvent","cb","context","addEventListener","addEventListenerOnce","_subscribeEvent","_this","listener","_len2","_key2","removeEventListener","_eventListeners","listenerIndex","findIndex","splice","_allocateEvent","push","eventListeners","_len3","_key3","_eventListeners$i","AnimationSourceEvents","AnimationSource","_EventEmitter","updatesPerSecond","timeScale","AnimationSource_classCallCheck","_getPrototypeOf","AnimationSource_defineProperty","_assertThisInitialized","_updatesPerSecond","_updateEach","FRAMES_PER_SECOND","_timeScale","_inherits","deltaTime","_paused","_timeElapsed","_updateInvokes","_callUpdate","_lastUpdateAt","removeAllListeners","emit","set","telechartTitle","TELECHART_NAME","TELECHART_VERSION","TELECHART_AUTHOR","INTERNAL_AUTOINCREMENT","SvgRenderer","contextElement","SvgRenderer_classCallCheck","SvgRenderer_getPrototypeOf","SvgRenderer_defineProperty","SvgRenderer_assertThisInitialized","_parentContainer","_init","SvgRenderer_inherits","parent","_svgContainer","group","NS","tspan","textElement","defs","pathText","pathElement","updatingAttrs","width","height","rectElement","_detachEvents","_clearParentContainer","_isInitialized","_updateDimensions","_createSvgContainer","_insertSvgContainer","createDesc","_attachEvents","Error","xmlns","version","_width","_height","viewBox","class","_minWidth","_minHeight","innerHTML","ev","_attachResizeListener","_detachResizeListener","_resizeListener","_onResize","window","_id","join","ChartTypes","POINT_AUTOINCREMENT","Point","x","y","Point_classCallCheck","Point_defineProperty","_x","_y","pointType","_type","setX","setY","addX","addY","svgX","_svgX","svgY","_svgY","Series","renderer","settings","Series_classCallCheck","Series_getPrototypeOf","Series_defineProperty","Series_assertThisInitialized","_renderer","_parent","_settings","_parseSettings","initialize","Series_inherits","_createPoints","_updateGlobalExtremes","_pathElement","_pathText","_visible","setInvisible","setVisible","range","rangeIndexes","_viewportRange","_viewportRangeIndexes","_updateLocalExtremes","_this$_viewportRangeI","Series_slicedToArray","_viewportPoints","_points","currentYScale","desiredYScale","_currentYScale","_localYScale","_this$_settings","xAxis","yAxis","label","color","type","_xAxis","_yAxis","_label","_color","_name","_seriesOptions","_arrayMinMax2","minValue","maxValue","_globalMinY","_globalMaxY","_this$_viewportRangeI2","rangeStartIndex","rangeEndIndex","_arrayMinMax4","_localMinY","_localMaxY","Chart","Chart_classCallCheck","Chart_getPrototypeOf","Chart_defineProperty","Chart_assertThisInitialized","_options","_initialize","Chart_inherits","_eachSeries","line","firstRender","minX","maxX","_this2","actualMinX","actualMaxX","getTime","_updateViewportIndexes","setViewportRange","updateViewportPoints","_updateExtremes","_updateSeriesScale","_createSeriesGroup","_createSeries","_seriesGroup","createGroup","transform","_this3","data","series","_ref$seriesOptions","seriesOptions","columns","types","colors","names","xAxisIndex","column","yAxes","_loop","shift","on","_","_onSeriesVisibleChange","_series","initialViewport","floor","setRange","_this$_viewportRange","Chart_slicedToArray","rangeStart","rangeEnd","_binarySearchIndexes2","minUpperIndex","_binarySearchIndexes4","maxLowerIndex","localMinY","localMaxY","globalMinY","globalMaxY","isVisible","_computeYScale","_this4","setScale","globalHeight","globalExtremeDifference","localHeight","localExtremeDifference","Clock","Clock_classCallCheck","_lastUpdateMs","now","delta","performance","Telechart","Telechart_classCallCheck","Telechart_defineProperty","mountTo","chart","setOptions","mount","root","_rootElement","setTheme","theme","setTitle","title","_createChart","_clock","_animationSource","update","requestAnimationFrame","animate","_chart","getDelta","rootElement","_themeName","_title","_titleElement","_updateTitle","_createTitle","destroy","createText","textAnchor","style","opacity","setTimeout","Telechart_Telechart"],"mappings":"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","file":"telechart.1bef4b2315082c164bc4.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * @param {*} object\n * @param {Function} fn\n */\nexport function objectEachKey (object, fn = () => {}) {\n  Object.keys( object ).forEach( fn );\n}\n\n/**\n * @param {*} object\n * @param {Function} fn\n * @return {*[]}\n */\nexport function objectMapKey (object, fn = () => {}) {\n  return Object.keys( object ).map( fn );\n}\n\n/**\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nexport function clampNumber (value, min = -Infinity, max = Infinity) {\n  if (min > max) {\n    [ min, max ] = [ max, min ];\n  }\n  return Math.min(\n    Math.max(ensureNumber(value), min),\n    max\n  );\n}\n\n/**\n * @param {*} value\n * @return {number}\n */\nexport function ensureNumber (value) {\n  value = Number(value);\n  if (Number.isNaN(value)) {\n    return 0;\n  }\n  return value;\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nexport function isObject (value) {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * @param {Date|*} value\n * @return {boolean}\n */\nexport function isDate (value) {\n  return value instanceof Date && !isNaN( value.valueOf() );\n}\n","/**\n * @param {string} text\n * @return {string}\n */\nexport function capitalize (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return text[ 0 ].toUpperCase() + text.substr(1);\n}\n\n/**\n * @param {Object} styleObject\n * @returns {string}\n */\nexport function cssText (styleObject) {\n  return Object.keys( styleObject ).reduce((css, prop) => {\n    return `${css ? css + ' ' : ''}${camelToKebabCase( prop )}: ${styleObject[ prop ]};`;\n  }, '');\n}\n\n/**\n * @param {string} text\n * @returns {string}\n */\nexport function camelToKebabCase (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return (\n    text[ 0 ].toLowerCase() + text.substr( 1 )\n  ).replace( /([A-Z])/g, '-$1' ).toLowerCase();\n}\n\n/**\n * @param {string} href\n * @return {*}\n */\nexport function parseQueryString (href) {\n  const queryString = href.split('?').slice(1);\n  if (!queryString.length) {\n    return {};\n  }\n\n  return queryString[ 0 ].split( '&' ).map(part => {\n    const keyValue = part.split( '=' );\n    return {\n      [keyValue[ 0 ]]: keyValue[ 1 ]\n    };\n  }).reduce((result, obj) => {\n    return Object.assign(result, obj);\n  })\n}\n","import { objectEachKey } from \"./base\";\nimport { camelToKebabCase } from './text';\n\n/**\n * @param {string} tagName\n * @param {Object} options\n * @param {Array|*} children\n * @param {string|*} ns\n * @return {Element}\n */\nexport function createElement (tagName, options = {}, children = [], ns = null) {\n  const element = !ns\n    ? document.createElement( tagName )\n    : document.createElementNS( ns, tagName );\n\n  if (options.attrs) {\n    !options.useNS\n      ? setAttributes( element, options.attrs )\n      : setAttributesNS( element, options.attrs, options.attrsNS || null );\n  }\n\n  if (children || Array.isArray( children )) {\n    children = [].concat( children );\n    children.forEach(node => {\n      if (typeof node === 'string') {\n        node = document.createTextNode( node );\n      }\n      element.appendChild( node );\n    });\n  }\n\n  return element;\n}\n\n/**\n * @param {Element|string} elementOrSelector\n * @return {Element | null}\n */\nexport function resolveElement (elementOrSelector) {\n  if (typeof elementOrSelector !== 'string') {\n    return elementOrSelector;\n  }\n  return document.querySelector( elementOrSelector );\n}\n\n/**\n * @param {Element} element\n * @return {{top: number, left: number}}\n */\nexport function getElementOffset (element) {\n  if (!element) {\n    return { top: 0, left: 0 };\n  }\n\n  // Return zeros for disconnected and hidden (display: none) elements\n  // Support: IE <= 11 only\n  // Running getBoundingClientRect on a\n  // disconnected node in IE throws an error\n  if (element.getClientRects && !element.getClientRects().length) {\n    return { top: 0, left: 0 };\n  }\n\n  // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n  const rect = element.getBoundingClientRect();\n  const win = element.ownerDocument.defaultView;\n  return {\n    top: rect.top + win.pageYOffset,\n    left: rect.left + win.pageXOffset\n  };\n}\n\n/**\n * @param {Element} targetElement\n * @param {Element} relativeElement\n * @return {{ top: number, left: number }}\n */\nexport function getElementRelativeOffset (targetElement, relativeElement) {\n  const targetOffset = getElementOffset(targetElement);\n  const relativeOffset = getElementOffset(relativeElement);\n\n  return {\n    top: targetOffset.top - relativeOffset.top + relativeElement.scrollTop,\n    left: targetOffset.left - relativeOffset.left + relativeElement.scrollLeft\n  };\n}\n\n/**\n * @returns {number}\n */\nexport function getDocumentHeight () {\n  return Math.max(\n    document.body.scrollHeight,\n    document.documentElement.scrollHeight,\n    document.body.offsetHeight,\n    document.documentElement.offsetHeight,\n    document.body.clientHeight,\n    document.documentElement.clientHeight\n  );\n}\n\n/**\n * @returns {number}\n */\nexport function getWindowHeight () {\n  return window.innerHeight ||\n    (document.documentElement || document.body).clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementHeight (element) {\n  return element.innerHeight || element.clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementWidth (element) {\n  return element.innerWidth || element.clientWidth;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollHeight (element) {\n  return Math.max(\n    element.scrollHeight,\n    element.offsetHeight,\n    element.clientHeight\n  );\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollWidth (element) {\n  return Math.max(\n    element.scrollWidth,\n    element.offsetWidth,\n    element.clientWidth\n  );\n}\n\nconst camelCaseAttrWhiteList = [\n  'viewBox'\n];\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n */\nexport function setAttributes (element, attrs = {}) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttribute( attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n * @param {string | *} ns\n */\nexport function setAttributesNS (element, attrs = {}, ns = null) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttributeNS( ns, attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {string} className\n */\nexport function hasClass (element, className) {\n  if (element.classList) {\n    return element.classList.contains( className );\n  }\n  return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test( element.className );\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function addClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    return element.classList.add( ...classNames );\n  }\n\n  let className = element.className;\n\n  for (let i = 0; i < classNames.length; ++i) {\n    if (!hasClass( element, classNames[ i ] )) {\n      className += ` ${classNames[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function removeClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    return element.classList.remove( ...classNames );\n  }\n\n  let existingClasses = element.className.split( ' ' );\n  let classesToDelete = new Set( classNames );\n  let className = '';\n\n  for (let i = 0; i < existingClasses.length; ++i) {\n    if (!classesToDelete.has( existingClasses[ i ] )) {\n      className += ` ${existingClasses[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n","export const ROOT_CLASS_NAME = 'telechart-root';\n\n/**\n * @param {string} themeName\n * @returns {string}\n */\nexport function interpolateThemeClass (themeName) {\n  return `${ROOT_CLASS_NAME}_theme_${themeName}`;\n}\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemes = {\n  default: 'default',\n  dark: 'dark'\n};\n","/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMinIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return minIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMin (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMinIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMaxIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n  }\n  return maxIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMax (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMaxIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMaxIndexes (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return [ minIndex, maxIndex ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMax (array, startIndex = 0, endIndex = array.length - 1) {\n  const [ minIndex, maxIndex ] = arrayMinMaxIndexes( array, startIndex, endIndex );\n  return [\n    array[ minIndex ],\n    array[ maxIndex ],\n  ];\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arraySum (array) {\n  let length = array.length;\n  let sum = 0;\n\n  while (length--) {\n    sum += array[ length ];\n  }\n\n  return sum;\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arrayAvg (array) {\n  let length = array.length;\n  let result = arraySum( array );\n\n  if (length) {\n    result = result / length;\n  }\n\n  return result;\n}\n\n/**\n * Finds boundary indexes in an array of numbers\n *\n * @param {Array<number>} array\n * @param {number} value\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchIndexes (array, value, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ] === value) {\n    left = right;\n  } else if (array[ left ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n\n/**\n * Finds boundary indexes in an array of objects\n *\n * @param {Array<Object>} array\n * @param {number} value\n * @param {string} key\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchObjectIndexes (array, value, key, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ][ key ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ][ key ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ][ key ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ][ key ] === value) {\n    left = right;\n  } else if (array[ left ][ key ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n","export * from './constants';\nexport * from './animation';\nexport * from './base';\nexport * from './browser';\nexport * from './dom';\nexport * from './events';\nexport * from './svg';\nexport * from './text';\nexport * from './themes';\nexport * from './algorithms';\n","export const FRAMES_PER_SECOND = 60;\nexport const FRAMES_DELTA_SEC = 1 / 60;\nexport const FRAMES_DELTA_MS = 1000 / 60;\n\n/**\n * @param {number} value\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warp (value, deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return value * warpRatio( deltaTime, framesDeltaSec );\n}\n\n/**\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warpRatio (deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return deltaTime / framesDeltaSec;\n}\n\n// linear\nexport const linear = t => t;\n// accelerating from zero velocity\nexport const easeInQuad = t => t * t;\n// decelerating to zero velocity\nexport const easeOutQuad = t => t * (2 - t);\n// acceleration until halfway, then deceleration\nexport const easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n// accelerating from zero velocity\nexport const easeInCubic = t => t * t * t;\n// decelerating to zero velocity\nexport const easeOutCubic = t => --t * t * t + 1;\n// acceleration until halfway, then deceleration\nexport const easeInOutCubic = t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n// accelerating from zero velocity\nexport const easeInQuart = t => t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuart = t => 1 - --t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuart = t => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t);\n// accelerating from zero velocity\nexport const easeInQuint = t => t * t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuint = t => 1 + --t * t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuint = t => t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n","/**\n * Simple event emitter for better performance and app size\n *\n * @author Alexander Belov\n */\nexport class EventEmitter {\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _eventListeners = {};\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   */\n  emit (eventName, ...args) {\n    this._fireEvent( eventName, ...args );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  on (eventName, cb, context = null) {\n    this.addEventListener( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  once (eventName, cb, context = null) {\n    this.addEventListenerOnce( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListener (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    this._subscribeEvent( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListenerOnce (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    const listener = (...args) => {\n      cb.apply( context, args );\n      this.removeEventListener( eventName, listener );\n    };\n\n    this.addEventListener( eventName, listener );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} listener\n   */\n  removeEventListener (eventName, listener) {\n    if (!this._eventListeners[ eventName ]) {\n      return;\n    }\n\n    const listenerIndex = this._eventListeners[ eventName ].findIndex(([ cb ]) => {\n      return listener === cb;\n    });\n\n    if (listenerIndex < 0) {\n      return;\n    }\n\n    this._eventListeners[ eventName ].splice( listenerIndex, 1 );\n  }\n\n  /**\n   * @param {string | *} eventName\n   */\n  removeAllListeners (eventName = null) {\n    if (!eventName) {\n      this._eventListeners = {};\n    } else if (this._eventListeners[ eventName ]) {\n      this._eventListeners[ eventName ] = null;\n      delete this._eventListeners[ eventName ];\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @private\n   */\n  _allocateEvent (eventName) {\n    this._eventListeners[ eventName ] = this._eventListeners[ eventName ] || []\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  _subscribeEvent (eventName, cb, context) {\n    this._allocateEvent( eventName );\n    this._eventListeners[ eventName ].push([ cb, context ]);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   * @private\n   */\n  _fireEvent (eventName, ...args) {\n    const eventListeners = this._eventListeners[ eventName ] || [];\n\n    for (let i = 0; i < eventListeners.length; ++i) {\n      const [ cb, context ] = eventListeners[ i ];\n      cb.apply( context, args );\n    }\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { FRAMES_PER_SECOND } from '../../utils';\n\nexport const AnimationSourceEvents = {\n  UPDATE: 'update'\n};\n\nexport class AnimationSource extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeElapsed = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateInvokes = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updatesPerSecond = 60;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateEach = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateAt = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _paused = false;\n\n  /**\n   * @param {number} updatesPerSecond\n   * @param {number} timeScale\n   */\n  constructor (updatesPerSecond = 60, timeScale = 1) {\n    super();\n\n    this._updatesPerSecond = Math.min( 60, Math.max( 1e-8, updatesPerSecond ) );\n    this._updateEach = FRAMES_PER_SECOND / this._updatesPerSecond;\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (this._paused) {\n      return;\n    }\n\n    this._timeElapsed += deltaTime;\n    this._updateInvokes++;\n\n    if (this._updateInvokes % this._updateEach < 1) {\n      this._callUpdate( (this._timeElapsed - this._lastUpdateAt) * this._timeScale );\n      this._lastUpdateAt = this._timeElapsed;\n    }\n  }\n\n  /**\n   * Disposes the instance\n   */\n  dispose () {\n    this._paused = true;\n    this.removeAllListeners();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._paused;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return !this._paused;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set timeScale (value) {\n    this._timeScale = value;\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _callUpdate (deltaTime) {\n    this.emit( AnimationSourceEvents.UPDATE, deltaTime );\n  }\n}\n","import { EventEmitter } from \"./misc/EventEmitter\";\nimport {\n  ROOT_CLASS_NAME,\n  capitalize,\n  clampNumber,\n  createElement,\n  getElementWidth,\n  resolveElement,\n  setAttributes,\n  setAttributesNS\n} from \"../utils\";\n\nconst telechartTitle = `${capitalize( TELECHART_NAME )} ${TELECHART_VERSION} (c) ${TELECHART_AUTHOR}`;\n\nlet INTERNAL_AUTOINCREMENT = 1;\n\nexport class SvgRenderer extends EventEmitter {\n\n  static NS = 'http://www.w3.org/2000/svg';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = INTERNAL_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parentContainer = null;\n\n  /**\n   * @type {SVGElement}\n   * @private\n   */\n  _svgContainer = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minHeight = 400;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minWidth = 300;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _width = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _isInitialized = false;\n\n  /**\n   * @param {Element|string} contextElement\n   */\n  constructor (contextElement) {\n    super();\n\n    this._parentContainer = resolveElement( contextElement );\n    this._init();\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>} children\n   * @param {Element} parent\n   * @return {Element}\n   */\n  createGroup (attrs = {}, children = [], parent = this._svgContainer) {\n    const group = createElement('g', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Element} parent\n   * @return {SVGDescElement}\n   */\n  createDesc (text = '', parent = this._svgContainer) {\n    const group = createElement('desc', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGTextElement}\n   */\n  createText (text = '', attrs = {}, parent = this._svgContainer) {\n    const tspan = createElement('tspan', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n\n    const textElement = createElement('text', {\n      useNS: true,\n      attrs\n    }, tspan, SvgRenderer.NS);\n\n    parent.appendChild( textElement );\n\n    return textElement;\n  }\n\n  /**\n   * @param {Element[]} defs\n   * @param {Element} parent\n   * @return {SVGDefsElement}\n   */\n  createDefs (defs = [], parent = this._svgContainer) {\n    defs = [].concat( defs );\n\n    const element = createElement('defs', {\n      useNS: true\n    }, defs, SvgRenderer.NS);\n    parent.appendChild( element );\n\n    return element;\n  }\n\n  /**\n   * @param {string} pathText\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGPathElement}\n   */\n  createPath (pathText, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, { d: pathText });\n\n    const pathElement = createElement('path', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n    parent.appendChild( pathElement );\n\n    return pathElement;\n  }\n\n  /**\n   * @param {SVGPathElement} pathElement\n   * @param {Object} updatingAttrs\n   */\n  updatePath (pathElement, pathText, updatingAttrs = {}) {\n    updatingAttrs.d = pathText;\n    setAttributesNS( pathElement, updatingAttrs, null );\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   * @param {*} attrs\n   * @param {SVGElement | Element} parent\n   * @return {SVGRectElement}\n   */\n  createRect (width, height, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, {\n      width, height\n    });\n\n    const rectElement = createElement('rect', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( rectElement );\n\n    return rectElement;\n  }\n\n  /**\n   * Destroy the renderer\n   */\n  destroy () {\n    this._detachEvents();\n    this._clearParentContainer();\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {Element}\n   */\n  get parentContainer () {\n    return this._parentContainer;\n  }\n\n  /**\n   * @return {SVGElement}\n   */\n  get svgContainer () {\n    return this._svgContainer;\n  }\n\n  /**\n   * @return {string}\n   */\n  get viewBox () {\n    return [ 0, 0, this._width, this._height ].join( ' ' );\n  }\n\n  /**\n   * @private\n   */\n  _init () {\n    if (this._isInitialized) {\n      return;\n    }\n\n    this._updateDimensions();\n    this._svgContainer = this._createSvgContainer();\n    this._insertSvgContainer();\n\n    this.createDesc( telechartTitle );\n\n    this._attachEvents();\n\n    this._isInitialized = true;\n  }\n\n  /**\n   * @return {Element}\n   * @private\n   */\n  _createSvgContainer () {\n    const parentContainer = this._parentContainer;\n\n    if (!parentContainer) {\n      throw new Error( 'Parent container is not provided' );\n    }\n\n    return createElement('svg', {\n      useNS: false,\n      attrs: {\n        xmlns: SvgRenderer.NS,\n        version: '1.1',\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox,\n        class: 'telechart-render'\n      }\n    }, [], SvgRenderer.NS);\n  }\n\n  /**\n   * @private\n   */\n  _insertSvgContainer () {\n    this._clearParentContainer();\n    this._parentContainer.appendChild( this._svgContainer );\n  }\n\n  /**\n   * @private\n   */\n  _updateDimensions () {\n    this._width = clampNumber(\n      getElementWidth( this._parentContainer ),\n      this._minWidth\n    );\n    this._height = this._minHeight;\n\n    if (this._svgContainer) {\n      setAttributes(this._svgContainer, {\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  _clearParentContainer () {\n    // clears the child content\n    this._parentContainer.innerHTML = '';\n  }\n\n  /**\n   * @private\n   */\n  _onResize (ev) {\n    this.emit( 'resize', ev );\n    this._updateDimensions();\n  }\n\n  /**\n   * @private\n   */\n  _attachEvents () {\n    this._attachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _detachEvents () {\n    this._detachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _attachResizeListener () {\n    if (this._resizeListener) {\n      this._detachResizeListener();\n    }\n\n    this._resizeListener = this._onResize.bind( this );\n    window.addEventListener( 'resize', this._resizeListener );\n  }\n\n  /**\n   * @private\n   */\n  _detachResizeListener () {\n    if (!this._resizeListener) {\n      return;\n    }\n\n    window.removeEventListener( 'resize', this._resizeListener );\n    this._resizeListener = null;\n  }\n}\n","/**\n * @type {{x: string, line: string}}\n */\nexport const ChartTypes = {\n  x: 'x',\n  line: 'line'\n};\n","let POINT_AUTOINCREMENT = 1;\n\nexport class Point {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = POINT_AUTOINCREMENT++;\n\n  /**\n   * @enum 'point' | 'group'\n   * @type {string}\n   * @private\n   */\n  _type = 'point';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _x = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _y = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgY = 0;\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor (x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n  }\n\n  /**\n   * @param {string} pointType\n   */\n  setType (pointType = 'point') {\n    this._type = pointType;\n  }\n\n  /**\n   * @param {number} x\n   */\n  setX (x) {\n    this._x = x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  setY (y) {\n    this._y = y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  setXY (x, y) {\n    this.setX( x );\n    this.setY( y );\n  }\n\n  /**\n   * @param {number} x\n   */\n  addX (x) {\n    this._x += x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  addY (y) {\n    this._y += y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  addXY (x, y) {\n    this.addX( x );\n    this.addY( y );\n  }\n\n  /**\n   * @param {number} svgX\n   */\n  setSvgX (svgX) {\n    this._svgX = svgX;\n  }\n\n  /**\n   * @param {number} svgY\n   */\n  setSvgY (svgY) {\n    this._svgY = svgY;\n  }\n\n  /**\n   * @param {number} svgX\n   * @param {number} svgY\n   */\n  setSvgXY (svgX, svgY) {\n    this._svgX = svgX;\n    this._svgY = svgY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get x () {\n    return this._x;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get y () {\n    return this._y;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgX () {\n    return this._svgX;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgY () {\n    return this._svgY;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get type () {\n    return this._type;\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { arrayMinMax } from '../../utils';\nimport { Point } from '../point/Point';\n\nexport class Series extends EventEmitter {\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _pathText = null;\n\n  /**\n   * @type {SVGPathElement}\n   * @private\n   */\n  _pathElement = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parent = null;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _yAxis = [];\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _name = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _label = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _color = '#31a8dc';\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _visible = true;\n\n  /**\n   * @type {Array<Point>}\n   * @private\n   */\n  _points = [];\n\n  /**\n   * @type {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   * @private\n   */\n  _settings = {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _seriesOptions = {};\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRange = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRangeIndexes = [];\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  _viewportPoints = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentYScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localYScale = 1;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Element} parent\n   * @param {*} settings\n   */\n  constructor (renderer, parent, settings = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._parent = parent;\n    this._settings = settings;\n    this._parseSettings();\n\n    this.initialize();\n  }\n\n  /**\n   * Initializes series with options\n   */\n  initialize () {\n    this._createPoints();\n    this._updateGlobalExtremes();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n  }\n\n  /**\n   * Creates path\n   */\n  firstRender () {\n    if (this._pathElement) {\n      return;\n    }\n\n    // todo: create path into group and then append it to parent\n  }\n\n  /**\n   * @param {string} pathText\n   */\n  setPathText (pathText) {\n    this._pathText = pathText;\n  }\n\n  /**\n   * @param {SVGPathElement} pathElement\n   */\n  setPathElement (pathElement) {\n    this._pathElement = pathElement;\n  }\n\n  /**\n   * Shows series on the chart\n   */\n  setVisible () {\n    this._visible = true;\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Hides series from the chart\n   */\n  setInvisible () {\n    this._visible = false;\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Toggles series\n   */\n  toggleVisible () {\n    this._visible\n      ? this.setInvisible()\n      : this.setVisible();\n  }\n\n  /**\n   * @param {Array<number>} range\n   * @param {Array<number>} rangeIndexes\n   */\n  setViewportRange (range, rangeIndexes) {\n    this._viewportRange = range;\n    this._viewportRangeIndexes = rangeIndexes;\n\n    this._updateLocalExtremes();\n  }\n\n  /**\n   * Updates points array of viewport\n   */\n  updateViewportPoints () {\n    const [ startIndex, endIndex ] = this._viewportRangeIndexes;\n    this._viewportPoints = this._points.slice( startIndex, endIndex + 1 );\n  }\n\n  /**\n   * @param {number} currentYScale\n   * @param {number} desiredYScale\n   */\n  setScale (currentYScale, desiredYScale) {\n    this._currentYScale = currentYScale;\n    this._localYScale = desiredYScale;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get xAxis () {\n    return this._xAxis;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get yAxis () {\n    return this._yAxis;\n  }\n\n  /**\n   * @return {string}\n   */\n  get pathText () {\n    return this._pathText;\n  }\n\n  /**\n   * @return {SVGPathElement}\n   */\n  get pathElement () {\n    return this._pathElement;\n  }\n\n  /**\n   * @return {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   */\n  get settings () {\n    return this._settings;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isVisible () {\n    return this._visible;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMinY () {\n    return this._globalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMaxY () {\n    return this._globalMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @private\n   */\n  _parseSettings () {\n    const {\n      xAxis, yAxis,\n      label, type,\n      color, name,\n      options\n    } = this._settings;\n\n    this._xAxis = xAxis;\n    this._yAxis = yAxis;\n    this._label = label;\n    this._color = color;\n    this._name = name;\n\n    this._seriesOptions = options;\n  }\n\n  /**\n   * @private\n   */\n  _createPoints () {\n    const xAxis = this._xAxis;\n    const yAxis = this._yAxis;\n\n    for (let i = 0; i < xAxis.length; ++i) {\n      this._points.push(\n        new Point( xAxis[ i ], yAxis[ i ] )\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateGlobalExtremes () {\n    const [ minValue, maxValue ] = arrayMinMax( this._yAxis );\n\n    this._globalMinY = Math.min( 0, minValue );\n    this._globalMaxY = maxValue;\n  }\n\n  /**\n   * @private\n   */\n  _updateLocalExtremes () {\n    const [ rangeStartIndex, rangeEndIndex ] = this._viewportRangeIndexes;\n\n    const [ minValue, maxValue ] = arrayMinMax(\n      this._yAxis, rangeStartIndex, rangeEndIndex\n    );\n\n    this._localMinY = Math.min( 0, minValue );\n    this._localMaxY = maxValue;\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { ChartTypes } from './ChartTypes';\nimport { Series } from '../series/Series';\nimport { binarySearchIndexes, isDate, TimeRanges } from '../../utils';\n\nexport class Chart extends EventEmitter {\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = 250;\n\n  /**\n   * @type {Array<number>}\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<Series>}\n   * @private\n   */\n  _series = [];\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRange = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRangeIndexes = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localYScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentYScale = null;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Object} options\n   */\n  constructor (renderer, options = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._options = options;\n\n    this._initialize();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n  }\n\n  /**\n   * Draws initial chart\n   */\n  firstRender () {\n    this._eachSeries(line => line.firstRender());\n  }\n\n  /**\n   * @param {number|Date} minX\n   * @param {number|Date} maxX\n   */\n  setRange (minX, maxX) {\n    const xAxis = this._xAxis;\n\n    const actualMinX = xAxis[ 0 ];\n    const actualMaxX = xAxis[ xAxis.length - 1 ];\n\n    if (isDate( minX )) {\n      minX = minX.getTime();\n    }\n    if (isDate( maxX )) {\n      maxX = maxX.getTime();\n    }\n\n    minX = Math.max( minX, actualMinX );\n    maxX = Math.min( maxX, actualMaxX );\n\n    this._viewportRange = [ minX, maxX ];\n\n    // recompute points boundaries\n    this._updateViewportIndexes();\n\n    this._eachSeries(line => {\n      // set X viewport interval for line\n      line.setViewportRange( this._viewportRange, this._viewportRangeIndexes );\n\n      // slice only visible points\n      line.updateViewportPoints();\n    });\n\n    // update global and local extremes\n    this._updateExtremes();\n\n    // update scales for each line\n    this._updateSeriesScale();\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRange () {\n    return this._viewportRange;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRangeIndexes () {\n    return this._viewportRangeIndexes;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalExtremeDifference () {\n    return this._globalMaxY - this._globalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localExtremeDifference () {\n    return this._localMaxY - this._localMinY;\n  }\n\n  /**\n   * @private\n   */\n  _initialize () {\n    this._createSeriesGroup();\n    this._createSeries();\n  }\n\n  /**\n   * @private\n   */\n  _createSeriesGroup () {\n    this._seriesGroup = this._renderer.createGroup({\n      class: 'telechart-series-group',\n      transform: `translate(0, 70) scale(1 1)`\n    });\n  }\n\n  /**\n   * @private\n   */\n  _createSeries () {\n    const {\n      series: data,\n      seriesOptions: options = {}\n    } = this._options || {};\n\n    const {\n      columns,\n      types,\n      colors,\n      names\n    } = data;\n\n    const xAxisIndex = columns.findIndex(column => {\n      return types[ column[ 0 ] ] === ChartTypes.x;\n    });\n    const xAxis = this._xAxis = columns[ xAxisIndex ].slice( 1 );\n\n    let yAxes = columns.slice(); // copy an array to change later\n    yAxes.splice( xAxisIndex, 1 ); // remove x axis from the array\n\n    for (let i = 0; i < yAxes.length; ++i) {\n      const yAxis = yAxes[ i ];\n      const label = yAxis.shift();\n      const type = types[ label ];\n      const color = colors[ label ];\n      const name = names[ label ];\n\n      const settings = {\n        xAxis, yAxis, label, type,\n        color, name, options\n      };\n\n      const series = new Series( this._renderer, this._seriesGroup, settings );\n\n      series.on('visibleChange', _ => {\n        this._onSeriesVisibleChange( series );\n      });\n\n      this._series.push( series );\n    }\n\n    const minX = xAxis[ 0 ];\n    const maxX = xAxis[ xAxis.length - 1 ];\n    const initialViewport = Math.floor( ( maxX - minX ) * .25 );\n\n    // set initial range\n    this.setRange( maxX - initialViewport, maxX );\n  }\n\n  /**\n   * @private\n   */\n  _updateViewportIndexes () {\n    const [ rangeStart, rangeEnd ] = this._viewportRange;\n    const [ minLowerIndex, minUpperIndex ] = binarySearchIndexes( this._xAxis, rangeStart );\n    const [ maxLowerIndex, maxUpperIndex ] = binarySearchIndexes( this._xAxis, rangeEnd );\n\n    this._viewportRangeIndexes = [ minUpperIndex, maxLowerIndex ];\n  }\n\n  /**\n   * @param {Series} series\n   * @private\n   */\n  _onSeriesVisibleChange (series) {\n    // find new extremes and scale\n    this._updateExtremes();\n\n    // setup new scale for each line\n    this._updateSeriesScale();\n  }\n\n  /**\n   * @private\n   */\n  _updateExtremes () {\n    let localMinY = 0;\n    let localMaxY = 0;\n    let globalMinY = 0;\n    let globalMaxY = 0;\n\n    this._eachSeries(line => {\n      if (!line.isVisible) {\n        return;\n      }\n\n      if (localMinY > line.localMinY) {\n        localMinY = line.localMinY;\n      }\n      if (localMaxY < line.localMaxY) {\n        localMaxY = line.localMaxY;\n      }\n\n      if (globalMinY > line.globalMinY) {\n        globalMinY = line.globalMinY;\n      }\n      if (globalMaxY < line.globalMaxY) {\n        globalMaxY = line.globalMaxY;\n      }\n    });\n\n    this._localMinY = localMinY;\n    this._localMaxY = localMaxY;\n\n    this._globalMinY = globalMinY;\n    this._globalMaxY = globalMaxY;\n\n    this._localYScale = this._computeYScale();\n\n    if (typeof this._currentYScale !== 'number') {\n      // set initial scale\n      this._currentYScale = this._localYScale;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateSeriesScale () {\n    this._eachSeries(line => {\n      line.setScale( this._currentYScale, this._localYScale );\n    });\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  _computeYScale () {\n    const globalHeight = this.globalExtremeDifference;\n    const localHeight = this.localExtremeDifference;\n\n    // prevent dividing by zero\n    if (!globalHeight) {\n      return 1;\n    }\n\n    return localHeight / globalHeight;\n  }\n\n  /**\n   * @param {Function} fn\n   * @private\n   */\n  _eachSeries (fn = () => {}) {\n    for (let i = 0; i < this._series.length; ++i) {\n      fn( this._series[ i ] );\n    }\n  }\n}\n","export class Clock {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateMs = 0;\n\n  constructor () {\n    this._lastUpdateMs = this.now;\n  }\n\n  /**\n   * @return {number}\n   */\n  getDelta () {\n    const now = this.now;\n    const delta = now - this._lastUpdateMs;\n    this._lastUpdateMs = now;\n\n    return delta;\n  }\n\n  /**\n   * @return {number}\n   */\n  get now () {\n    return (performance || Date).now();\n  }\n}\n","import './style/telechart.scss';\n\nimport { AnimationSource, AnimationSourceEvents } from './core/animation/AnimationSource';\nimport { SvgRenderer } from \"./core/SvgRenderer\";\nimport { Chart } from './core/chart/Chart';\nimport { Clock } from './core/misc/Clock';\n\nimport {\n  addClass,\n  interpolateThemeClass,\n  removeClass,\n  resolveElement,\n  ChartThemes,\n  setAttributesNS,\n  cssText, createElement, ROOT_CLASS_NAME\n} from \"./utils\";\n\nexport class Telechart {\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _rootElement = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _themeName = ChartThemes.default;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _title = '';\n\n  /**\n   * @type {SVGTextElement}\n   * @private\n   */\n  _titleElement = null;\n\n  /**\n   * @type {Clock}\n   * @private\n   */\n  _clock = null;\n\n  /**\n   * @type {AnimationSource}\n   * @private\n   */\n  _animationSource = null;\n\n  /**\n   * @static\n   * @param {Element | string} mountTo Element or selector\n   * @param {Object} options\n   */\n  static create (mountTo, options = {}) {\n    const chart = new Telechart();\n\n    chart.setOptions( options );\n    chart.mount( resolveElement( mountTo ) );\n    chart.initialize();\n\n    chart.firstRender();\n\n    return chart;\n  }\n\n  /**\n   * @param {Object} options\n   */\n  setOptions (options = {}) {\n    this._options = options;\n  }\n\n  /**\n   * @param {Element} parent\n   */\n  mount (parent) {\n    const root = createElement('div', {\n      attrs: {\n        class: ROOT_CLASS_NAME\n      }\n    });\n\n    parent.appendChild( root );\n\n    this._rootElement = root;\n    this._renderer = new SvgRenderer( root );\n  }\n\n  /**\n   * Initialize the chart\n   */\n  initialize () {\n    this.setTheme( this._options.theme || ChartThemes.default );\n    this.setTitle( this._options.title );\n\n    // create components\n    this._createChart();\n\n    // create animation loop\n    this._clock = new Clock();\n    this._animationSource = new AnimationSource( 60, 1 ); // fps, timeScale\n    this._animationSource.on(AnimationSourceEvents.UPDATE, deltaTime => {\n      this.update( deltaTime );\n    });\n\n    requestAnimationFrame(_ => {\n      this.animate();\n    });\n  }\n\n  /**\n   * Draws first frame\n   */\n  firstRender () {\n    this._chart.firstRender();\n  }\n\n  /**\n   * Animation loop\n   */\n  animate () {\n    const deltaTime = this._clock.getDelta();\n    this._animationSource.update( deltaTime );\n\n    requestAnimationFrame(_ => this.animate());\n  }\n\n  /**\n   * Update loop\n   */\n  update (deltaTime) {\n    this._chart.update( deltaTime );\n  }\n\n  /**\n   * @param {string} themeName\n   */\n  setTheme (themeName) {\n    const rootElement = this._rootElement;\n\n    removeClass(\n      rootElement,\n      Object.keys( ChartThemes )\n        .map( interpolateThemeClass )\n    );\n\n    addClass(\n      rootElement,\n      interpolateThemeClass( themeName )\n    );\n\n    this._themeName = themeName;\n  }\n\n  /**\n   * @param {string} title\n   */\n  setTitle (title) {\n    this._title = title;\n\n    !this._titleElement\n      ? this._createTitle( title )\n      : this._updateTitle( title );\n  }\n\n  /**\n   * Destroys the chart instance\n   */\n  destroy () {\n    this._renderer && this._renderer.destroy();\n    this._rootElement = null;\n    this._renderer = null;\n  }\n\n  /**\n   * @return {string}\n   */\n  get themeName () {\n    return this._themeName;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _createTitle (title = this._options.title) {\n    if (!title) {\n      return;\n    }\n\n    const text = this._renderer.createText(title, {\n      class: 'telechart-title',\n      x: 16,\n      y: 36,\n      textAnchor: 'start',\n      style: cssText({\n        opacity: 0\n      })\n    });\n\n    setTimeout(_ => {\n      setAttributesNS(text, {\n        style: cssText({\n          opacity: 1\n        })\n      });\n    }, 200);\n\n    this._titleElement = text;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _updateTitle (title) {\n    if (!this._titleElement) {\n      return;\n    }\n    const tspan = this._titleElement.querySelector( 'tspan' );\n    tspan.innerHTML = title;\n  }\n\n  /**\n   * @private\n   */\n  _createChart () {\n    this._chart = new Chart(\n      this._renderer,\n      this._options\n    );\n  }\n}\n","export * from './Telechart';\n"],"sourceRoot":""}