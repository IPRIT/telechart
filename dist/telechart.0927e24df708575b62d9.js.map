{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/constants.js","webpack:///./src/utils/animation.js","webpack:///./src/utils/base.js","webpack:///./src/utils/browser.js","webpack:///./src/utils/text.js","webpack:///./src/utils/dom.js","webpack:///./src/utils/events.js","webpack:///./src/utils/svg.js","webpack:///./src/utils/themes.js","webpack:///./src/utils/algorithms.js","webpack:///./src/utils/index.js","webpack:///./src/core/misc/EventEmitter.js","webpack:///./src/core/animation/AnimationSource.js","webpack:///./src/core/SvgRenderer.js","webpack:///./src/core/chart/ChartTypes.js","webpack:///./src/core/point/Point.js","webpack:///./src/core/point/PointGroup.js","webpack:///./src/core/series/Series.js","webpack:///./src/core/animation/Tween.js","webpack:///./src/core/chart/Chart.js","webpack:///./src/core/misc/Clock.js","webpack:///./src/Telechart.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TimeRanges","second","minute","hour","day","week","month","year","FRAMES_DELTA_SEC","warp","deltaTime","warpRatio","arguments","length","undefined","animationTimeout","timeoutMs","_len","args","Array","_key","Promise","resolve","fulfillmentCallback","apply","concat","cb","requestAnimationFrame","setTimeout","_","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","objectEachKey","fn","keys","forEach","objectMapKey","map","clampNumber","min","Infinity","max","_ref","Math","ensureNumber","Number","isNaN","isObject","_typeof","isDate","Date","valueOf","isBrowserSafari","test","navigator","userAgent","capitalize","text","String","toUpperCase","substr","cssText","styleObject","reduce","css","prop","camelToKebabCase","toLowerCase","replace","parseQueryString","href","queryString","split","slice","part","keyValue","result","obj","assign","createElement","tagName","options","children","element","document","createElementNS","attrs","useNS","setAttributesNS","attrsNS","setAttributes","isArray","node","innerHTML","appendChild","resolveElement","elementOrSelector","querySelector","getElementOffset","top","left","getClientRects","rect","getBoundingClientRect","win","ownerDocument","defaultView","pageYOffset","pageXOffset","getElementRelativeOffset","targetElement","relativeElement","targetOffset","relativeOffset","scrollTop","scrollLeft","getDocumentHeight","body","scrollHeight","documentElement","offsetHeight","clientHeight","getWindowHeight","window","innerHeight","getElementHeight","getElementWidth","innerWidth","clientWidth","getElementScrollHeight","getElementScrollWidth","scrollWidth","offsetWidth","camelCaseAttrWhiteList","attr","includes","setAttribute","setAttributeNS","hasClass","className","classList","contains","RegExp","addClass","_element$classList","classNames","add","_toConsumableArray","trim","removeClass","_element$classList2","remove","existingClasses","classesToDelete","Set","has","addEventListenerOnce","eventName","console","warn","addEventListener","listener","ev","removeEventListener","parseSimplePathText","pathText","parseRegex","segments","exec","index","lastIndex","type","x","y","push","segmentsToPathText","j","join","ROOT_CLASS_NAME","interpolateThemeClass","themeName","ChartThemes","default","dark","ChartThemesColors","arraysEqual","arrayA","arrayB","arrayMinIndex","array","startIndex","endIndex","minIndex","arrayMin","arrayMaxIndex","maxIndex","arrayMax","arrayMinMaxIndexes","arrayMinMax","_arrayMinMaxIndexes2","_slicedToArray","arraySum","sum","arrayAvg","binarySearchIndexes","order","right","mid","binarySearchObjectIndexes","__webpack_exports__","EventEmitter","_classCallCheck","this","_fireEvent","context","_subscribeEvent","_this","_len2","_key2","_eventListeners","listenerIndex","findIndex","splice","_allocateEvent","eventListeners","_len3","_key3","_eventListeners$i","AnimationSourceEvents","AnimationSource","_EventEmitter","updatesPerSecond","timeScale","AnimationSource_classCallCheck","_getPrototypeOf","AnimationSource_defineProperty","_assertThisInitialized","_updatesPerSecond","_updateEach","FRAMES_PER_SECOND","_timeScale","_inherits","_paused","_timeElapsed","_updateInvokes","_callUpdate","_lastUpdateAt","removeAllListeners","emit","set","telechartTitle","TELECHART_NAME","TELECHART_VERSION","TELECHART_AUTHOR","INTERNAL_AUTOINCREMENT","SvgRenderer","contextElement","SvgRenderer_classCallCheck","SvgRenderer_getPrototypeOf","SvgRenderer_defineProperty","SvgRenderer_assertThisInitialized","_parentContainer","_init","SvgRenderer_inherits","parent","_svgContainer","group","NS","tspan","textElement","defs","pathElement","updatingAttrs","width","height","rectElement","selector","from","querySelectorAll","_detachEvents","_clearParentContainer","_isInitialized","_updateDimensions","_createSvgContainer","_insertSvgContainer","createDesc","_attachEvents","Error","xmlns","version","_width","_height","viewBox","class","_minWidth","_minHeight","_attachResizeListener","_detachResizeListener","_resizeListener","_onResize","_id","ChartTypes","PointTypes","point","POINT_AUTOINCREMENT","Point","Point_classCallCheck","Point_defineProperty","_x","_y","pointType","_type","setX","setY","addX","addY","svgX","_svgX","svgY","_svgY","PointGroup","_Point","points","autoCompute","PointGroup_classCallCheck","PointGroup_getPrototypeOf","PointGroup_defineProperty","PointGroup_assertThisInitialized","setType","setPointsGroup","PointGroup_inherits","_pointsGroup","approximate","_approximateX","_approximateY","_approximationFn","SERIES_AUTOINCREMENT","Series","renderer","settings","Series_classCallCheck","Series_getPrototypeOf","Series_defineProperty","Series_assertThisInitialized","_renderer","_parent","_settings","_parseSettings","initialize","Series_inherits","_createPoints","_updateGlobalExtremes","_addEvents","_viewportPointsGroupingNeeded","approximateViewportPoints","_pathUpdateNeeded","updateViewportPoints","updatePath","_pathElement","_createGroup","_createPath","chart","_chart","_pathText","_visible","setInvisible","setVisible","range","rangeIndexes","updateExtremes","oldRangeIndexes","_viewportRangeIndexes","_viewportRange","_viewportDistance","requestPointsApproximation","_updateLocalExtremes","requestPathUpdate","_viewportPoints","setSvgXY","_projectXToSvg","_projectYToSvg","_this$_viewportRangeI","Series_slicedToArray","_points","boostScale","_xAxis","groupingDistanceLimitX","_groupingPixels","_viewportPixelX","groupingDistanceLimitY","_viewportPixelY","viewportPoints","groupStartIndex","groupStartDifferenceX","groupStartDifferenceY","abs","pointGroup","chartWidth","currentLocalExtremeDifference","chartHeight","_computePathText","_this$_settings","xAxis","yAxis","label","color","_this$_settings$optio","_yAxis","_label","_color","_name","groupingOptions","grouping","pixels","_seriesOptions","_group","createGroup","id","createPath","fill","stroke","strokeWidth","strokeLinejoin","strokeLinecap","_arrayMinMax2","minValue","maxValue","_globalMinY","_globalMaxY","_this$_viewportRangeI2","rangeStartIndex","rangeEndIndex","_arrayMinMax4","_localMinY","_localMaxY","_toRelativeX","currentLocalMinY","_this2","on","_onRendererResize","updateViewportPixel","TWEEN_ID","TweenState","NOT_STARTED","RUNNING","PAUSED","COMPLETED","CANCELLED","TweenEvents","DEFAULT_PARAMS","duration","timingFunction","Tween","target","properties","deltaValues","params","Tween_classCallCheck","Tween_getPrototypeOf","Tween_defineProperty","Tween_assertThisInitialized","_target","_properties","_deltaValues","_initParams","Tween_inherits","Tween_createClass","_construct","isRunning","_updateAnimation","_checkDuration","isNotStarted","_startValues","_getPropertyValues","_state","_dispose","_this$_params","_params","_duration","_timingFunctionName","_timingFunction","_getTimingFunction","progress","timingProgress","finish","values","_getPropertyValue","functionName","defaultFunctionName","timingFunctions","Chart","Chart_classCallCheck","Chart_getPrototypeOf","Chart_defineProperty","Chart_assertThisInitialized","_options","_initialize","Chart_inherits","extremesUpdated","_minMaxYAnimation","update","_viewportRangeUpdateNeeded","updateViewportRange","_eachSeries","line","firstRender","minX","maxX","_setViewportRange","_updateViewportIndexes","setViewportRange","_updateExtremes","_this3","_createSeriesGroup","_createSeries","_setInitialRange","_seriesGroup","transform","_test","createRect","style","shapeRendering","_test2","_test3","data","series","_ref$seriesOptions","seriesOptions","columns","types","colors","names","xAxisIndex","column","yAxes","shift","setChart","_series","_this$_viewportRange","Chart_slicedToArray","rangeStart","rangeEnd","_binarySearchIndexes2","minUpperIndex","_binarySearchIndexes4","maxLowerIndex","localMinY","localMaxY","globalMinY","globalMaxY","isVisible","oldLocalMinY","oldLocalMaxY","updateAnimation","_currentLocalMinY","_currentLocalMaxY","_createMinMaxYAnimation","preservePadding","globalMinX","globalMaxX","getTime","newMinX","newMaxX","actualPaddingX","_computeViewportPadding","receivedLeftPaddingX","receivedRightPaddingX","_viewportLeftPaddingScale","_viewportRightPaddingScale","_this4","_onSeriesVisibleChange","difference","initialViewport","floor","viewportPadding","_this5","log","cancel","start","localMinX","localMaxX","_computeViewportPixelX","_chartHeight","Clock","Clock_classCallCheck","_lastUpdateMs","now","delta","performance","Telechart","Telechart_classCallCheck","Telechart_defineProperty","mountTo","setOptions","mount","root","_rootElement","setTheme","theme","setTitle","title","_createChart","_clock","_animationSource","animate","getDelta","rootElement","_themeName","_title","_titleElement","_updateTitle","_createTitle","destroy","createText","textAnchor","opacity","Telechart_Telechart"],"mappings":"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","file":"telechart.0927e24df708575b62d9.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","const hour = 3600 * 1000;\n\n/**\n * @type {{second: number, minute: number, hour: number, day: number, week: number, month: number, year: number}}\n */\nexport const TimeRanges = {\n  second: 1000,\n  minute: hour / 60,\n  hour,\n  day: hour * 24,\n  week: hour * 24 * 7,\n  month: hour * 24 * 30, // rude\n  year: hour * 24 * 365\n};\n","export const FRAMES_PER_SECOND = 60;\nexport const FRAMES_DELTA_SEC = 1 / 60;\nexport const FRAMES_DELTA_MS = 1000 / 60;\n\n/**\n * @param {number} value\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warp (value, deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return value * warpRatio( deltaTime, framesDeltaSec );\n}\n\n/**\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warpRatio (deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return deltaTime / framesDeltaSec;\n}\n\n/**\n * @param {number} timeoutMs\n * @param {*} args\n * @return {Promise<void>}\n */\nexport function animationTimeout (timeoutMs = 0, ...args) {\n  return new Promise(resolve => {\n    const fulfillmentCallback = resolve.bind( null, ...args );\n    const cb = () => requestAnimationFrame( fulfillmentCallback );\n\n    if (!timeoutMs) {\n      cb();\n    } else {\n      setTimeout( _ => cb(), timeoutMs );\n    }\n  });\n}\n\n// linear\nexport const linear = t => t;\n// accelerating from zero velocity\nexport const easeInQuad = t => t * t;\n// decelerating to zero velocity\nexport const easeOutQuad = t => t * (2 - t);\n// acceleration until halfway, then deceleration\nexport const easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n// accelerating from zero velocity\nexport const easeInCubic = t => t * t * t;\n// decelerating to zero velocity\nexport const easeOutCubic = t => --t * t * t + 1;\n// acceleration until halfway, then deceleration\nexport const easeInOutCubic = t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n// accelerating from zero velocity\nexport const easeInQuart = t => t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuart = t => 1 - --t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuart = t => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t);\n// accelerating from zero velocity\nexport const easeInQuint = t => t * t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuint = t => 1 + --t * t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuint = t => t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n","/**\n * @param {*} object\n * @param {Function} fn\n */\nexport function objectEachKey (object, fn = () => {}) {\n  Object.keys( object ).forEach( fn );\n}\n\n/**\n * @param {*} object\n * @param {Function} fn\n * @return {*[]}\n */\nexport function objectMapKey (object, fn = () => {}) {\n  return Object.keys( object ).map( fn );\n}\n\n/**\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nexport function clampNumber (value, min = -Infinity, max = Infinity) {\n  if (min > max) {\n    [ min, max ] = [ max, min ];\n  }\n  return Math.min(\n    Math.max(ensureNumber(value), min),\n    max\n  );\n}\n\n/**\n * @param {*} value\n * @return {number}\n */\nexport function ensureNumber (value) {\n  value = Number(value);\n  if (Number.isNaN(value)) {\n    return 0;\n  }\n  return value;\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nexport function isObject (value) {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * @param {Date|*} value\n * @return {boolean}\n */\nexport function isDate (value) {\n  return value instanceof Date && !isNaN( value.valueOf() );\n}\n","/**\n * @returns {boolean}\n */\nexport function isBrowserSafari () {\n  return /^((?!chrome|android|crios|fxios).)*safari/i.test( navigator.userAgent );\n}\n","/**\n * @param {string} text\n * @return {string}\n */\nexport function capitalize (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return text[ 0 ].toUpperCase() + text.substr(1);\n}\n\n/**\n * @param {Object} styleObject\n * @returns {string}\n */\nexport function cssText (styleObject) {\n  return Object.keys( styleObject ).reduce((css, prop) => {\n    return `${css ? css + ' ' : ''}${camelToKebabCase( prop )}: ${styleObject[ prop ]};`;\n  }, '');\n}\n\n/**\n * @param {string} text\n * @returns {string}\n */\nexport function camelToKebabCase (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return (\n    text[ 0 ].toLowerCase() + text.substr( 1 )\n  ).replace( /([A-Z])/g, '-$1' ).toLowerCase();\n}\n\n/**\n * @param {string} href\n * @return {*}\n */\nexport function parseQueryString (href) {\n  const queryString = href.split('?').slice(1);\n  if (!queryString.length) {\n    return {};\n  }\n\n  return queryString[ 0 ].split( '&' ).map(part => {\n    const keyValue = part.split( '=' );\n    return {\n      [keyValue[ 0 ]]: keyValue[ 1 ]\n    };\n  }).reduce((result, obj) => {\n    return Object.assign(result, obj);\n  })\n}\n","import { objectEachKey } from \"./base\";\nimport { camelToKebabCase } from './text';\n\n/**\n * @param {string} tagName\n * @param {Object} options\n * @param {Array|*} children\n * @param {string|*} ns\n * @return {Element}\n */\nexport function createElement (tagName, options = {}, children = [], ns = null) {\n  const element = !ns\n    ? document.createElement( tagName )\n    : document.createElementNS( ns, tagName );\n\n  if (options.attrs) {\n    !options.useNS\n      ? setAttributes( element, options.attrs )\n      : setAttributesNS( element, options.attrs, options.attrsNS || null );\n  }\n\n  if (children || Array.isArray( children )) {\n    children = [].concat( children );\n    children.forEach(node => {\n      if (typeof node === 'string') {\n        element.innerHTML += node;\n      } else {\n        element.appendChild( node );\n      }\n    });\n  }\n\n  return element;\n}\n\n/**\n * @param {Element|string} elementOrSelector\n * @return {Element | null}\n */\nexport function resolveElement (elementOrSelector) {\n  if (typeof elementOrSelector !== 'string') {\n    return elementOrSelector;\n  }\n  return document.querySelector( elementOrSelector );\n}\n\n/**\n * @param {Element} element\n * @return {{top: number, left: number}}\n */\nexport function getElementOffset (element) {\n  if (!element) {\n    return { top: 0, left: 0 };\n  }\n\n  // Return zeros for disconnected and hidden (display: none) elements\n  // Support: IE <= 11 only\n  // Running getBoundingClientRect on a\n  // disconnected node in IE throws an error\n  if (element.getClientRects && !element.getClientRects().length) {\n    return { top: 0, left: 0 };\n  }\n\n  // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n  const rect = element.getBoundingClientRect();\n  const win = element.ownerDocument.defaultView;\n  return {\n    top: rect.top + win.pageYOffset,\n    left: rect.left + win.pageXOffset\n  };\n}\n\n/**\n * @param {Element} targetElement\n * @param {Element} relativeElement\n * @return {{ top: number, left: number }}\n */\nexport function getElementRelativeOffset (targetElement, relativeElement) {\n  const targetOffset = getElementOffset(targetElement);\n  const relativeOffset = getElementOffset(relativeElement);\n\n  return {\n    top: targetOffset.top - relativeOffset.top + relativeElement.scrollTop,\n    left: targetOffset.left - relativeOffset.left + relativeElement.scrollLeft\n  };\n}\n\n/**\n * @returns {number}\n */\nexport function getDocumentHeight () {\n  return Math.max(\n    document.body.scrollHeight,\n    document.documentElement.scrollHeight,\n    document.body.offsetHeight,\n    document.documentElement.offsetHeight,\n    document.body.clientHeight,\n    document.documentElement.clientHeight\n  );\n}\n\n/**\n * @returns {number}\n */\nexport function getWindowHeight () {\n  return window.innerHeight ||\n    (document.documentElement || document.body).clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementHeight (element) {\n  return element.innerHeight || element.clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementWidth (element) {\n  return element.innerWidth || element.clientWidth;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollHeight (element) {\n  return Math.max(\n    element.scrollHeight,\n    element.offsetHeight,\n    element.clientHeight\n  );\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollWidth (element) {\n  return Math.max(\n    element.scrollWidth,\n    element.offsetWidth,\n    element.clientWidth\n  );\n}\n\nconst camelCaseAttrWhiteList = [\n  'viewBox'\n];\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n */\nexport function setAttributes (element, attrs = {}) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttribute( attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n * @param {string | *} ns\n */\nexport function setAttributesNS (element, attrs = {}, ns = null) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttributeNS( ns, attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {string} className\n */\nexport function hasClass (element, className) {\n  if (element.classList) {\n    return element.classList.contains( className );\n  }\n  return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test( element.className );\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function addClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    return element.classList.add( ...classNames );\n  }\n\n  let className = element.className;\n\n  for (let i = 0; i < classNames.length; ++i) {\n    if (!hasClass( element, classNames[ i ] )) {\n      className += ` ${classNames[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function removeClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    return element.classList.remove( ...classNames );\n  }\n\n  let existingClasses = element.className.split( ' ' );\n  let classesToDelete = new Set( classNames );\n  let className = '';\n\n  for (let i = 0; i < existingClasses.length; ++i) {\n    if (!classesToDelete.has( existingClasses[ i ] )) {\n      className += ` ${existingClasses[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n","/**\n * @param {Element | Window} element\n * @param {string} eventName\n * @param {Function} cb\n */\nexport function addEventListenerOnce (element, eventName, cb) {\n  if (!element) {\n    return console.warn( 'Element is missing' );\n  }\n\n  const listener = ev => {\n    cb( ev );\n    element.removeEventListener( eventName, listener );\n  };\n\n  element.addEventListener( eventName, listener );\n}\n","import { ensureNumber } from \"./index\";\n\n/**\n * Returns path segments\n *\n * @param {string} pathText\n * @return {Array<Array<Array<number>>>}\n */\nexport function parseSimplePathText (pathText) {\n  const parseRegex = /([ML])\\s?(-?\\d+\\.?(?:\\d+)?)\\s(-?\\d+\\.?(?:\\d+)?)/gi;\n\n  const segments = [];\n  let m;\n\n  while ((m = parseRegex.exec( pathText )) !== null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (m.index === parseRegex.lastIndex) {\n      parseRegex.lastIndex++;\n    }\n\n    const type = m[ 1 ];\n    const x = ensureNumber( m[2] );\n    const y = ensureNumber( m[3] );\n\n    if (type === 'm' || !segments.length) {\n      segments.push([ [ x, y ] ]);\n    } else {\n      const lastSegment = segments[ segments.length - 1 ];\n      lastSegment.push([ x, y ]);\n    }\n  }\n\n  return segments;\n}\n\n/**\n * @param {Array<Array<Array<number>>>} segments\n * @return {string}\n */\nexport function segmentsToPathText (segments) {\n  let result = '';\n\n  for (let i = 0; i < segments.length; ++i) {\n    result += 'M ';\n    for (let j = 0; j < segments[ i ].length; ++j) {\n      const coordinates = segments[ i ][ j ];\n      if (j !== 0) {\n        result += 'L ';\n      }\n      result += coordinates.join(' ') + ' ';\n    }\n  }\n\n  return result;\n}\n","export const ROOT_CLASS_NAME = 'telechart-root';\n\n/**\n * @param {string} themeName\n * @returns {string}\n */\nexport function interpolateThemeClass (themeName) {\n  return `${ROOT_CLASS_NAME}_theme_${themeName}`;\n}\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemes = {\n  default: 'default',\n  dark: 'dark'\n};\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemesColors = {\n  default: '#ffffff',\n  dark: '#242F3E'\n};\n","/**\n * @param {Array<*>} arrayA\n * @param {Array<*>} arrayB\n * @param {string | *} key\n * @return {boolean}\n */\nexport function arraysEqual (arrayA, arrayB, key = null) {\n  if (!Array.isArray(arrayA)\n    || !Array.isArray(arrayB)\n    || arrayA.length !== arrayB.length) {\n    return false;\n  }\n  for (let i = 0; i < arrayA.length; ++i) {\n    if (key) {\n      if (arrayA[ i ][ key ] !== arrayB[ i ][ key ]) {\n        return false;\n      }\n    } else if (arrayA[ i ] !== arrayB[ i ]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMinIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return minIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMin (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMinIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMaxIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n  }\n  return maxIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMax (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMaxIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMaxIndexes (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return [ minIndex, maxIndex ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMax (array, startIndex = 0, endIndex = array.length - 1) {\n  const [ minIndex, maxIndex ] = arrayMinMaxIndexes( array, startIndex, endIndex );\n  return [\n    array[ minIndex ],\n    array[ maxIndex ],\n  ];\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arraySum (array) {\n  let length = array.length;\n  let sum = 0;\n\n  while (length--) {\n    sum += array[ length ];\n  }\n\n  return sum;\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arrayAvg (array) {\n  let length = array.length;\n  let result = arraySum( array );\n\n  // prevent from dividing by zero\n  if (length) {\n    result = result / length;\n  }\n\n  return result;\n}\n\n/**\n * Finds boundary indexes in an array of numbers\n *\n * @param {Array<number>} array\n * @param {number} value\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchIndexes (array, value, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ] === value) {\n    left = right;\n  } else if (array[ left ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n\n/**\n * Finds boundary indexes in an array of objects\n *\n * @param {Array<Object>} array\n * @param {number} value\n * @param {string} key\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchObjectIndexes (array, value, key, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ][ key ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ][ key ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ][ key ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ][ key ] === value) {\n    left = right;\n  } else if (array[ left ][ key ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n","export * from './constants';\nexport * from './animation';\nexport * from './base';\nexport * from './browser';\nexport * from './dom';\nexport * from './events';\nexport * from './svg';\nexport * from './text';\nexport * from './themes';\nexport * from './algorithms';\n","/**\n * Simple event emitter for better performance and app size\n *\n * @author Alexander Belov\n */\nexport class EventEmitter {\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _eventListeners = {};\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   */\n  emit (eventName, ...args) {\n    this._fireEvent( eventName, ...args );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  on (eventName, cb, context = null) {\n    this.addEventListener( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  once (eventName, cb, context = null) {\n    this.addEventListenerOnce( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListener (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    this._subscribeEvent( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListenerOnce (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    const listener = (...args) => {\n      cb.apply( context, args );\n      this.removeEventListener( eventName, listener );\n    };\n\n    this.addEventListener( eventName, listener );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} listener\n   */\n  removeEventListener (eventName, listener) {\n    if (!this._eventListeners[ eventName ]) {\n      return;\n    }\n\n    const listenerIndex = this._eventListeners[ eventName ].findIndex(([ cb ]) => {\n      return listener === cb;\n    });\n\n    if (listenerIndex < 0) {\n      return;\n    }\n\n    this._eventListeners[ eventName ].splice( listenerIndex, 1 );\n  }\n\n  /**\n   * @param {string | *} eventName\n   */\n  removeAllListeners (eventName = null) {\n    if (!eventName) {\n      this._eventListeners = {};\n    } else if (this._eventListeners[ eventName ]) {\n      this._eventListeners[ eventName ] = null;\n      delete this._eventListeners[ eventName ];\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @private\n   */\n  _allocateEvent (eventName) {\n    this._eventListeners[ eventName ] = this._eventListeners[ eventName ] || []\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  _subscribeEvent (eventName, cb, context) {\n    this._allocateEvent( eventName );\n    this._eventListeners[ eventName ].push([ cb, context ]);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   * @private\n   */\n  _fireEvent (eventName, ...args) {\n    const eventListeners = this._eventListeners[ eventName ] || [];\n\n    for (let i = 0; i < eventListeners.length; ++i) {\n      const [ cb, context ] = eventListeners[ i ];\n      cb.apply( context, args );\n    }\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { FRAMES_PER_SECOND } from '../../utils';\n\nexport const AnimationSourceEvents = {\n  UPDATE: 'update'\n};\n\nexport class AnimationSource extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeElapsed = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateInvokes = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updatesPerSecond = 60;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateEach = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateAt = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _paused = false;\n\n  /**\n   * @param {number} updatesPerSecond\n   * @param {number} timeScale\n   */\n  constructor (updatesPerSecond = 60, timeScale = 1) {\n    super();\n\n    this._updatesPerSecond = Math.min( 60, Math.max( 1e-8, updatesPerSecond ) );\n    this._updateEach = FRAMES_PER_SECOND / this._updatesPerSecond;\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (this._paused) {\n      return;\n    }\n\n    this._timeElapsed += deltaTime;\n    this._updateInvokes++;\n\n    if (this._updateInvokes % this._updateEach < 1) {\n      this._callUpdate( (this._timeElapsed - this._lastUpdateAt) * this._timeScale );\n      this._lastUpdateAt = this._timeElapsed;\n    }\n  }\n\n  /**\n   * Disposes the instance\n   */\n  dispose () {\n    this._paused = true;\n    this.removeAllListeners();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._paused;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return !this._paused;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set timeScale (value) {\n    this._timeScale = value;\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _callUpdate (deltaTime) {\n    this.emit( AnimationSourceEvents.UPDATE, deltaTime );\n  }\n}\n","import { EventEmitter } from \"./misc/EventEmitter\";\nimport {\n  capitalize,\n  clampNumber,\n  createElement,\n  getElementWidth,\n  resolveElement,\n  setAttributes,\n  setAttributesNS\n} from \"../utils\";\n\nconst telechartTitle = `${capitalize( TELECHART_NAME )} ${TELECHART_VERSION} (c) ${TELECHART_AUTHOR}`;\n\nlet INTERNAL_AUTOINCREMENT = 1;\n\nexport class SvgRenderer extends EventEmitter {\n\n  static NS = 'http://www.w3.org/2000/svg';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = INTERNAL_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parentContainer = null;\n\n  /**\n   * @type {SVGElement}\n   * @private\n   */\n  _svgContainer = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minHeight = 400;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minWidth = 10;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _width = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _isInitialized = false;\n\n  /**\n   * @param {Element|string} contextElement\n   */\n  constructor (contextElement) {\n    super();\n\n    this._parentContainer = resolveElement( contextElement );\n    this._init();\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>} children\n   * @param {Element} parent\n   * @return {Element}\n   */\n  createGroup (attrs = {}, children = [], parent = this._svgContainer) {\n    const group = createElement('g', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Element} parent\n   * @return {SVGDescElement}\n   */\n  createDesc (text = '', parent = this._svgContainer) {\n    const group = createElement('desc', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGTextElement}\n   */\n  createText (text = '', attrs = {}, parent = this._svgContainer) {\n    const tspan = createElement('tspan', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n\n    const textElement = createElement('text', {\n      useNS: true,\n      attrs\n    }, tspan, SvgRenderer.NS);\n\n    parent.appendChild( textElement );\n\n    return textElement;\n  }\n\n  /**\n   * @param {Element[]} defs\n   * @param {Element} parent\n   * @return {SVGDefsElement}\n   */\n  createDefs (defs = [], parent = this._svgContainer) {\n    defs = [].concat( defs );\n\n    const element = createElement('defs', {\n      useNS: true\n    }, defs, SvgRenderer.NS);\n    parent.appendChild( element );\n\n    return element;\n  }\n\n  /**\n   * @param {string} pathText\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGPathElement}\n   */\n  createPath (pathText, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, { d: pathText });\n\n    const pathElement = createElement('path', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n    parent.appendChild( pathElement );\n\n    return pathElement;\n  }\n\n  /**\n   * @param {SVGPathElement} pathElement\n   * @param {Object} updatingAttrs\n   */\n  updatePath (pathElement, pathText, updatingAttrs = {}) {\n    updatingAttrs.d = pathText;\n    setAttributesNS( pathElement, updatingAttrs, null );\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   * @param {*} attrs\n   * @param {SVGElement | Element} parent\n   * @return {SVGRectElement}\n   */\n  createRect (width, height, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, {\n      width, height\n    });\n\n    const rectElement = createElement('rect', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( rectElement );\n\n    return rectElement;\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Element}\n   */\n  querySelector (selector) {\n    return this._svgContainer.querySelector( selector );\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Array<Element>}\n   */\n  querySelectorAll (selector) {\n    return Array.from( this._svgContainer.querySelectorAll( selector ) );\n  }\n\n  /**\n   * Destroy the renderer\n   */\n  destroy () {\n    this._detachEvents();\n    this._clearParentContainer();\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {Element}\n   */\n  get parentContainer () {\n    return this._parentContainer;\n  }\n\n  /**\n   * @return {SVGElement}\n   */\n  get svgContainer () {\n    return this._svgContainer;\n  }\n\n  /**\n   * @return {number}\n   */\n  get width () {\n    return this._width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get height () {\n    return this._height;\n  }\n\n  /**\n   * @return {string}\n   */\n  get viewBox () {\n    return [ 0, 0, this._width, this._height ].join( ' ' );\n  }\n\n  /**\n   * @private\n   */\n  _init () {\n    if (this._isInitialized) {\n      return;\n    }\n\n    this._updateDimensions();\n    this._svgContainer = this._createSvgContainer();\n    this._insertSvgContainer();\n\n    this.createDesc( telechartTitle );\n\n    this._attachEvents();\n\n    this._isInitialized = true;\n  }\n\n  /**\n   * @return {Element}\n   * @private\n   */\n  _createSvgContainer () {\n    const parentContainer = this._parentContainer;\n\n    if (!parentContainer) {\n      throw new Error( 'Parent container is not provided' );\n    }\n\n    return createElement('svg', {\n      useNS: false,\n      attrs: {\n        xmlns: SvgRenderer.NS,\n        version: '1.1',\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox,\n        class: 'telechart-render'\n      }\n    }, [], SvgRenderer.NS);\n  }\n\n  /**\n   * @private\n   */\n  _insertSvgContainer () {\n    this._clearParentContainer();\n    this._parentContainer.appendChild( this._svgContainer );\n  }\n\n  /**\n   * @private\n   */\n  _updateDimensions () {\n    this._width = clampNumber(\n      getElementWidth( this._parentContainer ),\n      this._minWidth\n    );\n    this._height = this._minHeight;\n\n    if (this._svgContainer) {\n      setAttributes(this._svgContainer, {\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  _clearParentContainer () {\n    // clears the child content\n    this._parentContainer.innerHTML = '';\n  }\n\n  /**\n   * @private\n   */\n  _onResize (ev) {\n    this._updateDimensions();\n    this.emit( 'resize', ev );\n  }\n\n  /**\n   * @private\n   */\n  _attachEvents () {\n    this._attachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _detachEvents () {\n    this._detachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _attachResizeListener () {\n    if (this._resizeListener) {\n      this._detachResizeListener();\n    }\n\n    this._resizeListener = this._onResize.bind( this );\n    window.addEventListener( 'resize', this._resizeListener );\n  }\n\n  /**\n   * @private\n   */\n  _detachResizeListener () {\n    if (!this._resizeListener) {\n      return;\n    }\n\n    window.removeEventListener( 'resize', this._resizeListener );\n    this._resizeListener = null;\n  }\n}\n","/**\n * @type {{x: string, line: string}}\n */\nexport const ChartTypes = {\n  x: 'x',\n  line: 'line'\n};\n","export const PointTypes = {\n  point: 'point',\n  group: 'group',\n};\n\nlet POINT_AUTOINCREMENT = 1;\n\nexport class Point {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = POINT_AUTOINCREMENT++;\n\n  /**\n   * @enum 'point' | 'group'\n   * @type {string}\n   * @private\n   */\n  _type = 'point';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _x = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _y = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgY = 0;\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor (x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n  }\n\n  /**\n   * @param {string} pointType\n   */\n  setType (pointType = 'point') {\n    this._type = pointType;\n  }\n\n  /**\n   * @param {number} x\n   */\n  setX (x) {\n    this._x = x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  setY (y) {\n    this._y = y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  setXY (x, y) {\n    this.setX( x );\n    this.setY( y );\n  }\n\n  /**\n   * @param {number} x\n   */\n  addX (x) {\n    this._x += x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  addY (y) {\n    this._y += y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  addXY (x, y) {\n    this.addX( x );\n    this.addY( y );\n  }\n\n  /**\n   * @param {number} svgX\n   */\n  setSvgX (svgX) {\n    this._svgX = svgX;\n  }\n\n  /**\n   * @param {number} svgY\n   */\n  setSvgY (svgY) {\n    this._svgY = svgY;\n  }\n\n  /**\n   * @param {number} svgX\n   * @param {number} svgY\n   */\n  setSvgXY (svgX, svgY) {\n    this._svgX = svgX;\n    this._svgY = svgY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get x () {\n    return this._x;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get y () {\n    return this._y;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgX () {\n    return this._svgX;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgY () {\n    return this._svgY;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get type () {\n    return this._type;\n  }\n}\n","import { Point, PointTypes } from './Point';\nimport { arrayAvg } from '../../utils/index';\n\nexport class PointGroup extends Point {\n\n  /**\n   * @type {Array<Point>}\n   * @private\n   */\n  _pointsGroup = [];\n\n  /**\n   * @type {arrayAvg}\n   * @private\n   */\n  _approximationFn = arrayAvg;\n\n  /**\n   * @param {Array<Point>} points\n   * @param {boolean?} autoCompute\n   */\n  constructor (points = [], autoCompute = true) {\n    super();\n    this.setType( PointTypes.group );\n    this.setPointsGroup( points, autoCompute );\n  }\n\n  /**\n   * @param {Array<Point>} points\n   * @param {boolean?} autoCompute\n   */\n  setPointsGroup (points, autoCompute = true) {\n    this._pointsGroup = points;\n\n    if (autoCompute) {\n      this.approximate();\n    }\n  }\n\n  /**\n   * @private\n   */\n  approximate () {\n    this.setX( this._approximateX() );\n    this.setY( this._approximateY() );\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  _approximateX () {\n    return this._approximationFn(\n      this._pointsGroup.map(p => p.x)\n    );\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  _approximateY () {\n    return this._approximationFn(\n      this._pointsGroup.map(p => p.y)\n    );\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { animationTimeout, arrayMinMax, arraysEqual, ensureNumber } from '../../utils';\nimport { Point } from '../point/Point';\nimport { PointGroup } from '../point/PointGroup';\n\nlet SERIES_AUTOINCREMENT = 1;\n\nexport class Series extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = SERIES_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _group = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _pathText = null;\n\n  /**\n   * @type {SVGPathElement}\n   * @private\n   */\n  _pathElement = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _pathUpdateNeeded = false;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parent = null;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _yAxis = [];\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _name = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _label = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _color = '#31a8dc';\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _visible = true;\n\n  /**\n   * @type {Array<Point>}\n   * @private\n   */\n  _points = [];\n\n  /**\n   * @type {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   * @private\n   */\n  _settings = {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _seriesOptions = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _groupingPixels = 2;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRange = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportDistance = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPixelX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPixelY = 0;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRangeIndexes = [];\n\n  /**\n   * @type {Array<Point | PointGroup>}\n   * @private\n   */\n  _viewportPoints = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportPointsGroupingNeeded = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Element} parent\n   * @param {*} settings\n   */\n  constructor (renderer, parent, settings = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._parent = parent;\n    this._settings = settings;\n    this._parseSettings();\n\n    this.initialize();\n  }\n\n  /**\n   * Initializes series with options\n   */\n  initialize () {\n    this._createPoints();\n    this._updateGlobalExtremes();\n    this._addEvents();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (this._viewportPointsGroupingNeeded) {\n      this.approximateViewportPoints();\n\n      this._viewportPointsGroupingNeeded = false;\n    }\n\n    if (this._pathUpdateNeeded) {\n      this.updateViewportPoints();\n      this.updatePath();\n\n      this._pathUpdateNeeded = false;\n    }\n  }\n\n  /**\n   * Creates path\n   */\n  firstRender () {\n    if (this._pathElement) {\n      return;\n    }\n\n    // approximate viewport points for large data set\n    this.approximateViewportPoints();\n\n    // update svgX & svgY for each point\n    this.updateViewportPoints();\n\n    // creates and stores wrapper for following path element\n    this._createGroup();\n\n    // creates and stores initial path element\n    this._createPath();\n  }\n\n  /**\n   * @param {Chart} chart\n   */\n  setChart (chart) {\n    this._chart = chart;\n  }\n\n  /**\n   * @param {string} pathText\n   */\n  setPathText (pathText) {\n    this._pathText = pathText;\n  }\n\n  /**\n   * @param {SVGPathElement} pathElement\n   */\n  setPathElement (pathElement) {\n    this._pathElement = pathElement;\n  }\n\n  /**\n   * Shows series on the chart\n   */\n  setVisible () {\n    this._visible = true;\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Hides series from the chart\n   */\n  setInvisible () {\n    this._visible = false;\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Toggles series\n   */\n  toggleVisible () {\n    this._visible\n      ? this.setInvisible()\n      : this.setVisible();\n  }\n\n  /**\n   * @param {Array<number>} range\n   * @param {Array<number>} rangeIndexes\n   * @param {boolean} updateExtremes\n   */\n  setViewportRange (range, rangeIndexes, updateExtremes = true) {\n    const oldRangeIndexes = this._viewportRangeIndexes;\n\n    this._viewportRange = range;\n    this._viewportRangeIndexes = rangeIndexes;\n    this._viewportDistance = this._viewportRange[ 1 ] - this._viewportRange[ 0 ];\n\n    if (!arraysEqual( rangeIndexes, oldRangeIndexes )) {\n      // do not recompute groups while first render\n      if (oldRangeIndexes.length > 0) {\n        // recompute approximation in next animation update\n        this.requestPointsApproximation();\n      }\n\n      if (updateExtremes) {\n        // update minY and maxY local values\n        this._updateLocalExtremes();\n      }\n    }\n\n    // recompute path coordinates in next animation update\n    this.requestPathUpdate();\n  }\n\n  /**\n   * Updates points array of viewport\n   */\n  updateViewportPoints () {\n    for (let i = 0; i < this._viewportPoints.length; ++i) {\n      const point = this._viewportPoints[ i ];\n      point.setSvgXY(\n        this._projectXToSvg( point.x ),\n        this._projectYToSvg( point.y ),\n      );\n    }\n  }\n\n  /**\n   * Approximate points for better performance\n   */\n  approximateViewportPoints () {\n    let [ startIndex, endIndex ] = this._viewportRangeIndexes;\n\n    startIndex = Math.max( 0, startIndex - 1 );\n    endIndex = Math.min( this._points.length - 1, endIndex + 1 );\n\n    // if we have no enough points\n    // then we don't need to approximate\n    if (endIndex - startIndex < 100) {\n      // just slice points from the original array\n      // [ startIndex, endIndex ]\n      this._viewportPoints = this._points.slice(\n        startIndex,\n        endIndex + 1\n      );\n\n      // all work done here\n      return;\n    }\n\n    const boostLimit = 500;\n    const boostScale = 1 + this._xAxis.length > boostLimit\n      ? Math.max(0, ( endIndex - startIndex ) / this._xAxis.length ) * 2\n      : 0;\n\n    let groupingDistanceLimitX = boostScale * this._groupingPixels * this._viewportPixelX;\n    let groupingDistanceLimitY = boostScale * this._groupingPixels * this._viewportPixelY;\n\n    let viewportPoints = [];\n    let groupStartIndex = startIndex;\n\n    for (let i = startIndex + 1; i <= endIndex; ++i) {\n      const point = this._points[ i ];\n\n      const groupStartDifferenceX = point.x - this._points[ groupStartIndex ].x;\n      const groupStartDifferenceY = Math.abs( point.y - this._points[ groupStartIndex ].y );\n\n      // using chebyshev distance determine if we reach the group limit\n      if (groupStartDifferenceX >= groupingDistanceLimitX\n        || groupStartDifferenceY >= groupingDistanceLimitY\n        || i === endIndex) {\n        if (groupStartIndex !== i - 1) {\n          // we have 2 or more points to group\n          // [ startIndex, lastIndex ] all indexes inclusive\n          const group = this._points.slice( groupStartIndex, i );\n          const pointGroup = new PointGroup( group, true );\n          viewportPoints.push( pointGroup );\n        } else {\n          if (startIndex === i - 1) {\n            // add first point\n            viewportPoints.push( this._points[ startIndex ] );\n          }\n          viewportPoints.push( point );\n        }\n\n        groupStartIndex = i;\n      }\n    }\n\n    this._viewportPoints = viewportPoints;\n  }\n\n  /**\n   * Updates pixel value for each axis\n   */\n  updateViewportPixel () {\n    this._viewportPixelX = this._viewportDistance / this._chart.chartWidth;\n    this._viewportPixelY = this._chart.currentLocalExtremeDifference / this._chart.chartHeight;\n  }\n\n  /**\n   * Recompute path text\n   */\n  updatePath () {\n    this._pathText = this._computePathText( this._viewportPoints );\n    this._renderer.updatePath( this._pathElement, this._pathText );\n  }\n\n  /**\n   * Mark to update path in next animation frame\n   */\n  requestPathUpdate () {\n    this._pathUpdateNeeded = true;\n  }\n\n  /**\n   * Mark to regroup points in next animation frame\n   */\n  requestPointsApproximation () {\n    this._viewportPointsGroupingNeeded = true;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get xAxis () {\n    return this._xAxis;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get yAxis () {\n    return this._yAxis;\n  }\n\n  /**\n   * @return {string}\n   */\n  get pathText () {\n    return this._pathText;\n  }\n\n  /**\n   * @return {SVGPathElement}\n   */\n  get pathElement () {\n    return this._pathElement;\n  }\n\n  /**\n   * @return {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   */\n  get settings () {\n    return this._settings;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isVisible () {\n    return this._visible;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMinY () {\n    return this._globalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMaxY () {\n    return this._globalMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @private\n   */\n  _parseSettings () {\n    const {\n      xAxis, yAxis,\n      label, type,\n      color, name,\n      options = {}\n    } = this._settings;\n\n    this._xAxis = xAxis;\n    this._yAxis = yAxis;\n    this._label = label;\n    this._color = color;\n    this._name = name;\n\n    const groupingOptions = options.grouping;\n    if (groupingOptions) {\n      if (groupingOptions.pixels) {\n        this._groupingPixels = ensureNumber( groupingOptions.pixels );\n      }\n    }\n\n    this._seriesOptions = options;\n  }\n\n  /**\n   * @private\n   */\n  _createGroup () {\n    this._group = this._renderer.createGroup({\n      class: 'telechart-series-path-group',\n      id: `telechart-path-${this._id}`,\n      x: 0,\n      y: 0\n    }, [], this._parent);\n  }\n\n  /**\n   * @private\n   */\n  _createPath () {\n    this._pathText = this._computePathText( this._viewportPoints );\n\n    this._pathElement = this._renderer.createPath(this._pathText, {\n      class: 'telechart-series-path',\n      d: this._pathText,\n      fill: 'none',\n      stroke: this._color,\n      strokeWidth: '2',\n      strokeLinejoin: 'round',\n      strokeLinecap: 'round'\n    }, this._group);\n  }\n\n  /**\n   * @private\n   */\n  _createPoints () {\n    const xAxis = this._xAxis;\n    const yAxis = this._yAxis;\n\n    for (let i = 0; i < xAxis.length; ++i) {\n      this._points.push(\n        new Point( xAxis[ i ], yAxis[ i ] )\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateGlobalExtremes () {\n    const [ minValue, maxValue ] = arrayMinMax( this._yAxis );\n\n    this._globalMinY = Math.min( 0, minValue );\n    this._globalMaxY = maxValue;\n  }\n\n  /**\n   * @private\n   */\n  _updateLocalExtremes () {\n    const [ rangeStartIndex, rangeEndIndex ] = this._viewportRangeIndexes;\n\n    const [ minValue, maxValue ] = arrayMinMax(\n      this._yAxis, rangeStartIndex, rangeEndIndex\n    );\n\n    this._localMinY = Math.min( 0, minValue );\n    this._localMaxY = maxValue;\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   * @private\n   */\n  _projectXToSvg (x) {\n    return this._toRelativeX( x ) / this._viewportPixelX;\n  }\n\n  /**\n   * @param {number} y\n   * @return {number}\n   * @private\n   */\n  _projectYToSvg (y) {\n    return this._chart.chartHeight - ( y - this._chart.currentLocalMinY ) / this._viewportPixelY;\n  }\n\n  /**\n   * @private\n   */\n  _addEvents () {\n    this._renderer.on('resize', _ => {\n      this._onRendererResize();\n    });\n  }\n\n  /**\n   * @private\n   */\n  _onRendererResize () {\n    // update value-per-pixel and min-max distance\n    this.updateViewportPixel();\n\n    this._pathUpdateNeeded = true;\n    this._viewportPointsGroupingNeeded = true;\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   * @private\n   */\n  _toRelativeX (x) {\n    return x - this._viewportRange[ 0 ];\n  }\n\n  /**\n   * @param {Array<Point | PointGroup>} points\n   * @return {string}\n   * @private\n   */\n  _computePathText (points = []) {\n    let result = '';\n\n    if (!points.length) {\n      return result;\n    }\n\n    result += 'M';\n\n    for (let i = 0; i < points.length; ++i) {\n      const point = points[ i ];\n\n      if (i !== 0) {\n        result += 'L';\n      }\n\n      result += [ point.svgX, point.svgY ].join(' ') + ' ';\n    }\n\n    return result;\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport * as timingFunctions from '../../utils';\n\nlet TWEEN_ID = 1;\n\nexport const TweenState = {\n  NOT_STARTED: 1,\n  RUNNING: 2,\n  PAUSED: 3,\n  COMPLETED: 4,\n  CANCELLED: 5\n};\n\nexport const TweenEvents = {\n  STARTED: 'started',\n  PAUSED: 'paused',\n  COMPLETE: 'complete',\n  CANCELLED: 'cancelled'\n};\n\nconst DEFAULT_PARAMS = {\n  timeScale: 1,\n  duration: 500,\n  timingFunction: 'linear'\n};\n\nexport class Tween extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = TWEEN_ID++;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _params = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _state = TweenState.NOT_STARTED;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeScale = DEFAULT_PARAMS.timeScale;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeElapsed = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _duration = DEFAULT_PARAMS.duration;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _timingFunctionName = DEFAULT_PARAMS.timingFunction;\n\n  /**\n   * @type {Function}\n   * @private\n   */\n  _timingFunction = () => {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _target = null;\n\n  /**\n   * @type {Array<string>}\n   * @private\n   */\n  _properties = [];\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  _deltaValues = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _startValues = [];\n\n  /**\n   * @param {Array<*>} args\n   * @returns {Tween}\n   */\n  static create (...args) {\n    return new Tween( ...args );\n  }\n\n  /**\n   * @param {*} target\n   * @param {string|Array<string>} properties\n   * @param {number|Array<number>} deltaValues\n   * @param {*} params\n   */\n  constructor (target, properties = [], deltaValues = [], params = {}) {\n    super();\n\n    this._target = target;\n    this._properties = [].concat( properties );\n    this._deltaValues = [].concat( deltaValues );\n    this._initParams( params );\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (!this.isRunning) {\n      return;\n    }\n\n    deltaTime *= this._timeScale;\n    this._timeElapsed += deltaTime * 1000;\n\n    this._updateAnimation( deltaTime );\n    this._checkDuration();\n  }\n\n  /**\n   * Runs animation\n   */\n  start () {\n    if (this.isNotStarted) {\n      this._startValues = this._getPropertyValues( this._properties );\n    }\n    this._state = TweenState.RUNNING;\n    this.emit( TweenEvents.STARTED );\n  }\n\n  /**\n   * Stops animation\n   */\n  pause () {\n    this._state = TweenState.PAUSED;\n    this.emit( TweenEvents.PAUSED );\n  }\n\n  /**\n   * Finish & dispose the tween\n   */\n  finish () {\n    this._state = TweenState.COMPLETED;\n    this.emit( TweenEvents.COMPLETE, this._timeElapsed );\n    this._dispose();\n  }\n\n  /**\n   * Cancels current animation\n   */\n  cancel () {\n    this._state = TweenState.CANCELLED;\n    this.emit( TweenEvents.CANCELLED, this._timeElapsed );\n    this._dispose();\n  }\n\n  patchAnimation () {\n    // todo\n  }\n\n  /**\n   * @param {number} timeScale\n   */\n  setTimeScale (timeScale = 1) {\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isNotStarted () {\n    return this._state === TweenState.NOT_STARTED;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return this._state === TweenState.RUNNING;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._state === TweenState.PAUSED;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isCompleted () {\n    return this._state === TweenState.COMPLETED;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get duration () {\n    return this._duration;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get timingFunctionName () {\n    return this._timingFunctionName;\n  }\n\n  /**\n   * @returns {Function}\n   */\n  get timingFunction () {\n    return this._timingFunction;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeRemaining () {\n    return Math.max( 0, Math.min( this._duration, this._duration - this._timeElapsed ) );\n  }\n\n  /**\n   * @returns {number}\n   */\n  get progress () {\n    return Math.min( 1, Math.max( 0, this._timeElapsed / this._duration ) );\n  }\n\n  /**\n   * @param {*} params\n   * @private\n   */\n  _initParams (params) {\n    let {\n      timeScale,\n      duration,\n      timingFunction\n    } = this._params = Object.assign( {}, DEFAULT_PARAMS, params );\n\n    this._timeScale = timeScale;\n    this._duration = duration;\n    this._timingFunctionName = timingFunction;\n    this._timingFunction = this._getTimingFunction( timingFunction );\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _updateAnimation (deltaTime) {\n    const progress = this.progress;\n    const timingProgress = this._timingFunction( progress );\n\n    for (let i = 0, length = this._properties.length; i < length; ++i) {\n      const property = this._properties[ i ];\n      this._target[ property ] = this._startValues[ i ] + this._deltaValues[ i ] * timingProgress;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _checkDuration () {\n    if (this._timeElapsed >= this._duration) {\n      this.finish();\n    }\n  }\n\n  /**\n   * @param {Array<string>} properties\n   * @returns {Array<number>}\n   * @private\n   */\n  _getPropertyValues (properties = []) {\n    let values = [];\n    for (let i = 0, length = properties.length; i < length; ++i) {\n      values[ i ] = this._getPropertyValue( properties[i] );\n    }\n    return values;\n  }\n\n  /**\n   * @param {string} property\n   * @returns {number}\n   * @private\n   */\n  _getPropertyValue (property) {\n    return this._target[ property || '' ] || 0;\n  }\n\n  /**\n   * @param {string} functionName\n   * @returns {Function}\n   * @private\n   */\n  _getTimingFunction (functionName) {\n    const defaultFunctionName = DEFAULT_PARAMS.timingFunction;\n    return timingFunctions[ functionName ] || timingFunctions[ defaultFunctionName ];\n  }\n\n  /**\n   * Disposes the object\n   *\n   * @private\n   */\n  _dispose () {\n    this._params = null;\n    this._timingFunction = null;\n    this._deltaValues = null;\n    this._startValues = null;\n    this._properties = null;\n    this._target = null;\n\n    this.removeAllListeners();\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { ChartTypes } from './ChartTypes';\nimport { Series } from '../series/Series';\nimport { binarySearchIndexes, clampNumber, cssText, isDate, TimeRanges } from '../../utils';\nimport { Tween, TweenEvents } from '../animation/Tween';\n\nexport class Chart extends EventEmitter {\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartHeight = 250; // chart height will be constant\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<Series>}\n   * @private\n   */\n  _series = [];\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRange = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRangeIndexes = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportLeftPaddingScale = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportRightPaddingScale = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportRangeUpdateNeeded = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentLocalMinY = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentLocalMaxY = null;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _minMaxYAnimation = null;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Object} options\n   */\n  constructor (renderer, options = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._options = options;\n\n    this._initialize();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    let extremesUpdated = false;\n\n    if (this._minMaxYAnimation && this._minMaxYAnimation.isRunning) {\n      this._minMaxYAnimation.update( deltaTime );\n\n      extremesUpdated = true;\n    }\n\n    if (this._viewportRangeUpdateNeeded) {\n      this.updateViewportRange();\n\n      this._viewportRangeUpdateNeeded = false;\n    }\n\n    this._eachSeries(line => {\n      if (extremesUpdated) {\n        line.updateViewportPixel();\n        line.requestPathUpdate();\n      }\n\n      line.update( deltaTime );\n    });\n  }\n\n  /**\n   * Draws initial chart\n   */\n  firstRender () {\n    this._eachSeries(line => line.firstRender());\n  }\n\n  /**\n   * @param {number|Date} minX\n   * @param {number|Date} maxX\n   */\n  setViewportRange (minX, maxX) {\n    // recompute X boundaries\n    this._setViewportRange( minX, maxX );\n\n    // recompute indexes range\n    this._updateViewportIndexes();\n\n    this._eachSeries(line => {\n      // set X viewport interval for line\n      line.setViewportRange( this._viewportRange, this._viewportRangeIndexes );\n    });\n\n    // update global and local extremes\n    this._updateExtremes();\n\n    // recompute pixel value\n    this._eachSeries(line => {\n      line.updateViewportPixel();\n    });\n  }\n\n  /**\n   * Recompute key variables for viewport range\n   */\n  updateViewportRange () {\n    // recompute X boundaries\n    this._setViewportRange( this._viewportRange[ 0 ], this._viewportRange[ 1 ], true );\n\n    this._eachSeries(line => {\n      // update X viewport interval for line\n      line.setViewportRange( this._viewportRange, this._viewportRangeIndexes, false );\n\n      // update X pixel value\n      line.updateViewportPixel();\n    });\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRange () {\n    return this._viewportRange;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRangeIndexes () {\n    return this._viewportRangeIndexes;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalExtremeDifference () {\n    return this._globalMaxY - this._globalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localExtremeDifference () {\n    return this._localMaxY - this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalExtremeDifference () {\n    return this._currentLocalMaxY - this._currentLocalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalMinY () {\n    return this._currentLocalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalMaxY () {\n    return this._currentLocalMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMinY () {\n    return this._globalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMaxY () {\n    return this._globalMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartWidth () {\n    return this._renderer.width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return this._chartHeight;\n  }\n\n  /**\n   * @return {Tween}\n   */\n  get minMaxYAnimation () {\n    return this._minMaxYAnimation;\n  }\n\n  /**\n   * @private\n   */\n  _initialize () {\n    this._createSeriesGroup();\n    this._createSeries();\n    this._addEvents();\n    this._setInitialRange();\n  }\n\n  /**\n   * @private\n   */\n  _createSeriesGroup () {\n    this._seriesGroup = this._renderer.createGroup({\n      class: 'telechart-series-group',\n      transform: `translate(0, 70) scale(1 1)`\n    });\n\n    this._test = this._renderer.createRect(this._renderer.width, '1px', {\n      fill: '#ccc',\n      y: 1,\n      style: cssText({\n        shapeRendering: 'crispEdges'\n      })\n    }, this._seriesGroup);\n    this._test2 = this._renderer.createRect(this._renderer.width, '1px', {\n      fill: '#ccc',\n      y: this.chartHeight / 2,\n      style: cssText({\n        shapeRendering: 'crispEdges'\n      })\n    }, this._seriesGroup);\n    this._test3 = this._renderer.createRect(this._renderer.width, '1px', {\n      fill: '#ccc',\n      y: this.chartHeight,\n      style: cssText({\n        shapeRendering: 'crispEdges'\n      })\n    }, this._seriesGroup);\n  }\n\n  /**\n   * @private\n   */\n  _createSeries () {\n    const {\n      series: data,\n      seriesOptions: options = {}\n    } = this._options || {};\n\n    const {\n      columns,\n      types,\n      colors,\n      names\n    } = data;\n\n    const xAxisIndex = columns.findIndex(column => {\n      return types[ column[ 0 ] ] === ChartTypes.x;\n    });\n    const xAxis = this._xAxis = columns[ xAxisIndex ].slice( 1 );\n\n    let yAxes = columns.slice(); // copy an array to change later\n    yAxes.splice( xAxisIndex, 1 ); // remove x axis from the array\n\n    for (let i = 0; i < yAxes.length; ++i) {\n      const yAxis = yAxes[ i ];\n      const label = yAxis.shift();\n      const type = types[ label ];\n      const color = colors[ label ];\n      const name = names[ label ];\n\n      // prepare series settings\n      const settings = {\n        xAxis, yAxis, label, type,\n        color, name, options\n      };\n\n      // create instance\n      const series = new Series( this._renderer, this._seriesGroup, settings );\n\n      // provide context for each series\n      series.setChart( this );\n\n      this._series.push( series );\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateViewportIndexes () {\n    const [ rangeStart, rangeEnd ] = this._viewportRange;\n    const [ minLowerIndex, minUpperIndex ] = binarySearchIndexes( this._xAxis, rangeStart );\n    const [ maxLowerIndex, maxUpperIndex ] = binarySearchIndexes( this._xAxis, rangeEnd );\n\n    this._viewportRangeIndexes = [ minUpperIndex, maxLowerIndex ];\n  }\n\n  /**\n   * @private\n   */\n  _updateExtremes () {\n    let localMinY = 0;\n    let localMaxY = 0;\n    let globalMinY = 0;\n    let globalMaxY = 0;\n\n    this._eachSeries(line => {\n      // todo: unnecessary\n      if (globalMinY > line.globalMinY) {\n        globalMinY = line.globalMinY;\n      }\n      if (globalMaxY < line.globalMaxY) {\n        globalMaxY = line.globalMaxY;\n      }\n\n      if (!line.isVisible) {\n        // filter only visible series\n        return;\n      }\n\n      if (localMinY > line.localMinY) {\n        localMinY = line.localMinY;\n      }\n      if (localMaxY < line.localMaxY) {\n        localMaxY = line.localMaxY;\n      }\n    });\n\n    let oldLocalMinY = this._localMinY;\n    let oldLocalMaxY = this._localMaxY;\n\n    this._localMinY = localMinY;\n    this._localMaxY = localMaxY;\n\n    this._globalMinY = globalMinY;\n    this._globalMaxY = globalMaxY;\n\n    let updateAnimation = false;\n\n    if (typeof this._currentLocalMinY !== 'number') {\n      // set initial local min y\n      this._currentLocalMinY = this._localMinY;\n    } else if (this._localMinY !== oldLocalMinY) {\n      updateAnimation = true;\n    }\n\n    if (typeof this._currentLocalMaxY !== 'number') {\n      // set initial local max y\n      this._currentLocalMaxY = this._localMaxY;\n    } else if (this._localMaxY !== oldLocalMaxY) {\n      updateAnimation = true;\n    }\n\n    if (updateAnimation) {\n      this._createMinMaxYAnimation();\n    }\n  }\n\n  /**\n   * @param {number | Date} minX\n   * @param {number | Date} maxX\n   * @param {boolean} preservePadding\n   * @private\n   */\n  _setViewportRange (minX, maxX, preservePadding = false) {\n    const xAxis = this._xAxis;\n\n    const globalMinX = xAxis[ 0 ];\n    const globalMaxX = xAxis[ xAxis.length - 1 ];\n\n    if (isDate( minX )) {\n      minX = minX.getTime();\n    }\n    if (isDate( maxX )) {\n      maxX = maxX.getTime();\n    }\n\n    let newMinX = Math.max( minX, globalMinX );\n    let newMaxX = Math.min( maxX, globalMaxX );\n\n    const actualPaddingX = this._computeViewportPadding( newMinX, newMaxX );\n\n    const receivedLeftPaddingX = clampNumber( newMinX - minX, 0, actualPaddingX );\n    const receivedRightPaddingX = clampNumber( maxX - newMaxX, 0, actualPaddingX );\n\n    if (!preservePadding) {\n      this._viewportLeftPaddingScale = receivedLeftPaddingX / actualPaddingX;\n    }\n    if (this._viewportLeftPaddingScale > 0) {\n      newMinX -= actualPaddingX * this._viewportLeftPaddingScale;\n    }\n\n    if (!preservePadding) {\n      this._viewportRightPaddingScale = receivedRightPaddingX / actualPaddingX;\n    }\n    if (this._viewportRightPaddingScale > 0) {\n      newMaxX += actualPaddingX * this._viewportRightPaddingScale;\n    }\n\n    this._viewportRange = [ newMinX, newMaxX ];\n  }\n\n  /**\n   * @private\n   */\n  _addEvents () {\n    this._renderer.on('resize', _ => {\n      this._onRendererResize();\n    });\n\n    this._eachSeries(line => {\n      line.on('visibleChange', _ => {\n        this._onSeriesVisibleChange( line );\n      });\n    });\n  }\n\n  /**\n   * @private\n   */\n  _setInitialRange () {\n    const globalMinX = this._xAxis[ 0 ];\n    const globalMaxX = this._xAxis[ this._xAxis.length - 1 ];\n    const difference = globalMaxX - globalMinX;\n    const initialViewport = Math.floor( difference * .15 );\n    const viewportPadding = this._computeViewportPadding(\n      globalMaxX - initialViewport,\n      globalMaxX\n    );\n\n    // set initial range\n    this.setViewportRange(\n      globalMaxX - initialViewport - viewportPadding,\n      globalMaxX + viewportPadding\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createMinMaxYAnimation () {\n    if (this._minMaxYAnimation) {\n      console.log( this._minMaxYAnimation.id, 'cancelled' );\n      this._minMaxYAnimation.cancel();\n      this._minMaxYAnimation = null;\n    }\n\n    this._minMaxYAnimation = new Tween(this, [\n      '_currentLocalMinY',\n      '_currentLocalMaxY'\n    ], [\n      this._localMinY - this._currentLocalMinY,\n      this._localMaxY - this._currentLocalMaxY\n    ], {\n      duration: 300,\n      timingFunction: 'easeInOutQuad'\n    });\n\n    this._minMaxYAnimation.start();\n\n    // console.log(this._minMaxYAnimation.id, 'local deltas (min, max):', this._minMaxYAnimation._deltaValues);\n\n    this._minMaxYAnimation.on(TweenEvents.COMPLETE, _ => {\n      // console.log( this._minMaxYAnimation.id, 'complete' );\n      this._minMaxYAnimation = null;\n    });\n  }\n\n  /**\n   * @private\n   */\n  _onRendererResize () {\n    // request for future animation update\n    this._viewportRangeUpdateNeeded = true;\n  }\n\n  /**\n   * @param {Series} line\n   * @private\n   */\n  _onSeriesVisibleChange (line) {\n    // find new extremes and scale\n    this._updateExtremes();\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   * @return {number}\n   * @private\n   */\n  _computeViewportPixelX (minX = this._viewportRange[ 0 ], maxX = this._viewportRange[ 1 ]) {\n    return ( maxX - minX ) / this.chartWidth;\n  }\n\n  /**\n   * @param {number} localMinX\n   * @param {number} localMaxX\n   * @return {number}\n   * @private\n   */\n  _computeViewportPadding (localMinX, localMaxX) {\n    return this._computeViewportPixelX( localMinX, localMaxX ) * 16;\n  }\n\n  /**\n   * @param {Function} fn\n   * @private\n   */\n  _eachSeries (fn = () => {}) {\n    for (let i = 0; i < this._series.length; ++i) {\n      fn( this._series[ i ] );\n    }\n  }\n}\n","export class Clock {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateMs = 0;\n\n  constructor () {\n    this._lastUpdateMs = this.now;\n  }\n\n  /**\n   * @return {number}\n   */\n  getDelta () {\n    const now = this.now;\n    const delta = ( now - this._lastUpdateMs ) / 1000;\n    this._lastUpdateMs = now;\n\n    return delta;\n  }\n\n  /**\n   * @return {number}\n   */\n  get now () {\n    return (performance || Date).now();\n  }\n}\n","import './style/telechart.scss';\n\nimport { AnimationSource, AnimationSourceEvents } from './core/animation/AnimationSource';\nimport { SvgRenderer } from \"./core/SvgRenderer\";\nimport { Chart } from './core/chart/Chart';\nimport { Clock } from './core/misc/Clock';\n\nimport {\n  addClass,\n  interpolateThemeClass,\n  removeClass,\n  resolveElement,\n  ChartThemes,\n  setAttributesNS,\n  cssText, createElement, ROOT_CLASS_NAME\n} from \"./utils\";\n\nexport class Telechart {\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _rootElement = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _themeName = ChartThemes.default;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _title = '';\n\n  /**\n   * @type {SVGTextElement}\n   * @private\n   */\n  _titleElement = null;\n\n  /**\n   * @type {Clock}\n   * @private\n   */\n  _clock = null;\n\n  /**\n   * @type {AnimationSource}\n   * @private\n   */\n  _animationSource = null;\n\n  /**\n   * @static\n   * @param {Element | string} mountTo Element or selector\n   * @param {Object} options\n   */\n  static create (mountTo, options = {}) {\n    const chart = new Telechart();\n\n    chart.setOptions( options );\n    chart.mount( resolveElement( mountTo ) );\n    chart.initialize();\n\n    chart.firstRender();\n\n    return chart;\n  }\n\n  /**\n   * @param {Object} options\n   */\n  setOptions (options = {}) {\n    this._options = options;\n  }\n\n  /**\n   * @param {Element} parent\n   */\n  mount (parent) {\n    const root = createElement('div', {\n      attrs: {\n        class: ROOT_CLASS_NAME\n      }\n    });\n\n    parent.appendChild( root );\n\n    this._rootElement = root;\n    this._renderer = new SvgRenderer( root );\n  }\n\n  /**\n   * Initialize the chart\n   */\n  initialize () {\n    this.setTheme( this._options.theme || ChartThemes.default );\n    this.setTitle( this._options.title );\n\n    // create components\n    this._createChart();\n\n    // create animation loop\n    this._clock = new Clock();\n    this._animationSource = new AnimationSource( 60, 1 ); // fps, timeScale\n    this._animationSource.on(AnimationSourceEvents.UPDATE, deltaTime => {\n      this.update( deltaTime );\n    });\n\n    requestAnimationFrame(_ => {\n      this.animate();\n    });\n  }\n\n  /**\n   * Draws first frame\n   */\n  firstRender () {\n    this._chart.firstRender();\n  }\n\n  /**\n   * Animation loop\n   */\n  animate () {\n    const deltaTime = this._clock.getDelta();\n    this._animationSource.update( deltaTime );\n\n    requestAnimationFrame(_ => this.animate());\n  }\n\n  /**\n   * Update loop\n   */\n  update (deltaTime) {\n    this._chart.update( deltaTime );\n  }\n\n  /**\n   * @param {string} themeName\n   */\n  setTheme (themeName) {\n    const rootElement = this._rootElement;\n\n    removeClass(\n      rootElement,\n      Object.keys( ChartThemes )\n        .map( interpolateThemeClass )\n    );\n\n    addClass(\n      rootElement,\n      interpolateThemeClass( themeName )\n    );\n\n    this._themeName = themeName;\n  }\n\n  /**\n   * @param {string} title\n   */\n  setTitle (title) {\n    this._title = title;\n\n    !this._titleElement\n      ? this._createTitle( title )\n      : this._updateTitle( title );\n  }\n\n  /**\n   * Destroys the chart instance\n   */\n  destroy () {\n    this._renderer && this._renderer.destroy();\n    this._rootElement = null;\n    this._renderer = null;\n  }\n\n  /**\n   * @return {string}\n   */\n  get themeName () {\n    return this._themeName;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _createTitle (title = this._options.title) {\n    if (!title) {\n      return;\n    }\n\n    const text = this._renderer.createText(title, {\n      class: 'telechart-title',\n      x: 16,\n      y: 36,\n      textAnchor: 'start',\n      style: cssText({\n        opacity: 0\n      })\n    });\n\n    setTimeout(_ => {\n      setAttributesNS(text, {\n        style: cssText({\n          opacity: 1\n        })\n      });\n    }, 200);\n\n    this._titleElement = text;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _updateTitle (title) {\n    if (!this._titleElement) {\n      return;\n    }\n    const tspan = this._titleElement.querySelector( 'tspan' );\n    tspan.innerHTML = title;\n  }\n\n  /**\n   * @private\n   */\n  _createChart () {\n    this._chart = new Chart(\n      this._renderer,\n      this._options\n    );\n  }\n}\n","export * from './Telechart';\n"],"sourceRoot":""}