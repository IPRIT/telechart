{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/constants.js","webpack:///./src/utils/animation.js","webpack:///./src/utils/base.js","webpack:///./src/utils/browser.js","webpack:///./src/utils/text.js","webpack:///./src/utils/dom.js","webpack:///./src/utils/events.js","webpack:///./src/utils/svg.js","webpack:///./src/utils/themes.js","webpack:///./src/utils/algorithms.js","webpack:///./src/utils/index.js","webpack:///./src/core/misc/EventEmitter.js","webpack:///./src/core/animation/AnimationSource.js","webpack:///./src/core/SvgRenderer.js","webpack:///./src/core/chart/ChartTypes.js","webpack:///./src/core/point/Point.js","webpack:///./src/core/series/Series.js","webpack:///./src/core/animation/Tween.js","webpack:///./src/core/chart/Chart.js","webpack:///./src/core/misc/Clock.js","webpack:///./src/Telechart.js","webpack:///./src/index.js","webpack:///./demo/telechart-demo.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TimeRanges","second","minute","hour","day","week","month","year","FRAMES_DELTA_SEC","warp","deltaTime","framesDeltaSec","warpRatio","animationTimeout","timeoutMs","_len","arguments","length","args","Array","_key","Promise","resolve","fulfillmentCallback","apply","concat","cb","requestAnimationFrame","setTimeout","_","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","objectEachKey","fn","keys","forEach","objectMapKey","map","clampNumber","min","max","Infinity","_ref","Math","ensureNumber","Number","isNaN","isObject","isDate","Date","valueOf","isBrowserSafari","test","navigator","userAgent","isTouchEventsSupported","document","documentElement","capitalize","text","String","toUpperCase","substr","cssText","styleObject","reduce","css","prop","camelToKebabCase","toLowerCase","replace","parseQueryString","href","queryString","split","slice","part","keyValue","result","obj","assign","createElement","tagName","options","children","element","createElementNS","attrs","useNS","setAttributesNS","attrsNS","setAttributes","isArray","node","innerHTML","appendChild","resolveElement","elementOrSelector","querySelector","getElementOffset","top","left","getClientRects","rect","getBoundingClientRect","win","ownerDocument","defaultView","pageYOffset","pageXOffset","getElementRelativeOffset","targetElement","relativeElement","targetOffset","relativeOffset","scrollTop","scrollLeft","getDocumentHeight","body","scrollHeight","offsetHeight","clientHeight","getWindowHeight","window","innerHeight","getElementHeight","getElementWidth","innerWidth","clientWidth","getElementScrollHeight","getElementScrollWidth","scrollWidth","offsetWidth","camelCaseAttrWhiteList","attr","includes","setAttribute","setAttributeNS","hasClass","className","classList","contains","RegExp","addClass","classNames","_element$classList","add","trim","removeClass","_element$classList2","remove","existingClasses","classesToDelete","Set","has","addEventListenerOnce","eventName","console","warn","addEventListener","listener","ev","removeEventListener","parseSimplePathText","pathText","parseRegex","segments","exec","index","lastIndex","type","x","y","push","segmentsToPathText","j","join","ROOT_CLASS_NAME","interpolateThemeClass","themeName","ChartThemes","default","dark","ChartThemesColors","arraysEqual","arrayA","arrayB","arrayMinIndex","array","startIndex","endIndex","minIndex","arrayMin","arrayMaxIndex","maxIndex","arrayMax","arrayMinMaxIndexes","arrayMinMax","_arrayMinMaxIndexes","arraySum","sum","arrayAvg","binarySearchIndexes","order","right","mid","binarySearchObjectIndexes","__webpack_exports__","EventEmitter","this","_eventListeners","_proto","emit","_fireEvent","on","context","once","_subscribeEvent","_this","_len2","_key2","listenerIndex","findIndex","splice","removeAllListeners","_allocateEvent","eventListeners","_len3","_key3","_eventListeners$i","AnimationSourceEvents","AnimationSource","_EventEmitter","updatesPerSecond","timeScale","_timeElapsed","_timeScale","_updateInvokes","_updatesPerSecond","_updateEach","_lastUpdateAt","_paused","FRAMES_PER_SECOND","update","_callUpdate","dispose","set","telechartTitle","TELECHART_NAME","INTERNAL_AUTOINCREMENT","SvgRenderer","contextElement","_id","_parentContainer","_svgContainer","_minHeight","_minWidth","_width","_height","_isInitialized","_init","createGroup","parent","group","NS","createDesc","createText","tspan","textElement","createDefs","defs","createPath","pathElement","updatePath","createRect","width","height","rectElement","selector","querySelectorAll","from","destroy","_detachEvents","_clearParentContainer","_updateDimensions","_createSvgContainer","_insertSvgContainer","_attachEvents","Error","xmlns","version","viewBox","class","_onResize","_attachResizeListener","_detachResizeListener","_resizeListener","ChartTypes","POINT_AUTOINCREMENT","Point","_type","_x","_y","_svgX","_svgY","setType","pointType","setX","setY","setXY","addX","addY","addXY","setSvgX","svgX","setSvgY","svgY","setSvgXY","SERIES_AUTOINCREMENT","Series","renderer","settings","_parent","_renderer","_chart","_settings","_seriesOptions","_xAxis","_yAxis","_name","_label","_color","_visible","_group","_pathText","_pathElement","_pathUpdateNeeded","_points","_localMaxY","_localMinY","_parseSettings","initialize","_createPoints","_addEvents","updateViewportPoints","firstRender","_createGroup","_createPath","setChart","chart","setVisible","setInvisible","toggleVisible","updateLocalExtremes","_this$_chart$_viewpor","_viewportRangeIndexes","rangeStartIndex","rangeEndIndex","_arrayMinMax","minValue","maxValue","_useViewportPointsInterval","updateViewportPointsByInterval","updateViewportPointsByArray","indexes","_viewportPointsIndexes","pointIndex","point","_projectXToSvg","_projectYToSvg","_this$_chart$_viewpor2","_updatePathText","requestPathUpdate","_this$_settings","xAxis","yAxis","label","color","_this$_settings$optio","id","fill","stroke","strokeWidth","strokeLinejoin","strokeLinecap","_computePathTextByInterval","_computePathTextByArray","_toRelativeX","_viewportPixelX","chartHeight","currentLocalMinY","_viewportPixelY","_this2","_onRendererResize","_viewportRange","interval","TWEEN_ID","TweenState","NOT_STARTED","RUNNING","PAUSED","COMPLETED","CANCELLED","TweenEvents","DEFAULT_PARAMS","duration","timingFunction","Tween","target","properties","deltaValues","params","_params","_state","_duration","_timingFunctionName","_timingFunction","_target","_properties","_deltaValues","_startValues","_initParams","_construct","isRunning","_updateAnimation","_checkDuration","start","isNotStarted","_getPropertyValues","pause","finish","_dispose","cancel","patchAnimation","setTimeScale","_this$_params","_getTimingFunction","progress","timingProgress","values","_getPropertyValue","functionName","defaultFunctionName","timingFunctions","Chart","_options","_chartHeight","_series","_seriesGroup","_viewportDistance","_viewportLeftPaddingScale","_viewportRightPaddingScale","_viewportRangeUpdateNeeded","_viewportPointsGroupingNeeded","_currentLocalMinY","_currentLocalMaxY","_minMaxYAnimation","_groupingPixels","_initialize","extremesUpdated","updateViewportRange","_approximateViewportPoints","_updateViewportPixel","_eachSeries","line","setViewportRange","minX","maxX","_temp","_ref$skipExtremes","skipExtremes","_ref$preservePadding","preservePadding","_setViewportRange","oldRangeIndexes","_updateViewportIndexes","localExtremesUpdateRequested","updateExtremes","_updateLocalExtremes","_createSeriesGroup","_createSeries","_setInitialRange","transform","_test","style","shapeRendering","_test2","_test3","_ref2","data","series","_ref2$seriesOptions","seriesOptions","groupingOptions","grouping","pixels","columns","types","colors","names","xAxisIndex","column","yAxes","shift","_this$_viewportRangeI","groupingDistanceLimitX","viewportIndexes","groupStartIndex","middleIndex","_this$_viewportRange","rangeStart","rangeEnd","_binarySearchIndexes","minUpperIndex","_binarySearchIndexes2","maxLowerIndex","localMinY","localMaxY","isVisible","oldLocalMinY","oldLocalMaxY","updateAnimation","_patchMinMaxYAnimation","_createMinMaxYAnimation","chartWidth","currentLocalExtremeDifference","globalMinX","globalMaxX","getTime","newMinX","newMaxX","actualPaddingX","_computeViewportPadding","receivedLeftPaddingX","receivedRightPaddingX","_onSeriesVisibleChange","difference","initialViewport","floor","viewportPadding","_this3","_computeViewportPixelX","localMinX","localMaxX","Clock","_lastUpdateMs","now","getDelta","delta","performance","Telechart","_rootElement","_themeName","_title","_titleElement","_clock","_animationSource","mountTo","setOptions","mount","root","setTheme","theme","setTitle","title","_createChart","animate","rootElement","_updateTitle","_createTitle","textAnchor","opacity","Telechart_Telechart","query","location","search","currentThemeName","largeAxisX","largeAxisY1","largeAxisY2","initialDate","dateTick","random","sin","cos","sourceData","charts","chartData","animation","then","container","log","createChart","updatePageTheme","themeButton","themeColor","metaTheme","content","head","newTheme","animations","toggleAnimation","indexOf","stopAnimation","startDate","endDate","curDate","tickDelta","sign","runAnimation"],"mappings":"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","file":"demo.d25d504cc6cb1ff6a3f6.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","const hour = 3600 * 1000;\n\n/**\n * @type {{second: number, minute: number, hour: number, day: number, week: number, month: number, year: number}}\n */\nexport const TimeRanges = {\n  second: 1000,\n  minute: hour / 60,\n  hour,\n  day: hour * 24,\n  week: hour * 24 * 7,\n  month: hour * 24 * 30, // rude\n  year: hour * 24 * 365\n};\n","export const FRAMES_PER_SECOND = 60;\nexport const FRAMES_DELTA_SEC = 1 / 60;\nexport const FRAMES_DELTA_MS = 1000 / 60;\n\n/**\n * @param {number} value\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warp (value, deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return value * warpRatio( deltaTime, framesDeltaSec );\n}\n\n/**\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warpRatio (deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return deltaTime / framesDeltaSec;\n}\n\n/**\n * @param {number} timeoutMs\n * @param {*} args\n * @return {Promise<void>}\n */\nexport function animationTimeout (timeoutMs = 0, ...args) {\n  return new Promise(resolve => {\n    const fulfillmentCallback = resolve.bind( null, ...args );\n    const cb = () => requestAnimationFrame( fulfillmentCallback );\n\n    if (!timeoutMs) {\n      cb();\n    } else {\n      setTimeout( _ => cb(), timeoutMs );\n    }\n  });\n}\n\n// linear\nexport const linear = t => t;\n// accelerating from zero velocity\nexport const easeInQuad = t => t * t;\n// decelerating to zero velocity\nexport const easeOutQuad = t => t * (2 - t);\n// acceleration until halfway, then deceleration\nexport const easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n// accelerating from zero velocity\nexport const easeInCubic = t => t * t * t;\n// decelerating to zero velocity\nexport const easeOutCubic = t => --t * t * t + 1;\n// acceleration until halfway, then deceleration\nexport const easeInOutCubic = t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n// accelerating from zero velocity\nexport const easeInQuart = t => t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuart = t => 1 - --t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuart = t => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t);\n// accelerating from zero velocity\nexport const easeInQuint = t => t * t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuint = t => 1 + --t * t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuint = t => t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n","/**\n * @param {*} object\n * @param {Function} fn\n */\nexport function objectEachKey (object, fn = () => {}) {\n  Object.keys( object ).forEach( fn );\n}\n\n/**\n * @param {*} object\n * @param {Function} fn\n * @return {*[]}\n */\nexport function objectMapKey (object, fn = () => {}) {\n  return Object.keys( object ).map( fn );\n}\n\n/**\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nexport function clampNumber (value, min = -Infinity, max = Infinity) {\n  if (min > max) {\n    [ min, max ] = [ max, min ];\n  }\n  return Math.min(\n    Math.max(ensureNumber(value), min),\n    max\n  );\n}\n\n/**\n * @param {*} value\n * @return {number}\n */\nexport function ensureNumber (value) {\n  value = Number(value);\n  if (Number.isNaN(value)) {\n    return 0;\n  }\n  return value;\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nexport function isObject (value) {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * @param {Date|*} value\n * @return {boolean}\n */\nexport function isDate (value) {\n  return value instanceof Date && !isNaN( value.valueOf() );\n}\n","/**\n * @returns {boolean}\n */\nexport function isBrowserSafari () {\n  return /^((?!chrome|android|crios|fxios).)*safari/i.test( navigator.userAgent );\n}\n\n/**\n * @return {boolean}\n */\nexport function isTouchEventsSupported () {\n  return 'ontouchstart' in document.documentElement;\n}\n","/**\n * @param {string} text\n * @return {string}\n */\nexport function capitalize (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return text[ 0 ].toUpperCase() + text.substr(1);\n}\n\n/**\n * @param {Object} styleObject\n * @returns {string}\n */\nexport function cssText (styleObject) {\n  return Object.keys( styleObject ).reduce((css, prop) => {\n    return `${css ? css + ' ' : ''}${camelToKebabCase( prop )}: ${styleObject[ prop ]};`;\n  }, '');\n}\n\n/**\n * @param {string} text\n * @returns {string}\n */\nexport function camelToKebabCase (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return (\n    text[ 0 ].toLowerCase() + text.substr( 1 )\n  ).replace( /([A-Z])/g, '-$1' ).toLowerCase();\n}\n\n/**\n * @param {string} href\n * @return {*}\n */\nexport function parseQueryString (href) {\n  const queryString = href.split('?').slice(1);\n  if (!queryString.length) {\n    return {};\n  }\n\n  return queryString[ 0 ].split( '&' ).map(part => {\n    const keyValue = part.split( '=' );\n    return {\n      [keyValue[ 0 ]]: keyValue[ 1 ]\n    };\n  }).reduce((result, obj) => {\n    return Object.assign(result, obj);\n  })\n}\n","import { objectEachKey } from \"./base\";\nimport { camelToKebabCase } from './text';\n\n/**\n * @param {string} tagName\n * @param {Object} options\n * @param {Array|*} children\n * @param {string|*} ns\n * @return {Element}\n */\nexport function createElement (tagName, options = {}, children = [], ns = null) {\n  const element = !ns\n    ? document.createElement( tagName )\n    : document.createElementNS( ns, tagName );\n\n  if (options.attrs) {\n    !options.useNS\n      ? setAttributes( element, options.attrs )\n      : setAttributesNS( element, options.attrs, options.attrsNS || null );\n  }\n\n  if (children || Array.isArray( children )) {\n    children = [].concat( children );\n    children.forEach(node => {\n      if (typeof node === 'string') {\n        element.innerHTML += node;\n      } else {\n        element.appendChild( node );\n      }\n    });\n  }\n\n  return element;\n}\n\n/**\n * @param {Element|string} elementOrSelector\n * @return {Element | null}\n */\nexport function resolveElement (elementOrSelector) {\n  if (typeof elementOrSelector !== 'string') {\n    return elementOrSelector;\n  }\n  return document.querySelector( elementOrSelector );\n}\n\n/**\n * @param {Element} element\n * @return {{top: number, left: number}}\n */\nexport function getElementOffset (element) {\n  if (!element) {\n    return { top: 0, left: 0 };\n  }\n\n  // Return zeros for disconnected and hidden (display: none) elements\n  // Support: IE <= 11 only\n  // Running getBoundingClientRect on a\n  // disconnected node in IE throws an error\n  if (element.getClientRects && !element.getClientRects().length) {\n    return { top: 0, left: 0 };\n  }\n\n  // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n  const rect = element.getBoundingClientRect();\n  const win = element.ownerDocument.defaultView;\n  return {\n    top: rect.top + win.pageYOffset,\n    left: rect.left + win.pageXOffset\n  };\n}\n\n/**\n * @param {Element} targetElement\n * @param {Element} relativeElement\n * @return {{ top: number, left: number }}\n */\nexport function getElementRelativeOffset (targetElement, relativeElement) {\n  const targetOffset = getElementOffset(targetElement);\n  const relativeOffset = getElementOffset(relativeElement);\n\n  return {\n    top: targetOffset.top - relativeOffset.top + relativeElement.scrollTop,\n    left: targetOffset.left - relativeOffset.left + relativeElement.scrollLeft\n  };\n}\n\n/**\n * @returns {number}\n */\nexport function getDocumentHeight () {\n  return Math.max(\n    document.body.scrollHeight,\n    document.documentElement.scrollHeight,\n    document.body.offsetHeight,\n    document.documentElement.offsetHeight,\n    document.body.clientHeight,\n    document.documentElement.clientHeight\n  );\n}\n\n/**\n * @returns {number}\n */\nexport function getWindowHeight () {\n  return window.innerHeight ||\n    (document.documentElement || document.body).clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementHeight (element) {\n  return element.innerHeight || element.clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementWidth (element) {\n  return element.innerWidth || element.clientWidth;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollHeight (element) {\n  return Math.max(\n    element.scrollHeight,\n    element.offsetHeight,\n    element.clientHeight\n  );\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollWidth (element) {\n  return Math.max(\n    element.scrollWidth,\n    element.offsetWidth,\n    element.clientWidth\n  );\n}\n\nconst camelCaseAttrWhiteList = [\n  'viewBox'\n];\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n */\nexport function setAttributes (element, attrs = {}) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttribute( attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n * @param {string | *} ns\n */\nexport function setAttributesNS (element, attrs = {}, ns = null) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttributeNS( ns, attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {string} attr\n * @param {*} value\n * @param {string | *} ns\n */\nexport function setAttributeNS (element, attr, value, ns) {\n  // it's a magic but it increases speed for 1-2ms on slow devices\n  // prevent from babel optimisation\n  ns = ns || null;\n  element.setAttributeNS( ns, attr, value );\n}\n\n/**\n * @param {Element} element\n * @param {string} className\n */\nexport function hasClass (element, className) {\n  if (element.classList) {\n    return element.classList.contains( className );\n  }\n  return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test( element.className );\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function addClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    return element.classList.add( ...classNames );\n  }\n\n  let className = element.className;\n\n  for (let i = 0; i < classNames.length; ++i) {\n    if (!hasClass( element, classNames[ i ] )) {\n      className += ` ${classNames[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function removeClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    return element.classList.remove( ...classNames );\n  }\n\n  let existingClasses = element.className.split( ' ' );\n  let classesToDelete = new Set( classNames );\n  let className = '';\n\n  for (let i = 0; i < existingClasses.length; ++i) {\n    if (!classesToDelete.has( existingClasses[ i ] )) {\n      className += ` ${existingClasses[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n","/**\n * @param {Element | Window} element\n * @param {string} eventName\n * @param {Function} cb\n */\nexport function addEventListenerOnce (element, eventName, cb) {\n  if (!element) {\n    return console.warn( 'Element is missing' );\n  }\n\n  const listener = ev => {\n    cb( ev );\n    element.removeEventListener( eventName, listener );\n  };\n\n  element.addEventListener( eventName, listener );\n}\n","import { ensureNumber } from \"./index\";\n\n/**\n * Returns path segments\n *\n * @param {string} pathText\n * @return {Array<Array<Array<number>>>}\n */\nexport function parseSimplePathText (pathText) {\n  const parseRegex = /([ML])\\s?(-?\\d+\\.?(?:\\d+)?)\\s(-?\\d+\\.?(?:\\d+)?)/gi;\n\n  const segments = [];\n  let m;\n\n  while ((m = parseRegex.exec( pathText )) !== null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (m.index === parseRegex.lastIndex) {\n      parseRegex.lastIndex++;\n    }\n\n    const type = m[ 1 ];\n    const x = ensureNumber( m[2] );\n    const y = ensureNumber( m[3] );\n\n    if (type === 'm' || !segments.length) {\n      segments.push([ [ x, y ] ]);\n    } else {\n      const lastSegment = segments[ segments.length - 1 ];\n      lastSegment.push([ x, y ]);\n    }\n  }\n\n  return segments;\n}\n\n/**\n * @param {Array<Array<Array<number>>>} segments\n * @return {string}\n */\nexport function segmentsToPathText (segments) {\n  let result = '';\n\n  for (let i = 0; i < segments.length; ++i) {\n    result += 'M ';\n    for (let j = 0; j < segments[ i ].length; ++j) {\n      const coordinates = segments[ i ][ j ];\n      if (j !== 0) {\n        result += 'L ';\n      }\n      result += coordinates.join(' ') + ' ';\n    }\n  }\n\n  return result;\n}\n","export const ROOT_CLASS_NAME = 'telechart-root';\n\n/**\n * @param {string} themeName\n * @returns {string}\n */\nexport function interpolateThemeClass (themeName) {\n  return `${ROOT_CLASS_NAME}_theme_${themeName}`;\n}\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemes = {\n  default: 'default',\n  dark: 'dark'\n};\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemesColors = {\n  default: '#ffffff',\n  dark: '#242F3E'\n};\n","/**\n * @param {Array<*>} arrayA\n * @param {Array<*>} arrayB\n * @param {string | *} key\n * @return {boolean}\n */\nexport function arraysEqual (arrayA, arrayB, key = null) {\n  if (!Array.isArray(arrayA)\n    || !Array.isArray(arrayB)\n    || arrayA.length !== arrayB.length) {\n    return false;\n  }\n  for (let i = 0; i < arrayA.length; ++i) {\n    if (key) {\n      if (arrayA[ i ][ key ] !== arrayB[ i ][ key ]) {\n        return false;\n      }\n    } else if (arrayA[ i ] !== arrayB[ i ]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMinIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return minIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMin (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMinIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMaxIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n  }\n  return maxIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMax (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMaxIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMaxIndexes (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return [ minIndex, maxIndex ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMax (array, startIndex = 0, endIndex = array.length - 1) {\n  const [ minIndex, maxIndex ] = arrayMinMaxIndexes( array, startIndex, endIndex );\n  return [\n    array[ minIndex ],\n    array[ maxIndex ],\n  ];\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arraySum (array) {\n  let length = array.length;\n  let sum = 0;\n\n  while (length--) {\n    sum += array[ length ];\n  }\n\n  return sum;\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arrayAvg (array) {\n  let length = array.length;\n  let result = arraySum( array );\n\n  // prevent from dividing by zero\n  if (length) {\n    result = result / length;\n  }\n\n  return result;\n}\n\n/**\n * Finds boundary indexes in an array of numbers\n *\n * @param {Array<number>} array\n * @param {number} value\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchIndexes (array, value, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ] === value) {\n    left = right;\n  } else if (array[ left ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n\n/**\n * Finds boundary indexes in an array of objects\n *\n * @param {Array<Object>} array\n * @param {number} value\n * @param {string} key\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchObjectIndexes (array, value, key, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ][ key ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ][ key ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ][ key ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ][ key ] === value) {\n    left = right;\n  } else if (array[ left ][ key ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n","export * from './constants';\nexport * from './animation';\nexport * from './base';\nexport * from './browser';\nexport * from './dom';\nexport * from './events';\nexport * from './svg';\nexport * from './text';\nexport * from './themes';\nexport * from './algorithms';\n","/**\n * Simple event emitter for better performance and app size\n *\n * @author Alexander Belov\n */\nexport class EventEmitter {\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _eventListeners = {};\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   */\n  emit (eventName, ...args) {\n    this._fireEvent( eventName, ...args );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  on (eventName, cb, context = null) {\n    this.addEventListener( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  once (eventName, cb, context = null) {\n    this.addEventListenerOnce( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListener (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    this._subscribeEvent( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListenerOnce (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    const listener = (...args) => {\n      cb.apply( context, args );\n      this.removeEventListener( eventName, listener );\n    };\n\n    this.addEventListener( eventName, listener );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} listener\n   */\n  removeEventListener (eventName, listener) {\n    if (!this._eventListeners[ eventName ]) {\n      return;\n    }\n\n    const listenerIndex = this._eventListeners[ eventName ].findIndex(([ cb ]) => {\n      return listener === cb;\n    });\n\n    if (listenerIndex < 0) {\n      return;\n    }\n\n    this._eventListeners[ eventName ].splice( listenerIndex, 1 );\n  }\n\n  /**\n   * @param {string | *} eventName\n   */\n  removeAllListeners (eventName = null) {\n    if (!eventName) {\n      this._eventListeners = {};\n    } else if (this._eventListeners[ eventName ]) {\n      this._eventListeners[ eventName ] = null;\n      delete this._eventListeners[ eventName ];\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @private\n   */\n  _allocateEvent (eventName) {\n    this._eventListeners[ eventName ] = this._eventListeners[ eventName ] || []\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  _subscribeEvent (eventName, cb, context) {\n    this._allocateEvent( eventName );\n    this._eventListeners[ eventName ].push([ cb, context ]);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   * @private\n   */\n  _fireEvent (eventName, ...args) {\n    const eventListeners = this._eventListeners[ eventName ] || [];\n\n    for (let i = 0; i < eventListeners.length; ++i) {\n      const [ cb, context ] = eventListeners[ i ];\n      cb.apply( context, args );\n    }\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { FRAMES_PER_SECOND } from '../../utils';\n\nexport const AnimationSourceEvents = {\n  UPDATE: 'update'\n};\n\nexport class AnimationSource extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeElapsed = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateInvokes = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updatesPerSecond = 60;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateEach = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateAt = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _paused = false;\n\n  /**\n   * @param {number} updatesPerSecond\n   * @param {number} timeScale\n   */\n  constructor (updatesPerSecond = 60, timeScale = 1) {\n    super();\n\n    this._updatesPerSecond = Math.min( 60, Math.max( 1e-8, updatesPerSecond ) );\n    this._updateEach = FRAMES_PER_SECOND / this._updatesPerSecond;\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (this._paused) {\n      return;\n    }\n\n    this._timeElapsed += deltaTime;\n    this._updateInvokes++;\n\n    if (this._updateInvokes % this._updateEach < 1) {\n      this._callUpdate( (this._timeElapsed - this._lastUpdateAt) * this._timeScale );\n      this._lastUpdateAt = this._timeElapsed;\n    }\n  }\n\n  /**\n   * Disposes the instance\n   */\n  dispose () {\n    this._paused = true;\n    this.removeAllListeners();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._paused;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return !this._paused;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set timeScale (value) {\n    this._timeScale = value;\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _callUpdate (deltaTime) {\n    this.emit( AnimationSourceEvents.UPDATE, deltaTime );\n  }\n}\n","import { EventEmitter } from \"./misc/EventEmitter\";\nimport {\n  capitalize,\n  clampNumber,\n  createElement,\n  getElementWidth,\n  resolveElement, setAttributeNS,\n  setAttributes,\n  setAttributesNS\n} from \"../utils\";\n\nconst telechartTitle = `${capitalize( TELECHART_NAME )} ${TELECHART_VERSION} (c) ${TELECHART_AUTHOR}`;\n\nlet INTERNAL_AUTOINCREMENT = 1;\n\nexport class SvgRenderer extends EventEmitter {\n\n  static NS = 'http://www.w3.org/2000/svg';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = INTERNAL_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parentContainer = null;\n\n  /**\n   * @type {SVGElement}\n   * @private\n   */\n  _svgContainer = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minHeight = 400;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minWidth = 10;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _width = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _isInitialized = false;\n\n  /**\n   * @param {Element|string} contextElement\n   */\n  constructor (contextElement) {\n    super();\n\n    this._parentContainer = resolveElement( contextElement );\n    this._init();\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>} children\n   * @param {Element} parent\n   * @return {Element}\n   */\n  createGroup (attrs = {}, children = [], parent = this._svgContainer) {\n    const group = createElement('g', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Element} parent\n   * @return {SVGDescElement}\n   */\n  createDesc (text = '', parent = this._svgContainer) {\n    const group = createElement('desc', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGTextElement}\n   */\n  createText (text = '', attrs = {}, parent = this._svgContainer) {\n    const tspan = createElement('tspan', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n\n    const textElement = createElement('text', {\n      useNS: true,\n      attrs\n    }, tspan, SvgRenderer.NS);\n\n    parent.appendChild( textElement );\n\n    return textElement;\n  }\n\n  /**\n   * @param {Element[]} defs\n   * @param {Element} parent\n   * @return {SVGDefsElement}\n   */\n  createDefs (defs = [], parent = this._svgContainer) {\n    defs = [].concat( defs );\n\n    const element = createElement('defs', {\n      useNS: true\n    }, defs, SvgRenderer.NS);\n    parent.appendChild( element );\n\n    return element;\n  }\n\n  /**\n   * @param {string} pathText\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGPathElement}\n   */\n  createPath (pathText, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, { d: pathText });\n\n    const pathElement = createElement('path', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n    parent.appendChild( pathElement );\n\n    return pathElement;\n  }\n\n  /**\n   * @param {SVGPathElement} pathElement\n   * @param {string} pathText\n   */\n  updatePath (pathElement, pathText) {\n    setAttributeNS( pathElement, 'd', pathText, null );\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   * @param {*} attrs\n   * @param {SVGElement | Element} parent\n   * @return {SVGRectElement}\n   */\n  createRect (width, height, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, {\n      width, height\n    });\n\n    const rectElement = createElement('rect', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( rectElement );\n\n    return rectElement;\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Element}\n   */\n  querySelector (selector) {\n    return this._svgContainer.querySelector( selector );\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Array<Element>}\n   */\n  querySelectorAll (selector) {\n    return Array.from( this._svgContainer.querySelectorAll( selector ) );\n  }\n\n  /**\n   * Destroy the renderer\n   */\n  destroy () {\n    this._detachEvents();\n    this._clearParentContainer();\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {Element}\n   */\n  get parentContainer () {\n    return this._parentContainer;\n  }\n\n  /**\n   * @return {SVGElement}\n   */\n  get svgContainer () {\n    return this._svgContainer;\n  }\n\n  /**\n   * @return {number}\n   */\n  get width () {\n    return this._width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get height () {\n    return this._height;\n  }\n\n  /**\n   * @return {string}\n   */\n  get viewBox () {\n    return [ 0, 0, this._width, this._height ].join( ' ' );\n  }\n\n  /**\n   * @private\n   */\n  _init () {\n    if (this._isInitialized) {\n      return;\n    }\n\n    this._updateDimensions();\n    this._svgContainer = this._createSvgContainer();\n    this._insertSvgContainer();\n\n    this.createDesc( telechartTitle );\n\n    this._attachEvents();\n\n    this._isInitialized = true;\n  }\n\n  /**\n   * @return {Element}\n   * @private\n   */\n  _createSvgContainer () {\n    const parentContainer = this._parentContainer;\n\n    if (!parentContainer) {\n      throw new Error( 'Parent container is not provided' );\n    }\n\n    return createElement('svg', {\n      useNS: false,\n      attrs: {\n        xmlns: SvgRenderer.NS,\n        version: '1.1',\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox,\n        class: 'telechart-render'\n      }\n    }, [], SvgRenderer.NS);\n  }\n\n  /**\n   * @private\n   */\n  _insertSvgContainer () {\n    this._clearParentContainer();\n    this._parentContainer.appendChild( this._svgContainer );\n  }\n\n  /**\n   * @private\n   */\n  _updateDimensions () {\n    this._width = clampNumber(\n      getElementWidth( this._parentContainer ),\n      this._minWidth\n    );\n    this._height = this._minHeight;\n\n    if (this._svgContainer) {\n      setAttributes(this._svgContainer, {\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  _clearParentContainer () {\n    // clears the child content\n    this._parentContainer.innerHTML = '';\n  }\n\n  /**\n   * @private\n   */\n  _onResize (ev) {\n    this._updateDimensions();\n    this.emit( 'resize', ev );\n  }\n\n  /**\n   * @private\n   */\n  _attachEvents () {\n    this._attachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _detachEvents () {\n    this._detachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _attachResizeListener () {\n    if (this._resizeListener) {\n      this._detachResizeListener();\n    }\n\n    this._resizeListener = this._onResize.bind( this );\n    window.addEventListener( 'resize', this._resizeListener );\n  }\n\n  /**\n   * @private\n   */\n  _detachResizeListener () {\n    if (!this._resizeListener) {\n      return;\n    }\n\n    window.removeEventListener( 'resize', this._resizeListener );\n    this._resizeListener = null;\n  }\n}\n","/**\n * @type {{x: string, line: string}}\n */\nexport const ChartTypes = {\n  x: 'x',\n  line: 'line'\n};\n","export const PointTypes = {\n  point: 'point',\n  group: 'group',\n};\n\nlet POINT_AUTOINCREMENT = 1;\n\nexport class Point {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = POINT_AUTOINCREMENT++;\n\n  /**\n   * @enum 'point' | 'group'\n   * @type {string}\n   * @private\n   */\n  _type = 'point';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _x = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _y = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgY = 0;\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor (x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n  }\n\n  /**\n   * @param {string} pointType\n   */\n  setType (pointType = 'point') {\n    this._type = pointType;\n  }\n\n  /**\n   * @param {number} x\n   */\n  setX (x) {\n    this._x = x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  setY (y) {\n    this._y = y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  setXY (x, y) {\n    this.setX( x );\n    this.setY( y );\n  }\n\n  /**\n   * @param {number} x\n   */\n  addX (x) {\n    this._x += x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  addY (y) {\n    this._y += y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  addXY (x, y) {\n    this.addX( x );\n    this.addY( y );\n  }\n\n  /**\n   * @param {number} svgX\n   */\n  setSvgX (svgX) {\n    this._svgX = svgX;\n  }\n\n  /**\n   * @param {number} svgY\n   */\n  setSvgY (svgY) {\n    this._svgY = svgY;\n  }\n\n  /**\n   * @param {number} svgX\n   * @param {number} svgY\n   */\n  setSvgXY (svgX, svgY) {\n    this._svgX = svgX;\n    this._svgY = svgY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get x () {\n    return this._x;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get y () {\n    return this._y;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgX () {\n    return this._svgX;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgY () {\n    return this._svgY;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get type () {\n    return this._type;\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { arrayMinMax, arraysEqual } from '../../utils';\nimport { Point } from '../point/Point';\nimport { PointGroup } from '../point/PointGroup';\n\nlet SERIES_AUTOINCREMENT = 1;\n\nexport class Series extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = SERIES_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parent = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   * @private\n   */\n  _settings = {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _seriesOptions = {};\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _yAxis = [];\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _name = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _label = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _color = '#31a8dc';\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _visible = true;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _group = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _pathText = null;\n\n  /**\n   * @type {SVGPathElement}\n   * @private\n   */\n  _pathElement = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _pathUpdateNeeded = false;\n\n  /**\n   * @type {Array<Point>}\n   * @private\n   */\n  _points = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Element} parent\n   * @param {*} settings\n   */\n  constructor (renderer, parent, settings = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._parent = parent;\n    this._settings = settings;\n    this._parseSettings();\n\n    this.initialize();\n  }\n\n  /**\n   * Initializes series with options\n   */\n  initialize () {\n    this._createPoints();\n    this._addEvents();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (this._pathUpdateNeeded) {\n      this.updateViewportPoints();\n      this.updatePath();\n\n      this._pathUpdateNeeded = false;\n    }\n  }\n\n  /**\n   * Creates path\n   */\n  firstRender () {\n    if (this._pathElement) {\n      return;\n    }\n\n    // update svgX & svgY for each point\n    this.updateViewportPoints();\n\n    // creates and stores wrapper for following path element\n    this._createGroup();\n\n    // creates and stores initial path element\n    this._createPath();\n  }\n\n  /**\n   * @param {Chart} chart\n   */\n  setChart (chart) {\n    this._chart = chart;\n  }\n\n  /**\n   * Shows series on the chart\n   */\n  setVisible () {\n    this._visible = true;\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Hides series from the chart\n   */\n  setInvisible () {\n    this._visible = false;\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Toggles series\n   */\n  toggleVisible () {\n    this._visible\n      ? this.setInvisible()\n      : this.setVisible();\n  }\n\n  /**\n   * @private\n   */\n  updateLocalExtremes () {\n    const [ rangeStartIndex, rangeEndIndex ] = this._chart._viewportRangeIndexes;\n\n    const [ minValue, maxValue ] = arrayMinMax(\n      this._yAxis, rangeStartIndex, rangeEndIndex\n    );\n\n    this._localMinY = minValue;\n    this._localMaxY = maxValue;\n  }\n\n  /**\n   * Updates viewport points\n   */\n  updateViewportPoints () {\n    this._chart._useViewportPointsInterval\n      ? this.updateViewportPointsByInterval()\n      : this.updateViewportPointsByArray();\n  }\n\n  /**\n   * Updates points by array of points\n   */\n  updateViewportPointsByArray () {\n    const indexes = this._chart._viewportPointsIndexes;\n\n    for (let i = 0; i < indexes.length; ++i) {\n      const pointIndex = indexes[ i ];\n      const point = this._points[ pointIndex ];\n      point.setSvgXY(\n        this._projectXToSvg( point.x ),\n        this._projectYToSvg( point.y ),\n      );\n    }\n  }\n\n  /**\n   * Updates points by interval\n   */\n  updateViewportPointsByInterval () {\n    const [ startIndex, endIndex ] = this._chart._viewportPointsIndexes;\n    for (let i = startIndex; i <= endIndex; ++i) {\n      const point = this._points[ i ];\n      point.setSvgXY(\n        this._projectXToSvg( point.x ),\n        this._projectYToSvg( point.y ),\n      );\n    }\n  }\n\n  /**\n   * Recompute path text\n   */\n  updatePath () {\n    this._updatePathText();\n    this._renderer.updatePath( this._pathElement, this._pathText );\n  }\n\n  /**\n   * Mark to update path in next animation frame\n   */\n  requestPathUpdate () {\n    this._pathUpdateNeeded = true;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isVisible () {\n    return this._visible;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @private\n   */\n  _parseSettings () {\n    const {\n      xAxis, yAxis,\n      label, type,\n      color, name,\n      options = {}\n    } = this._settings;\n\n    this._xAxis = xAxis;\n    this._yAxis = yAxis;\n    this._label = label;\n    this._color = color;\n    this._name = name;\n\n    this._seriesOptions = options;\n  }\n\n  /**\n   * @private\n   */\n  _createGroup () {\n    this._group = this._renderer.createGroup({\n      class: 'telechart-series-path-group',\n      id: `telechart-path-${this._id}`,\n      x: 0,\n      y: 0\n    }, [], this._parent);\n  }\n\n  /**\n   * @private\n   */\n  _createPath () {\n    this._updatePathText();\n\n    this._pathElement = this._renderer.createPath(this._pathText, {\n      class: 'telechart-series-path',\n      d: this._pathText,\n      fill: 'none',\n      stroke: this._color,\n      strokeWidth: '2',\n      strokeLinejoin: 'round',\n      strokeLinecap: 'round'\n    }, this._group);\n  }\n\n  /**\n   * @private\n   */\n  _updatePathText () {\n    this._pathText = this._chart._useViewportPointsInterval\n      ? this._computePathTextByInterval( this._chart._viewportPointsIndexes )\n      : this._computePathTextByArray( this._chart._viewportPointsIndexes );\n  }\n\n  /**\n   * @private\n   */\n  _createPoints () {\n    const xAxis = this._xAxis;\n    const yAxis = this._yAxis;\n\n    for (let i = 0; i < xAxis.length; ++i) {\n      this._points.push(\n        new Point( xAxis[ i ], yAxis[ i ] )\n      );\n    }\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   * @private\n   */\n  _projectXToSvg (x) {\n    return this._toRelativeX( x ) / this._chart._viewportPixelX;\n  }\n\n  /**\n   * @param {number} y\n   * @return {number}\n   * @private\n   */\n  _projectYToSvg (y) {\n    return this._chart.chartHeight - ( y - this._chart.currentLocalMinY ) / this._chart._viewportPixelY;\n  }\n\n  /**\n   * @private\n   */\n  _addEvents () {\n    this._renderer.on('resize', _ => {\n      this._onRendererResize();\n    });\n  }\n\n  /**\n   * @private\n   */\n  _onRendererResize () {\n    this._pathUpdateNeeded = true;\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   * @private\n   */\n  _toRelativeX (x) {\n    return x - this._chart._viewportRange[ 0 ];\n  }\n\n  /**\n   * @param {Array<number>} indexes\n   * @return {string}\n   * @private\n   */\n  _computePathTextByArray (indexes) {\n    let result = '';\n\n    if (!indexes.length) {\n      return result;\n    }\n\n    result += 'M';\n\n    let point;\n\n    for (let i = 0; i < indexes.length; ++i) {\n      if (i !== 0) {\n        result += 'L';\n      }\n\n      point = this._points[ indexes[ i ] ];\n\n      result += point.svgX + ' ' + point.svgY;\n    }\n\n    return result;\n  }\n\n  /**\n   * @param {Array<number>} interval\n   * @return {string}\n   * @private\n   */\n  _computePathTextByInterval (interval) {\n    let result = '';\n\n    if (!interval.length\n      || interval[ 1 ] - interval[ 0 ] <= 0) {\n      return result;\n    }\n\n    result += 'M';\n\n    const [ startIndex, endIndex ] = interval;\n\n    for (let i = startIndex; i <= endIndex; ++i) {\n      const point = this._points[ i ];\n\n      if (i !== startIndex) {\n        result += 'L';\n      }\n\n      result += point.svgX + ' ' + point.svgY;\n    }\n\n    return result;\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport * as timingFunctions from '../../utils';\n\nlet TWEEN_ID = 1;\n\nexport const TweenState = {\n  NOT_STARTED: 1,\n  RUNNING: 2,\n  PAUSED: 3,\n  COMPLETED: 4,\n  CANCELLED: 5\n};\n\nexport const TweenEvents = {\n  STARTED: 'started',\n  PAUSED: 'paused',\n  COMPLETE: 'complete',\n  CANCELLED: 'cancelled'\n};\n\nconst DEFAULT_PARAMS = {\n  timeScale: 1,\n  duration: 500,\n  timingFunction: 'linear'\n};\n\nexport class Tween extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = TWEEN_ID++;\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _params = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _state = TweenState.NOT_STARTED;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeScale = DEFAULT_PARAMS.timeScale;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeElapsed = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _duration = DEFAULT_PARAMS.duration;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _timingFunctionName = DEFAULT_PARAMS.timingFunction;\n\n  /**\n   * @type {Function}\n   * @private\n   */\n  _timingFunction = () => {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _target = null;\n\n  /**\n   * @type {Array<string>}\n   * @private\n   */\n  _properties = [];\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  _deltaValues = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _startValues = [];\n\n  /**\n   * @param {Array<*>} args\n   * @returns {Tween}\n   */\n  static create (...args) {\n    return new Tween( ...args );\n  }\n\n  /**\n   * @param {*} target\n   * @param {string|Array<string>} properties\n   * @param {number|Array<number>} deltaValues\n   * @param {*} params\n   */\n  constructor (target, properties = [], deltaValues = [], params = {}) {\n    super();\n\n    this._target = target;\n    this._properties = [].concat( properties );\n    this._deltaValues = [].concat( deltaValues );\n    this._initParams( params );\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (!this.isRunning) {\n      return;\n    }\n\n    deltaTime *= this._timeScale;\n    this._timeElapsed += deltaTime * 1000;\n\n    this._updateAnimation( deltaTime );\n    this._checkDuration();\n  }\n\n  /**\n   * Runs animation\n   */\n  start () {\n    if (this.isNotStarted) {\n      this._startValues = this._getPropertyValues( this._properties );\n    }\n    this._state = TweenState.RUNNING;\n    this.emit( TweenEvents.STARTED );\n  }\n\n  /**\n   * Stops animation\n   */\n  pause () {\n    this._state = TweenState.PAUSED;\n    this.emit( TweenEvents.PAUSED );\n  }\n\n  /**\n   * Finish & dispose the tween\n   */\n  finish () {\n    this._state = TweenState.COMPLETED;\n    this.emit( TweenEvents.COMPLETE, this._timeElapsed );\n    this._dispose();\n  }\n\n  /**\n   * Cancels current animation\n   */\n  cancel () {\n    this._state = TweenState.CANCELLED;\n    this.emit( TweenEvents.CANCELLED, this._timeElapsed );\n    this._dispose();\n  }\n\n  patchAnimation () {\n    // todo\n  }\n\n  /**\n   * @param {number} timeScale\n   */\n  setTimeScale (timeScale = 1) {\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isNotStarted () {\n    return this._state === TweenState.NOT_STARTED;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return this._state === TweenState.RUNNING;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._state === TweenState.PAUSED;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isCompleted () {\n    return this._state === TweenState.COMPLETED;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get duration () {\n    return this._duration;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get timingFunctionName () {\n    return this._timingFunctionName;\n  }\n\n  /**\n   * @returns {Function}\n   */\n  get timingFunction () {\n    return this._timingFunction;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeRemaining () {\n    return Math.max( 0, Math.min( this._duration, this._duration - this._timeElapsed ) );\n  }\n\n  /**\n   * @returns {number}\n   */\n  get progress () {\n    return Math.min( 1, Math.max( 0, this._timeElapsed / this._duration ) );\n  }\n\n  /**\n   * @param {*} params\n   * @private\n   */\n  _initParams (params) {\n    let {\n      timeScale,\n      duration,\n      timingFunction\n    } = this._params = Object.assign( {}, DEFAULT_PARAMS, params );\n\n    this._timeScale = timeScale;\n    this._duration = duration;\n    this._timingFunctionName = timingFunction;\n    this._timingFunction = this._getTimingFunction( timingFunction );\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _updateAnimation (deltaTime) {\n    const progress = this.progress;\n    const timingProgress = this._timingFunction( progress );\n\n    for (let i = 0, length = this._properties.length; i < length; ++i) {\n      const property = this._properties[ i ];\n      this._target[ property ] = this._startValues[ i ] + this._deltaValues[ i ] * timingProgress;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _checkDuration () {\n    if (this._timeElapsed >= this._duration) {\n      this.finish();\n    }\n  }\n\n  /**\n   * @param {Array<string>} properties\n   * @returns {Array<number>}\n   * @private\n   */\n  _getPropertyValues (properties = []) {\n    let values = [];\n    for (let i = 0, length = properties.length; i < length; ++i) {\n      values[ i ] = this._getPropertyValue( properties[i] );\n    }\n    return values;\n  }\n\n  /**\n   * @param {string} property\n   * @returns {number}\n   * @private\n   */\n  _getPropertyValue (property) {\n    return this._target[ property || '' ] || 0;\n  }\n\n  /**\n   * @param {string} functionName\n   * @returns {Function}\n   * @private\n   */\n  _getTimingFunction (functionName) {\n    const defaultFunctionName = DEFAULT_PARAMS.timingFunction;\n    return timingFunctions[ functionName ] || timingFunctions[ defaultFunctionName ];\n  }\n\n  /**\n   * Disposes the object\n   *\n   * @private\n   */\n  _dispose () {\n    this._params = null;\n    this._timingFunction = null;\n    this._deltaValues = null;\n    this._startValues = null;\n    this._properties = null;\n    this._target = null;\n\n    this.removeAllListeners();\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { ChartTypes } from './ChartTypes';\nimport { Series } from '../series/Series';\nimport { arraysEqual, binarySearchIndexes, clampNumber, cssText, ensureNumber, isDate, TimeRanges } from '../../utils';\nimport { Tween, TweenEvents } from '../animation/Tween';\n\nexport class Chart extends EventEmitter {\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartHeight = 250; // chart height will be constant\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<Series>}\n   * @private\n   */\n  _series = [];\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRange = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRangeIndexes = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportPointsIndexes = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _useViewportPointsInterval = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportDistance = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPixelX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPixelY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportLeftPaddingScale = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportRightPaddingScale = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportRangeUpdateNeeded = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportPointsGroupingNeeded = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentLocalMinY = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentLocalMaxY = null;\n\n  /**\n   * @type {Tween}\n   * @private\n   */\n  _minMaxYAnimation = null;\n\n  /**\n   * @type {number}\n   * @private\n   * @default 2\n   */\n  _groupingPixels = 2;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Object} options\n   */\n  constructor (renderer, options = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._options = options;\n\n    this._initialize();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    let extremesUpdated = false;\n\n    if (this._minMaxYAnimation && this._minMaxYAnimation.isRunning) {\n      this._minMaxYAnimation.update( deltaTime );\n\n      extremesUpdated = true;\n    }\n\n    if (this._viewportRangeUpdateNeeded) {\n      this.updateViewportRange();\n\n      this._viewportRangeUpdateNeeded = false;\n    }\n\n    if (this._viewportPointsGroupingNeeded) {\n      this._approximateViewportPoints();\n\n      this._viewportPointsGroupingNeeded = false;\n    }\n\n    if (extremesUpdated) {\n      this._updateViewportPixel();\n    }\n\n    this._eachSeries(line => {\n      if (extremesUpdated) {\n        line.requestPathUpdate();\n      }\n\n      line.update( deltaTime );\n    });\n  }\n\n  /**\n   * Draws initial chart\n   */\n  firstRender () {\n    this._eachSeries(line => line.firstRender());\n  }\n\n  /**\n   * @param {number|Date} minX\n   * @param {number|Date} maxX\n   * @param {boolean} skipExtremes\n   * @param {boolean} preservePadding\n   */\n  setViewportRange (minX, maxX, { skipExtremes = false, preservePadding = false } = {}) {\n    // recompute X boundaries\n    this._setViewportRange( minX, maxX, preservePadding );\n\n    // remember last indexes\n    const oldRangeIndexes = this._viewportRangeIndexes;\n\n    // recompute indexes range\n    this._updateViewportIndexes();\n\n    let localExtremesUpdateRequested = false;\n\n    if (!arraysEqual( this._viewportRangeIndexes, oldRangeIndexes )) {\n      // do not recompute groups while first render\n      if (oldRangeIndexes.length > 0) {\n        // recompute approximation in next animation update\n        this._viewportPointsGroupingNeeded = true;\n      }\n\n      localExtremesUpdateRequested = true;\n    }\n\n    const updateExtremes = !skipExtremes && localExtremesUpdateRequested;\n\n    this._eachSeries(line => {\n      // update local extremes only if indexes range changed\n      if (updateExtremes) {\n        // update minY and maxY local values for each line\n        line.updateLocalExtremes();\n      }\n\n      // recompute and repaint path in next animation update\n      line.requestPathUpdate();\n    });\n\n    if (updateExtremes) {\n      // update local extremes on chart level\n      this._updateLocalExtremes();\n    }\n\n    // recompute pixel value (e.g. for animation)\n    this._updateViewportPixel();\n  }\n\n  /**\n   * Recompute key variables for viewport range\n   */\n  updateViewportRange () {\n    // recompute X boundaries\n    this.setViewportRange(\n      this._viewportRange[ 0 ],\n      this._viewportRange[ 1 ], {\n        skipExtremes: true,\n        preservePadding: true\n      }\n    );\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRange () {\n    return this._viewportRange;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRangeIndexes () {\n    return this._viewportRangeIndexes;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localExtremeDifference () {\n    return this._localMaxY - this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalExtremeDifference () {\n    return this._currentLocalMaxY - this._currentLocalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalMinY () {\n    return this._currentLocalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get currentLocalMaxY () {\n    return this._currentLocalMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartWidth () {\n    return this._renderer.width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return this._chartHeight;\n  }\n\n  /**\n   * @return {Tween}\n   */\n  get minMaxYAnimation () {\n    return this._minMaxYAnimation;\n  }\n\n  /**\n   * @private\n   */\n  _initialize () {\n    this._createSeriesGroup();\n    this._createSeries();\n\n    this._addEvents();\n\n    this._setInitialRange();\n    this._approximateViewportPoints();\n  }\n\n  /**\n   * @private\n   */\n  _createSeriesGroup () {\n    this._seriesGroup = this._renderer.createGroup({\n      class: 'telechart-series-group',\n      transform: `translate(0, 70) scale(1 1)`\n    });\n\n    this._test = this._renderer.createRect(this._renderer.width, '1px', {\n      fill: '#ccc',\n      y: 1,\n      style: cssText({\n        shapeRendering: 'crispEdges'\n      })\n    }, this._seriesGroup);\n    this._test2 = this._renderer.createRect(this._renderer.width, '1px', {\n      fill: '#ccc',\n      y: this.chartHeight / 2,\n      style: cssText({\n        shapeRendering: 'crispEdges'\n      })\n    }, this._seriesGroup);\n    this._test3 = this._renderer.createRect(this._renderer.width, '1px', {\n      fill: '#ccc',\n      y: this.chartHeight,\n      style: cssText({\n        shapeRendering: 'crispEdges'\n      })\n    }, this._seriesGroup);\n  }\n\n  /**\n   * @private\n   */\n  _createSeries () {\n    const {\n      series: data,\n      seriesOptions: options = {}\n    } = this._options || {};\n\n    const groupingOptions = options.grouping;\n    if (groupingOptions) {\n      if (groupingOptions.pixels) {\n        this._groupingPixels = ensureNumber( groupingOptions.pixels );\n      }\n    }\n\n    const {\n      columns,\n      types,\n      colors,\n      names\n    } = data;\n\n    const xAxisIndex = columns.findIndex(column => {\n      return types[ column[ 0 ] ] === ChartTypes.x;\n    });\n    const xAxis = this._xAxis = columns[ xAxisIndex ].slice( 1 );\n\n    let yAxes = columns.slice(); // copy an array to change later\n    yAxes.splice( xAxisIndex, 1 ); // remove x axis from the array\n\n    for (let i = 0; i < yAxes.length; ++i) {\n      const yAxis = yAxes[ i ];\n      const label = yAxis.shift();\n      const type = types[ label ];\n      const color = colors[ label ];\n      const name = names[ label ];\n\n      // prepare series settings\n      const settings = {\n        xAxis, yAxis, label, type,\n        color, name, options\n      };\n\n      // create instance\n      const series = new Series( this._renderer, this._seriesGroup, settings );\n\n      // provide context for each series\n      series.setChart( this );\n\n      this._series.push( series );\n    }\n  }\n\n  /**\n   * Approximate points for better performance\n   */\n  _approximateViewportPoints () {\n    let [ startIndex, endIndex ] = this._viewportRangeIndexes;\n\n    startIndex = Math.max( 0, startIndex - 1 );\n    endIndex = Math.min( this._xAxis.length - 1, endIndex + 1 );\n\n    // if we have no enough points\n    // then we don't need to approximate\n    if (endIndex - startIndex < 400) {\n      // just save indexes of points for increase performance\n      // [ startIndex, endIndex ]\n      this._viewportPointsIndexes = [ startIndex, endIndex ];\n      this._useViewportPointsInterval = true;\n\n      // all work done here\n      return;\n    }\n\n    const boostLimit = 500;\n    const boostScale = 1 + this._xAxis.length > boostLimit\n      ? Math.max(0, ( endIndex - startIndex ) / this._xAxis.length ) * 2\n      : 0;\n\n    let groupingDistanceLimitX = boostScale * this._groupingPixels * this._viewportPixelX;\n\n    let viewportIndexes = [];\n    let groupStartIndex = startIndex;\n\n    for (let i = startIndex + 1; i <= endIndex; ++i) {\n      const pointX = this._xAxis[ i ];\n\n      const groupStartDifferenceX = pointX - this._xAxis[ groupStartIndex ];\n\n      if (groupStartDifferenceX >= groupingDistanceLimitX || i === endIndex) {\n        if (groupStartIndex !== i - 1) {\n          // we have 2 or more points to group\n          // [ startIndex, lastIndex ] all indexes inclusive\n          const endIndex = i - 1;\n          const middleIndex = ( groupStartIndex + endIndex ) >> 1;\n          viewportIndexes.push( middleIndex );\n        } else {\n          if (startIndex === i - 1) {\n            // add first point\n            viewportIndexes.push( startIndex );\n          }\n\n          viewportIndexes.push( i );\n        }\n\n        groupStartIndex = i;\n      }\n    }\n\n    this._viewportPointsIndexes = viewportIndexes;\n    this._useViewportPointsInterval = false;\n  }\n\n  /**\n   * @private\n   */\n  _updateViewportIndexes () {\n    const [ rangeStart, rangeEnd ] = this._viewportRange;\n    const [ minLowerIndex, minUpperIndex ] = binarySearchIndexes( this._xAxis, rangeStart );\n    const [ maxLowerIndex, maxUpperIndex ] = binarySearchIndexes( this._xAxis, rangeEnd );\n\n    this._viewportRangeIndexes = [ minUpperIndex, maxLowerIndex ];\n  }\n\n  /**\n   * @private\n   */\n  _updateLocalExtremes () {\n    let localMinY = 0;\n    let localMaxY = 0;\n\n    this._eachSeries(line => {\n      if (!line.isVisible) {\n        // filter only visible series\n        return;\n      }\n\n      if (localMinY > line.localMinY) {\n        localMinY = line.localMinY;\n      }\n      if (localMaxY < line.localMaxY) {\n        localMaxY = line.localMaxY;\n      }\n    });\n\n    let oldLocalMinY = this._localMinY;\n    let oldLocalMaxY = this._localMaxY;\n\n    this._localMinY = localMinY;\n    this._localMaxY = localMaxY;\n\n    let updateAnimation = false;\n\n    if (typeof this._currentLocalMinY !== 'number') {\n      // set initial local min y\n      this._currentLocalMinY = this._localMinY;\n    } else if (this._localMinY !== oldLocalMinY) {\n      updateAnimation = true;\n    }\n\n    if (typeof this._currentLocalMaxY !== 'number') {\n      // set initial local max y\n      this._currentLocalMaxY = this._localMaxY;\n    } else if (this._localMaxY !== oldLocalMaxY) {\n      updateAnimation = true;\n    }\n\n    if (updateAnimation) {\n      if (this._minMaxYAnimation) {\n        this._patchMinMaxYAnimation();\n      } else {\n        this._createMinMaxYAnimation();\n      }\n    }\n  }\n\n  /**\n   * Updates pixel value for each axis\n   */\n  _updateViewportPixel () {\n    this._viewportPixelX = this._viewportDistance / this.chartWidth;\n    this._viewportPixelY = this.currentLocalExtremeDifference / this.chartHeight;\n  }\n\n  /**\n   * @param {number | Date} minX\n   * @param {number | Date} maxX\n   * @param {boolean} preservePadding\n   * @private\n   */\n  _setViewportRange (minX, maxX, preservePadding = false) {\n    const xAxis = this._xAxis;\n\n    const globalMinX = xAxis[ 0 ];\n    const globalMaxX = xAxis[ xAxis.length - 1 ];\n\n    if (isDate( minX )) {\n      minX = minX.getTime();\n    }\n    if (isDate( maxX )) {\n      maxX = maxX.getTime();\n    }\n\n    let newMinX = Math.max( minX, globalMinX );\n    let newMaxX = Math.min( maxX, globalMaxX );\n\n    const actualPaddingX = this._computeViewportPadding( newMinX, newMaxX );\n\n    const receivedLeftPaddingX = clampNumber( newMinX - minX, 0, actualPaddingX );\n    const receivedRightPaddingX = clampNumber( maxX - newMaxX, 0, actualPaddingX );\n\n    if (!preservePadding) {\n      this._viewportLeftPaddingScale = receivedLeftPaddingX / actualPaddingX;\n    }\n    if (this._viewportLeftPaddingScale > 0) {\n      newMinX -= actualPaddingX * this._viewportLeftPaddingScale;\n    }\n\n    if (!preservePadding) {\n      this._viewportRightPaddingScale = receivedRightPaddingX / actualPaddingX;\n    }\n    if (this._viewportRightPaddingScale > 0) {\n      newMaxX += actualPaddingX * this._viewportRightPaddingScale;\n    }\n\n    this._viewportRange = [ newMinX, newMaxX ];\n    this._viewportDistance = newMaxX - newMinX;\n  }\n\n  /**\n   * @private\n   */\n  _addEvents () {\n    this._renderer.on('resize', _ => {\n      this._onRendererResize();\n    });\n\n    this._eachSeries(line => {\n      line.on('visibleChange', _ => {\n        this._onSeriesVisibleChange( line );\n      });\n    });\n  }\n\n  /**\n   * @private\n   */\n  _setInitialRange () {\n    const globalMinX = this._xAxis[ 0 ];\n    const globalMaxX = this._xAxis[ this._xAxis.length - 1 ];\n    const difference = globalMaxX - globalMinX;\n    const initialViewport = Math.floor( difference * .15 );\n    const viewportPadding = this._computeViewportPadding(\n      globalMaxX - initialViewport,\n      globalMaxX\n    );\n\n    // set initial range\n    this.setViewportRange(\n      globalMaxX - initialViewport - viewportPadding,\n      globalMaxX + viewportPadding\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createMinMaxYAnimation () {\n    if (this._minMaxYAnimation) {\n      this._minMaxYAnimation.cancel();\n    }\n\n    this._minMaxYAnimation = new Tween(this, [\n      '_currentLocalMinY',\n      '_currentLocalMaxY'\n    ], [\n      this._localMinY - this._currentLocalMinY,\n      this._localMaxY - this._currentLocalMaxY\n    ], {\n      duration: 300,\n      timingFunction: 'easeInOutQuad'\n    });\n\n    this._minMaxYAnimation.start();\n\n    // console.log(this._minMaxYAnimation.id, 'local deltas (min, max):', this._minMaxYAnimation._deltaValues);\n\n    this._minMaxYAnimation.on(TweenEvents.COMPLETE, _ => {\n      // console.log( this._minMaxYAnimation.id, 'complete' );\n      this._minMaxYAnimation = null;\n    });\n\n    this._minMaxYAnimation.on(TweenEvents.CANCELLED, _ => {\n      // console.log( this._minMaxYAnimation.id, 'cancelled' );\n      this._minMaxYAnimation = null;\n    });\n  }\n\n  /**\n   * @private\n   */\n  _patchMinMaxYAnimation () {\n    // todo: workaround for now\n    this._createMinMaxYAnimation();\n  }\n\n  /**\n   * @private\n   */\n  _onRendererResize () {\n    // making request for future animation update\n    this._viewportRangeUpdateNeeded = true;\n    this._viewportPointsGroupingNeeded = true;\n  }\n\n  /**\n   * @param {Series} line\n   * @private\n   */\n  _onSeriesVisibleChange (line) {\n    // find new extremes and scale\n    this._updateLocalExtremes();\n  }\n\n  /**\n   * @param {number} minX\n   * @param {number} maxX\n   * @return {number}\n   * @private\n   */\n  _computeViewportPixelX (minX = this._viewportRange[ 0 ], maxX = this._viewportRange[ 1 ]) {\n    return ( maxX - minX ) / this.chartWidth;\n  }\n\n  /**\n   * @param {number} localMinX\n   * @param {number} localMaxX\n   * @return {number}\n   * @private\n   */\n  _computeViewportPadding (localMinX, localMaxX) {\n    return this._computeViewportPixelX( localMinX, localMaxX ) * 16;\n  }\n\n  /**\n   * @param {Function} fn\n   * @private\n   */\n  _eachSeries (fn = () => {}) {\n    for (let i = 0; i < this._series.length; ++i) {\n      fn( this._series[ i ] );\n    }\n  }\n}\n","export class Clock {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateMs = 0;\n\n  constructor () {\n    this._lastUpdateMs = this.now;\n  }\n\n  /**\n   * @return {number}\n   */\n  getDelta () {\n    const now = this.now;\n    const delta = ( now - this._lastUpdateMs ) / 1000;\n    this._lastUpdateMs = now;\n\n    return delta;\n  }\n\n  /**\n   * @return {number}\n   */\n  get now () {\n    return (performance || Date).now();\n  }\n}\n","import './style/telechart.scss';\n\nimport { AnimationSource, AnimationSourceEvents } from './core/animation/AnimationSource';\nimport { SvgRenderer } from \"./core/SvgRenderer\";\nimport { Chart } from './core/chart/Chart';\nimport { Clock } from './core/misc/Clock';\n\nimport {\n  addClass,\n  interpolateThemeClass,\n  removeClass,\n  resolveElement,\n  ChartThemes,\n  setAttributesNS,\n  cssText, createElement, ROOT_CLASS_NAME\n} from \"./utils\";\n\nexport class Telechart {\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _rootElement = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _themeName = ChartThemes.default;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _title = '';\n\n  /**\n   * @type {SVGTextElement}\n   * @private\n   */\n  _titleElement = null;\n\n  /**\n   * @type {Clock}\n   * @private\n   */\n  _clock = null;\n\n  /**\n   * @type {AnimationSource}\n   * @private\n   */\n  _animationSource = null;\n\n  /**\n   * @static\n   * @param {Element | string} mountTo Element or selector\n   * @param {Object} options\n   */\n  static create (mountTo, options = {}) {\n    const chart = new Telechart();\n\n    chart.setOptions( options );\n    chart.mount( resolveElement( mountTo ) );\n    chart.initialize();\n\n    chart.firstRender();\n\n    return chart;\n  }\n\n  /**\n   * @param {Object} options\n   */\n  setOptions (options = {}) {\n    this._options = options;\n  }\n\n  /**\n   * @param {Element} parent\n   */\n  mount (parent) {\n    const root = createElement('div', {\n      attrs: {\n        class: ROOT_CLASS_NAME\n      }\n    });\n\n    parent.appendChild( root );\n\n    this._rootElement = root;\n    this._renderer = new SvgRenderer( root );\n  }\n\n  /**\n   * Initialize the chart\n   */\n  initialize () {\n    this.setTheme( this._options.theme || ChartThemes.default );\n    this.setTitle( this._options.title );\n\n    // create components\n    this._createChart();\n\n    // create animation loop\n    this._clock = new Clock();\n    this._animationSource = new AnimationSource( 60, 1 ); // fps, timeScale\n    this._animationSource.on(AnimationSourceEvents.UPDATE, deltaTime => {\n      this.update( deltaTime );\n    });\n\n    requestAnimationFrame(_ => {\n      this.animate();\n    });\n  }\n\n  /**\n   * Draws first frame\n   */\n  firstRender () {\n    this._chart.firstRender();\n  }\n\n  /**\n   * Animation loop\n   */\n  animate () {\n    const deltaTime = this._clock.getDelta();\n    this._animationSource.update( deltaTime );\n\n    requestAnimationFrame(_ => this.animate());\n  }\n\n  /**\n   * Update loop\n   */\n  update (deltaTime) {\n    this._chart.update( deltaTime );\n  }\n\n  /**\n   * @param {string} themeName\n   */\n  setTheme (themeName) {\n    const rootElement = this._rootElement;\n\n    removeClass(\n      rootElement,\n      Object.keys( ChartThemes )\n        .map( interpolateThemeClass )\n    );\n\n    addClass(\n      rootElement,\n      interpolateThemeClass( themeName )\n    );\n\n    this._themeName = themeName;\n  }\n\n  /**\n   * @param {string} title\n   */\n  setTitle (title) {\n    this._title = title;\n\n    !this._titleElement\n      ? this._createTitle( title )\n      : this._updateTitle( title );\n  }\n\n  /**\n   * Destroys the chart instance\n   */\n  destroy () {\n    this._renderer && this._renderer.destroy();\n    this._rootElement = null;\n    this._renderer = null;\n  }\n\n  /**\n   * @return {string}\n   */\n  get themeName () {\n    return this._themeName;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _createTitle (title = this._options.title) {\n    if (!title) {\n      return;\n    }\n\n    const text = this._renderer.createText(title, {\n      class: 'telechart-title',\n      x: 16,\n      y: 36,\n      textAnchor: 'start',\n      style: cssText({\n        opacity: 0\n      })\n    });\n\n    setTimeout(_ => {\n      setAttributesNS(text, {\n        style: cssText({\n          opacity: 1\n        })\n      });\n    }, 200);\n\n    this._titleElement = text;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _updateTitle (title) {\n    if (!this._titleElement) {\n      return;\n    }\n    const tspan = this._titleElement.querySelector( 'tspan' );\n    tspan.innerHTML = title;\n  }\n\n  /**\n   * @private\n   */\n  _createChart () {\n    this._chart = new Chart(\n      this._renderer,\n      this._options\n    );\n  }\n}\n","export * from './Telechart';\n","import sourceData from '../samples/chart_data.json';\nimport { Telechart } from '../src';\nimport {\n  addClass, animationTimeout,\n  ChartThemes, ChartThemesColors,\n  createElement,\n  cssText, isBrowserSafari, isTouchEventsSupported,\n  parseQueryString,\n  removeClass,\n  setAttributes, TimeRanges\n} from '../src/utils';\n\nconst query = parseQueryString( location.search );\nlet currentThemeName = query && query.theme || 'default';\n\nconst largeAxisX = [ 'x' ];\nconst largeAxisY1 = [ 'y0' ];\nconst largeAxisY2 = [ 'y1' ];\nconst size = 1e3;\nconst initialDate = Date.now() - TimeRanges.year * 5;\nconst endDate = Date.now();\nconst dateTick = (endDate - initialDate) / size;\n\nfor (let i = 0; i < size; ++i) {\n  largeAxisX.push( Math.floor( initialDate + dateTick * i + dateTick * (Math.random() * .5 - .5 / 2) ) );\n  largeAxisY1.push( Math.sin( i * .004 ) * 1000 + Math.random() * 10 - 10 / 2 );\n  largeAxisY2.push( Math.cos( i * .004 ) * 600 + Math.random() * 20 - 20 / 2 );\n}\n\nsourceData.push({\n  columns: [\n    largeAxisX,\n    largeAxisY1,\n    largeAxisY2\n  ],\n  names: Object.assign( {}, sourceData[ 0 ].names ),\n  types: Object.assign( {}, sourceData[ 0 ].types ),\n  colors: Object.assign( {}, sourceData[ 0 ].colors )\n});\n\nconst charts = window.charts = [];\n\nconst from = 0;\nconst count = 6;\n\n// initialize charts using requestAnimationFrame\n// for better user experience\nsourceData\n  .slice(from, from + count)\n  .map((chartData, index) => {\n    return animationTimeout( 0 * 20 * index, [ chartData, index ] );\n  })\n  .map(animation => {\n    animation.then(([ chartData, index ]) => createChart( chartData, index ));\n    return animation;\n  });\n\nupdatePageTheme();\n\nlet buttonContent = `\n  <span class=\"text-switcher\">\n    <span>Switch to </span>\n    <span class=\"text-switcher__switcher\">\n      <span>Night</span>\n      <span>Day</span>\n    </span>\n    <span> Mode</span>\n  </span>\n`;\n\nconst themeButton = createElement('button', {\n  attrs: {\n    class: 'demo-theme-button',\n    style: cssText({\n      opacity: 0\n    })\n  }\n}, buttonContent);\n\nwindow.addEventListener('load', _ => {\n  document.body.appendChild( themeButton );\n\n  themeButton.addEventListener('click', ev => {\n    updateChartsTheme();\n    updatePageTheme();\n  });\n\n  setTimeout(_ => {\n    setAttributes(themeButton, {\n      style: cssText({\n        opacity: 1\n      })\n    });\n  }, 100);\n});\n\nfunction updateChartsTheme () {\n  const isDefaultTheme = currentThemeName === ChartThemes.default;\n  const newTheme = isDefaultTheme\n    ? ChartThemes.dark\n    : ChartThemes.default;\n  currentThemeName = newTheme;\n\n  charts.forEach(chart => {\n    chart.setTheme( newTheme );\n  });\n}\n\nfunction updatePageTheme () {\n  removeClass( document.body, [ 'default-theme', 'dark-theme' ] );\n  addClass( document.body, `${currentThemeName}-theme` );\n\n  if (isBrowserSafari()) {\n    addClass( document.body, 'browser-safari' );\n  }\n\n  setTimeout(_ => {\n    updatePageThemeColor();\n  }, 300);\n}\n\nfunction updatePageThemeColor () {\n  const themeColor = ChartThemesColors[ currentThemeName ];\n\n  let metaTheme = document.querySelector( '[name=\"theme-color\"]' );\n\n  if (!metaTheme) {\n    metaTheme = createElement('meta', {\n      attrs: {\n        name: 'theme-color',\n        content: themeColor\n      }\n    });\n    document.head.appendChild( metaTheme );\n  } else {\n    metaTheme.setAttribute( 'content', themeColor );\n  }\n}\n\nfunction createChart (chartData, index) {\n  const container = document.querySelector( `#telechart-${index + 1}` );\n\n  const start = performance.now();\n  const chart = Telechart.create(container, {\n    title: 'Followers',\n    series: {\n      columns: chartData.columns,\n      names: chartData.names,\n      types: chartData.types,\n      colors: chartData.colors,\n    },\n    seriesOptions: {\n      grouping: {\n        pixels: 2\n      }\n    }\n  });\n\n  console.log( `#${index}`, performance.now() - start, chart );\n\n  // set initial theme\n  chart.setTheme( currentThemeName );\n\n  charts.push( chart );\n}\n\nconst animations = [];\n\nfunction runAnimation (index) {\n  const chart = charts[ index ];\n  let startDate = chart._chart._xAxis[ 0 ];\n  let endDate = chart._chart._xAxis[ chart._chart._xAxis.length - 1 ];\n  let curDate = endDate - (endDate - startDate) * .23;\n  const tickDelta = (endDate - startDate) * .01;\n  let sign = -1;\n\n  function animate () {\n    curDate += sign * tickDelta;\n    chart._chart.setViewportRange( curDate, Infinity );\n\n    if (curDate < startDate + 2 * tickDelta) {\n      sign *= -1;\n    } else if (curDate > endDate - tickDelta * 2) {\n      sign *= -1;\n    }\n\n    // stop animation\n    if (!animations.includes( index )) {\n      return;\n    }\n\n    requestAnimationFrame( animate );\n  }\n\n  animations.push( index );\n\n  animate();\n}\n\nfunction stopAnimation (index) {\n  const i = animations.indexOf( index );\n  animations.splice( i, 1 );\n}\n\nfunction toggleAnimation (index) {\n  animations.includes( index )\n    ? stopAnimation( index )\n    : runAnimation( index );\n}\n\nwindow.toggleAnimation = toggleAnimation;\n"],"sourceRoot":""}