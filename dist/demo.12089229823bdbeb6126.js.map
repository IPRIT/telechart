{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/animation.js","webpack:///./src/utils/base.js","webpack:///./src/utils/text.js","webpack:///./src/utils/dom.js","webpack:///./src/utils/themes.js","webpack:///./src/utils/algorithms.js","webpack:///./src/utils/index.js","webpack:///./src/core/misc/EventEmitter.js","webpack:///./src/core/animation/AnimationSource.js","webpack:///./src/core/SvgRenderer.js","webpack:///./src/core/chart/ChartTypes.js","webpack:///./src/core/point/Point.js","webpack:///./src/core/point/PointGroup.js","webpack:///./src/core/series/Series.js","webpack:///./src/core/chart/Chart.js","webpack:///./src/core/misc/Clock.js","webpack:///./src/Telechart.js","webpack:///./src/index.js","webpack:///./demo/telechart-demo.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","animationTimeout","timeoutMs","arguments","length","undefined","_len","args","Array","_key","Promise","resolve","fulfillmentCallback","apply","concat","cb","requestAnimationFrame","setTimeout","_","objectEachKey","fn","keys","forEach","clampNumber","min","Infinity","max","_ref","Math","ensureNumber","Number","isNaN","isDate","Date","valueOf","capitalize","text","String","toUpperCase","substr","cssText","styleObject","reduce","css","prop","camelToKebabCase","toLowerCase","replace","parseQueryString","href","queryString","split","slice","map","part","keyValue","result","obj","assign","createElement","tagName","options","children","element","document","createElementNS","attrs","useNS","setAttributesNS","attrsNS","setAttributes","isArray","node","innerHTML","appendChild","resolveElement","elementOrSelector","querySelector","getElementWidth","innerWidth","clientWidth","camelCaseAttrWhiteList","attr","includes","setAttribute","setAttributeNS","hasClass","className","classList","contains","RegExp","test","addClass","_element$classList","classNames","add","_toConsumableArray","trim","removeClass","_element$classList2","remove","existingClasses","classesToDelete","Set","has","ROOT_CLASS_NAME","interpolateThemeClass","themeName","ChartThemes","default","dark","ChartThemesColors","arraysEqual","arrayA","arrayB","arrayMinMax","array","_arrayMinMaxIndexes2","_slicedToArray","startIndex","endIndex","minIndex","maxIndex","arrayMinMaxIndexes","arrayAvg","sum","arraySum","binarySearchIndexes","order","left","right","mid","__webpack_exports__","EventEmitter","_classCallCheck","this","eventName","_fireEvent","context","addEventListener","addEventListenerOnce","_subscribeEvent","_this","listener","_len2","_key2","removeEventListener","_eventListeners","listenerIndex","findIndex","splice","_allocateEvent","push","eventListeners","_len3","_key3","_eventListeners$i","AnimationSourceEvents","AnimationSource","_EventEmitter","updatesPerSecond","timeScale","AnimationSource_classCallCheck","_getPrototypeOf","AnimationSource_defineProperty","_assertThisInitialized","_updatesPerSecond","_updateEach","FRAMES_PER_SECOND","_timeScale","_inherits","deltaTime","_paused","_timeElapsed","_updateInvokes","_callUpdate","_lastUpdateAt","removeAllListeners","emit","set","telechartTitle","TELECHART_NAME","TELECHART_VERSION","TELECHART_AUTHOR","INTERNAL_AUTOINCREMENT","SvgRenderer","contextElement","SvgRenderer_classCallCheck","SvgRenderer_getPrototypeOf","SvgRenderer_defineProperty","SvgRenderer_assertThisInitialized","_parentContainer","_init","SvgRenderer_inherits","parent","_svgContainer","group","NS","tspan","textElement","defs","pathText","pathElement","updatingAttrs","width","height","rectElement","selector","from","querySelectorAll","_detachEvents","_clearParentContainer","_isInitialized","_updateDimensions","_createSvgContainer","_insertSvgContainer","createDesc","_attachEvents","Error","xmlns","version","_width","_height","viewBox","class","_minWidth","_minHeight","ev","_attachResizeListener","_detachResizeListener","_resizeListener","_onResize","window","_id","join","ChartTypes","PointTypes","point","POINT_AUTOINCREMENT","Point","x","y","Point_classCallCheck","Point_defineProperty","_x","_y","pointType","_type","setX","setY","addX","addY","svgX","_svgX","svgY","_svgY","PointGroup","_Point","points","autoCompute","PointGroup_classCallCheck","PointGroup_getPrototypeOf","PointGroup_defineProperty","PointGroup_assertThisInitialized","setType","setPointsGroup","PointGroup_inherits","_pointsGroup","approximate","_approximateX","_approximateY","_approximationFn","Series","renderer","settings","Series_classCallCheck","Series_getPrototypeOf","Series_defineProperty","Series_assertThisInitialized","_renderer","_parent","_settings","_parseSettings","initialize","Series_inherits","_createPoints","_updateGlobalExtremes","_addEvents","_pathElement","regroupViewportPoints","updateViewportPoints","chart","_chart","_pathText","_visible","setInvisible","setVisible","range","rangeIndexes","oldRangeIndexes","_viewportRangeIndexes","_viewportRange","_viewportDistance","_viewportPixelUpdateNeeded","_updateLocalExtremes","_viewportPoints","setSvgXY","_projectXToSvg","_projectYToSvg","_viewportPointsGroupingNeeded","_this$_viewportRangeI","Series_slicedToArray","_points","viewportPoints","groupingLimitValue","_groupingPixels","_viewportPixelX","groupStartIndex","pointGroup","currentYScale","desiredYScale","_currentYScale","_localYScale","_chartWidth","_viewportPixelY","globalExtremeDifference","_chartHeight","_this$_settings","xAxis","yAxis","label","color","type","_this$_settings$optio","_xAxis","_yAxis","_label","_color","_name","groupingOptions","grouping","pixels","_seriesOptions","_arrayMinMax2","minValue","maxValue","_globalMinY","_globalMaxY","_this$_viewportRangeI2","rangeStartIndex","rangeEndIndex","_arrayMinMax4","_localMinY","_localMaxY","_toRelativeX","localMinY","_this2","on","_onRendererResize","updateViewportPixel","Chart","Chart_classCallCheck","Chart_getPrototypeOf","Chart_defineProperty","Chart_assertThisInitialized","_options","_initialize","Chart_inherits","_eachSeries","line","firstRender","minX","maxX","globalMinX","globalMaxX","getTime","padding","_updateViewportIndexes","setViewportRange","_updateExtremes","_updateSeriesScale","_createSeriesGroup","_createSeries","_setInitialRange","_seriesGroup","createGroup","transform","data","series","_ref$seriesOptions","seriesOptions","columns","types","colors","names","xAxisIndex","column","yAxes","shift","chartWidth","chartHeight","setChart","_series","_this$_viewportRange","Chart_slicedToArray","rangeStart","rangeEnd","_binarySearchIndexes2","minUpperIndex","_binarySearchIndexes4","maxLowerIndex","localMaxY","globalMinY","globalMaxY","isVisible","_computeYScale","_this3","setScale","_this4","_onSeriesVisibleChange","difference","initialViewport","floor","viewportPadding","globalHeight","localHeight","localExtremeDifference","Clock","Clock_classCallCheck","_lastUpdateMs","now","delta","performance","Telechart","Telechart_classCallCheck","Telechart_defineProperty","mountTo","setOptions","mount","root","_rootElement","setTheme","theme","setTitle","title","_createChart","_clock","_animationSource","update","animate","getDelta","rootElement","_themeName","_title","_titleElement","_updateTitle","_createTitle","destroy","createText","textAnchor","style","opacity","Telechart_Telechart","query","location","search","currentThemeName","charts","sourceData","chartData","index","animation","then","_ref2","container","start","console","log","createChart","updatePageTheme","themeButton","body","themeColor","metaTheme","content","head","newTheme"],"mappings":"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","file":"demo.12089229823bdbeb6126.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","export const FRAMES_PER_SECOND = 60;\nexport const FRAMES_DELTA_SEC = 1 / 60;\nexport const FRAMES_DELTA_MS = 1000 / 60;\n\n/**\n * @param {number} value\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warp (value, deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return value * warpRatio( deltaTime, framesDeltaSec );\n}\n\n/**\n * @param {number} deltaTime\n * @param {number} framesDeltaSec\n * @returns {number}\n */\nexport function warpRatio (deltaTime, framesDeltaSec = FRAMES_DELTA_SEC) {\n  return deltaTime / framesDeltaSec;\n}\n\n/**\n * @param {number} timeoutMs\n * @param {*} args\n * @return {Promise<void>}\n */\nexport function animationTimeout (timeoutMs = 0, ...args) {\n  return new Promise(resolve => {\n    const fulfillmentCallback = resolve.bind( null, ...args );\n    const cb = () => requestAnimationFrame( fulfillmentCallback );\n\n    if (!timeoutMs) {\n      cb();\n    } else {\n      setTimeout( _ => cb(), timeoutMs );\n    }\n  });\n}\n\n// linear\nexport const linear = t => t;\n// accelerating from zero velocity\nexport const easeInQuad = t => t * t;\n// decelerating to zero velocity\nexport const easeOutQuad = t => t * (2 - t);\n// acceleration until halfway, then deceleration\nexport const easeInOutQuad = t => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\n// accelerating from zero velocity\nexport const easeInCubic = t => t * t * t;\n// decelerating to zero velocity\nexport const easeOutCubic = t => --t * t * t + 1;\n// acceleration until halfway, then deceleration\nexport const easeInOutCubic = t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n// accelerating from zero velocity\nexport const easeInQuart = t => t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuart = t => 1 - --t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuart = t => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t);\n// accelerating from zero velocity\nexport const easeInQuint = t => t * t * t * t * t;\n// decelerating to zero velocity\nexport const easeOutQuint = t => 1 + --t * t * t * t * t;\n// acceleration until halfway, then deceleration\nexport const easeInOutQuint = t => t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n","/**\n * @param {*} object\n * @param {Function} fn\n */\nexport function objectEachKey (object, fn = () => {}) {\n  Object.keys( object ).forEach( fn );\n}\n\n/**\n * @param {*} object\n * @param {Function} fn\n * @return {*[]}\n */\nexport function objectMapKey (object, fn = () => {}) {\n  return Object.keys( object ).map( fn );\n}\n\n/**\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nexport function clampNumber (value, min = -Infinity, max = Infinity) {\n  if (min > max) {\n    [ min, max ] = [ max, min ];\n  }\n  return Math.min(\n    Math.max(ensureNumber(value), min),\n    max\n  );\n}\n\n/**\n * @param {*} value\n * @return {number}\n */\nexport function ensureNumber (value) {\n  value = Number(value);\n  if (Number.isNaN(value)) {\n    return 0;\n  }\n  return value;\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nexport function isObject (value) {\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * @param {Date|*} value\n * @return {boolean}\n */\nexport function isDate (value) {\n  return value instanceof Date && !isNaN( value.valueOf() );\n}\n","/**\n * @param {string} text\n * @return {string}\n */\nexport function capitalize (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return text[ 0 ].toUpperCase() + text.substr(1);\n}\n\n/**\n * @param {Object} styleObject\n * @returns {string}\n */\nexport function cssText (styleObject) {\n  return Object.keys( styleObject ).reduce((css, prop) => {\n    return `${css ? css + ' ' : ''}${camelToKebabCase( prop )}: ${styleObject[ prop ]};`;\n  }, '');\n}\n\n/**\n * @param {string} text\n * @returns {string}\n */\nexport function camelToKebabCase (text) {\n  if (!text) {\n    return '';\n  }\n  text = String( text );\n  return (\n    text[ 0 ].toLowerCase() + text.substr( 1 )\n  ).replace( /([A-Z])/g, '-$1' ).toLowerCase();\n}\n\n/**\n * @param {string} href\n * @return {*}\n */\nexport function parseQueryString (href) {\n  const queryString = href.split('?').slice(1);\n  if (!queryString.length) {\n    return {};\n  }\n\n  return queryString[ 0 ].split( '&' ).map(part => {\n    const keyValue = part.split( '=' );\n    return {\n      [keyValue[ 0 ]]: keyValue[ 1 ]\n    };\n  }).reduce((result, obj) => {\n    return Object.assign(result, obj);\n  })\n}\n","import { objectEachKey } from \"./base\";\nimport { camelToKebabCase } from './text';\n\n/**\n * @param {string} tagName\n * @param {Object} options\n * @param {Array|*} children\n * @param {string|*} ns\n * @return {Element}\n */\nexport function createElement (tagName, options = {}, children = [], ns = null) {\n  const element = !ns\n    ? document.createElement( tagName )\n    : document.createElementNS( ns, tagName );\n\n  if (options.attrs) {\n    !options.useNS\n      ? setAttributes( element, options.attrs )\n      : setAttributesNS( element, options.attrs, options.attrsNS || null );\n  }\n\n  if (children || Array.isArray( children )) {\n    children = [].concat( children );\n    children.forEach(node => {\n      if (typeof node === 'string') {\n        element.innerHTML += node;\n      } else {\n        element.appendChild( node );\n      }\n    });\n  }\n\n  return element;\n}\n\n/**\n * @param {Element|string} elementOrSelector\n * @return {Element | null}\n */\nexport function resolveElement (elementOrSelector) {\n  if (typeof elementOrSelector !== 'string') {\n    return elementOrSelector;\n  }\n  return document.querySelector( elementOrSelector );\n}\n\n/**\n * @param {Element} element\n * @return {{top: number, left: number}}\n */\nexport function getElementOffset (element) {\n  if (!element) {\n    return { top: 0, left: 0 };\n  }\n\n  // Return zeros for disconnected and hidden (display: none) elements\n  // Support: IE <= 11 only\n  // Running getBoundingClientRect on a\n  // disconnected node in IE throws an error\n  if (element.getClientRects && !element.getClientRects().length) {\n    return { top: 0, left: 0 };\n  }\n\n  // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n  const rect = element.getBoundingClientRect();\n  const win = element.ownerDocument.defaultView;\n  return {\n    top: rect.top + win.pageYOffset,\n    left: rect.left + win.pageXOffset\n  };\n}\n\n/**\n * @param {Element} targetElement\n * @param {Element} relativeElement\n * @return {{ top: number, left: number }}\n */\nexport function getElementRelativeOffset (targetElement, relativeElement) {\n  const targetOffset = getElementOffset(targetElement);\n  const relativeOffset = getElementOffset(relativeElement);\n\n  return {\n    top: targetOffset.top - relativeOffset.top + relativeElement.scrollTop,\n    left: targetOffset.left - relativeOffset.left + relativeElement.scrollLeft\n  };\n}\n\n/**\n * @returns {number}\n */\nexport function getDocumentHeight () {\n  return Math.max(\n    document.body.scrollHeight,\n    document.documentElement.scrollHeight,\n    document.body.offsetHeight,\n    document.documentElement.offsetHeight,\n    document.body.clientHeight,\n    document.documentElement.clientHeight\n  );\n}\n\n/**\n * @returns {number}\n */\nexport function getWindowHeight () {\n  return window.innerHeight ||\n    (document.documentElement || document.body).clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementHeight (element) {\n  return element.innerHeight || element.clientHeight;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementWidth (element) {\n  return element.innerWidth || element.clientWidth;\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollHeight (element) {\n  return Math.max(\n    element.scrollHeight,\n    element.offsetHeight,\n    element.clientHeight\n  );\n}\n\n/**\n * @param {Element} element\n * @returns {number}\n */\nexport function getElementScrollWidth (element) {\n  return Math.max(\n    element.scrollWidth,\n    element.offsetWidth,\n    element.clientWidth\n  );\n}\n\nconst camelCaseAttrWhiteList = [\n  'viewBox'\n];\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n */\nexport function setAttributes (element, attrs = {}) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttribute( attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {Object} attrs\n * @param {string | *} ns\n */\nexport function setAttributesNS (element, attrs = {}, ns = null) {\n  element = resolveElement( element );\n\n  objectEachKey(attrs, key => {\n    const attr = camelCaseAttrWhiteList.includes( key )\n      ? key\n      : camelToKebabCase( key );\n\n    element.setAttributeNS( ns, attr, attrs[ key ] );\n  });\n}\n\n/**\n * @param {Element} element\n * @param {string} className\n */\nexport function hasClass (element, className) {\n  if (element.classList) {\n    return element.classList.contains( className );\n  }\n  return new RegExp('(\\\\s|^)' + className + '(\\\\s|$)').test( element.className );\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function addClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    return element.classList.add( ...classNames );\n  }\n\n  let className = element.className;\n\n  for (let i = 0; i < classNames.length; ++i) {\n    if (!hasClass( element, classNames[ i ] )) {\n      className += ` ${classNames[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n\n/**\n * @param {Element} element\n * @param {string|Array<string>} classNames\n */\nexport function removeClass (element, classNames = []) {\n  classNames = [].concat( classNames );\n\n  if (element.classList) {\n    return element.classList.remove( ...classNames );\n  }\n\n  let existingClasses = element.className.split( ' ' );\n  let classesToDelete = new Set( classNames );\n  let className = '';\n\n  for (let i = 0; i < existingClasses.length; ++i) {\n    if (!classesToDelete.has( existingClasses[ i ] )) {\n      className += ` ${existingClasses[ i ]}`;\n    }\n  }\n\n  element.className = className.trim();\n}\n","export const ROOT_CLASS_NAME = 'telechart-root';\n\n/**\n * @param {string} themeName\n * @returns {string}\n */\nexport function interpolateThemeClass (themeName) {\n  return `${ROOT_CLASS_NAME}_theme_${themeName}`;\n}\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemes = {\n  default: 'default',\n  dark: 'dark'\n};\n\n/**\n * @type {{default: string, dark: string}}\n */\nexport const ChartThemesColors = {\n  default: '#ffffff',\n  dark: '#242F3E'\n};\n","/**\n * @param {Array<*>} arrayA\n * @param {Array<*>} arrayB\n * @param {string | *} key\n * @return {boolean}\n */\nexport function arraysEqual (arrayA, arrayB, key = null) {\n  if (!Array.isArray(arrayA)\n    || !Array.isArray(arrayB)\n    || arrayA.length !== arrayB.length) {\n    return false;\n  }\n  for (let i = 0; i < arrayA.length; ++i) {\n    if (key) {\n      if (arrayA[ i ][ key ] !== arrayB[ i ][ key ]) {\n        return false;\n      }\n    } else if (arrayA[ i ] !== arrayB[ i ]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMinIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return minIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMin (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMinIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMaxIndex (array, startIndex = 0, endIndex = array.length - 1) {\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n  }\n  return maxIndex;\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {number}\n */\nexport function arrayMax (array, startIndex = 0, endIndex = array.length - 1) {\n  return array[ arrayMaxIndex( array, startIndex, endIndex ) ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMaxIndexes (array, startIndex = 0, endIndex = array.length - 1) {\n  let minIndex = startIndex;\n  let maxIndex = startIndex;\n  for (let i = startIndex + 1; i <= endIndex; ++i) {\n    if (array[ maxIndex ] < array[ i ]) {\n      maxIndex = i;\n    }\n    if (array[ minIndex ] > array[ i ]) {\n      minIndex = i;\n    }\n  }\n  return [ minIndex, maxIndex ];\n}\n\n/**\n * @param {Array<number>} array\n * @param {number?} startIndex\n * @param {number?} endIndex\n * @return {Array<number>}\n */\nexport function arrayMinMax (array, startIndex = 0, endIndex = array.length - 1) {\n  const [ minIndex, maxIndex ] = arrayMinMaxIndexes( array, startIndex, endIndex );\n  return [\n    array[ minIndex ],\n    array[ maxIndex ],\n  ];\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arraySum (array) {\n  let length = array.length;\n  let sum = 0;\n\n  while (length--) {\n    sum += array[ length ];\n  }\n\n  return sum;\n}\n\n/**\n * @param {Array<number>} array\n * @return {number}\n */\nexport function arrayAvg (array) {\n  let length = array.length;\n  let result = arraySum( array );\n\n  // prevent from dividing by zero\n  if (length) {\n    result = result / length;\n  }\n\n  return result;\n}\n\n/**\n * Finds boundary indexes in an array of numbers\n *\n * @param {Array<number>} array\n * @param {number} value\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchIndexes (array, value, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ] === value) {\n    left = right;\n  } else if (array[ left ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n\n/**\n * Finds boundary indexes in an array of objects\n *\n * @param {Array<Object>} array\n * @param {number} value\n * @param {string} key\n * @param {number} order\n * @return {[number, number]} Indexes\n * @private\n */\nexport function binarySearchObjectIndexes (array, value, key, order = 1) {\n  let [ left, right ] = [ 0, array.length - 1 ];\n\n  if (!array.length || order * value < order * array[ left ][ key ]) {\n    return [ -1, 0 ];\n  } else if (order * value > order * array[ right ][ key ]) {\n    return [ right, right + 1 ];\n  }\n\n  while (right - left > 1) {\n    let mid = left + (( right - left ) >> 1);\n    if (order * value <= order * array[ mid ][ key ]) {\n      right = mid;\n    } else {\n      left = mid;\n    }\n  }\n\n  if (array[ right ][ key ] === value) {\n    left = right;\n  } else if (array[ left ][ key ] === value) {\n    right = left;\n  }\n\n  return [ left, right ];\n}\n","export * from './constants';\nexport * from './animation';\nexport * from './base';\nexport * from './browser';\nexport * from './dom';\nexport * from './events';\nexport * from './svg';\nexport * from './text';\nexport * from './themes';\nexport * from './algorithms';\n","/**\n * Simple event emitter for better performance and app size\n *\n * @author Alexander Belov\n */\nexport class EventEmitter {\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _eventListeners = {};\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   */\n  emit (eventName, ...args) {\n    this._fireEvent( eventName, ...args );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  on (eventName, cb, context = null) {\n    this.addEventListener( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  once (eventName, cb, context = null) {\n    this.addEventListenerOnce( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListener (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    this._subscribeEvent( eventName, cb, context );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  addEventListenerOnce (eventName, cb, context = null) {\n    if (!cb) {\n      return;\n    }\n\n    const listener = (...args) => {\n      cb.apply( context, args );\n      this.removeEventListener( eventName, listener );\n    };\n\n    this.addEventListener( eventName, listener );\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} listener\n   */\n  removeEventListener (eventName, listener) {\n    if (!this._eventListeners[ eventName ]) {\n      return;\n    }\n\n    const listenerIndex = this._eventListeners[ eventName ].findIndex(([ cb ]) => {\n      return listener === cb;\n    });\n\n    if (listenerIndex < 0) {\n      return;\n    }\n\n    this._eventListeners[ eventName ].splice( listenerIndex, 1 );\n  }\n\n  /**\n   * @param {string | *} eventName\n   */\n  removeAllListeners (eventName = null) {\n    if (!eventName) {\n      this._eventListeners = {};\n    } else if (this._eventListeners[ eventName ]) {\n      this._eventListeners[ eventName ] = null;\n      delete this._eventListeners[ eventName ];\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @private\n   */\n  _allocateEvent (eventName) {\n    this._eventListeners[ eventName ] = this._eventListeners[ eventName ] || []\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} cb\n   * @param {*} context\n   */\n  _subscribeEvent (eventName, cb, context) {\n    this._allocateEvent( eventName );\n    this._eventListeners[ eventName ].push([ cb, context ]);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {*} args\n   * @private\n   */\n  _fireEvent (eventName, ...args) {\n    const eventListeners = this._eventListeners[ eventName ] || [];\n\n    for (let i = 0; i < eventListeners.length; ++i) {\n      const [ cb, context ] = eventListeners[ i ];\n      cb.apply( context, args );\n    }\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { FRAMES_PER_SECOND } from '../../utils';\n\nexport const AnimationSourceEvents = {\n  UPDATE: 'update'\n};\n\nexport class AnimationSource extends EventEmitter {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeElapsed = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _timeScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateInvokes = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updatesPerSecond = 60;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _updateEach = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateAt = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _paused = false;\n\n  /**\n   * @param {number} updatesPerSecond\n   * @param {number} timeScale\n   */\n  constructor (updatesPerSecond = 60, timeScale = 1) {\n    super();\n\n    this._updatesPerSecond = Math.min( 60, Math.max( 1e-8, updatesPerSecond ) );\n    this._updateEach = FRAMES_PER_SECOND / this._updatesPerSecond;\n    this._timeScale = timeScale;\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n    if (this._paused) {\n      return;\n    }\n\n    this._timeElapsed += deltaTime;\n    this._updateInvokes++;\n\n    if (this._updateInvokes % this._updateEach < 1) {\n      this._callUpdate( (this._timeElapsed - this._lastUpdateAt) * this._timeScale );\n      this._lastUpdateAt = this._timeElapsed;\n    }\n  }\n\n  /**\n   * Disposes the instance\n   */\n  dispose () {\n    this._paused = true;\n    this.removeAllListeners();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isPaused () {\n    return this._paused;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get isRunning () {\n    return !this._paused;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get timeScale () {\n    return this._timeScale;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set timeScale (value) {\n    this._timeScale = value;\n  }\n\n  /**\n   * @param {number} deltaTime\n   * @private\n   */\n  _callUpdate (deltaTime) {\n    this.emit( AnimationSourceEvents.UPDATE, deltaTime );\n  }\n}\n","import { EventEmitter } from \"./misc/EventEmitter\";\nimport {\n  capitalize,\n  clampNumber,\n  createElement,\n  getElementWidth,\n  resolveElement,\n  setAttributes,\n  setAttributesNS\n} from \"../utils\";\n\nconst telechartTitle = `${capitalize( TELECHART_NAME )} ${TELECHART_VERSION} (c) ${TELECHART_AUTHOR}`;\n\nlet INTERNAL_AUTOINCREMENT = 1;\n\nexport class SvgRenderer extends EventEmitter {\n\n  static NS = 'http://www.w3.org/2000/svg';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = INTERNAL_AUTOINCREMENT++;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parentContainer = null;\n\n  /**\n   * @type {SVGElement}\n   * @private\n   */\n  _svgContainer = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minHeight = 400;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _minWidth = 300;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _width = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _isInitialized = false;\n\n  /**\n   * @param {Element|string} contextElement\n   */\n  constructor (contextElement) {\n    super();\n\n    this._parentContainer = resolveElement( contextElement );\n    this._init();\n  }\n\n  /**\n   * @param {*} attrs\n   * @param {Array<Element>} children\n   * @param {Element} parent\n   * @return {Element}\n   */\n  createGroup (attrs = {}, children = [], parent = this._svgContainer) {\n    const group = createElement('g', {\n      useNS: true,\n      attrs\n    }, children, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Element} parent\n   * @return {SVGDescElement}\n   */\n  createDesc (text = '', parent = this._svgContainer) {\n    const group = createElement('desc', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n    parent.appendChild( group );\n\n    return group;\n  }\n\n  /**\n   * @param {string} text\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGTextElement}\n   */\n  createText (text = '', attrs = {}, parent = this._svgContainer) {\n    const tspan = createElement('tspan', {\n      useNS: true\n    }, text, SvgRenderer.NS);\n\n    const textElement = createElement('text', {\n      useNS: true,\n      attrs\n    }, tspan, SvgRenderer.NS);\n\n    parent.appendChild( textElement );\n\n    return textElement;\n  }\n\n  /**\n   * @param {Element[]} defs\n   * @param {Element} parent\n   * @return {SVGDefsElement}\n   */\n  createDefs (defs = [], parent = this._svgContainer) {\n    defs = [].concat( defs );\n\n    const element = createElement('defs', {\n      useNS: true\n    }, defs, SvgRenderer.NS);\n    parent.appendChild( element );\n\n    return element;\n  }\n\n  /**\n   * @param {string} pathText\n   * @param {Object} attrs\n   * @param {Element} parent\n   * @return {SVGPathElement}\n   */\n  createPath (pathText, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, { d: pathText });\n\n    const pathElement = createElement('path', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n    parent.appendChild( pathElement );\n\n    return pathElement;\n  }\n\n  /**\n   * @param {SVGPathElement} pathElement\n   * @param {Object} updatingAttrs\n   */\n  updatePath (pathElement, pathText, updatingAttrs = {}) {\n    updatingAttrs.d = pathText;\n    setAttributesNS( pathElement, updatingAttrs, null );\n  }\n\n  /**\n   * @param {number} width\n   * @param {number} height\n   * @param {*} attrs\n   * @param {SVGElement | Element} parent\n   * @return {SVGRectElement}\n   */\n  createRect (width, height, attrs = {}, parent = this._svgContainer) {\n    Object.assign(attrs, {\n      width, height\n    });\n\n    const rectElement = createElement('rect', {\n      useNS: true,\n      attrs\n    }, [], SvgRenderer.NS);\n\n    parent.appendChild( rectElement );\n\n    return rectElement;\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Element}\n   */\n  querySelector (selector) {\n    return this._svgContainer.querySelector( selector );\n  }\n\n  /**\n   * @param {string} selector\n   * @return {Array<Element>}\n   */\n  querySelectorAll (selector) {\n    return Array.from( this._svgContainer.querySelectorAll( selector ) );\n  }\n\n  /**\n   * Destroy the renderer\n   */\n  destroy () {\n    this._detachEvents();\n    this._clearParentContainer();\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @return {Element}\n   */\n  get parentContainer () {\n    return this._parentContainer;\n  }\n\n  /**\n   * @return {SVGElement}\n   */\n  get svgContainer () {\n    return this._svgContainer;\n  }\n\n  /**\n   * @return {number}\n   */\n  get width () {\n    return this._width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get height () {\n    return this._height;\n  }\n\n  /**\n   * @return {string}\n   */\n  get viewBox () {\n    return [ 0, 0, this._width, this._height ].join( ' ' );\n  }\n\n  /**\n   * @private\n   */\n  _init () {\n    if (this._isInitialized) {\n      return;\n    }\n\n    this._updateDimensions();\n    this._svgContainer = this._createSvgContainer();\n    this._insertSvgContainer();\n\n    this.createDesc( telechartTitle );\n\n    this._attachEvents();\n\n    this._isInitialized = true;\n  }\n\n  /**\n   * @return {Element}\n   * @private\n   */\n  _createSvgContainer () {\n    const parentContainer = this._parentContainer;\n\n    if (!parentContainer) {\n      throw new Error( 'Parent container is not provided' );\n    }\n\n    return createElement('svg', {\n      useNS: false,\n      attrs: {\n        xmlns: SvgRenderer.NS,\n        version: '1.1',\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox,\n        class: 'telechart-render'\n      }\n    }, [], SvgRenderer.NS);\n  }\n\n  /**\n   * @private\n   */\n  _insertSvgContainer () {\n    this._clearParentContainer();\n    this._parentContainer.appendChild( this._svgContainer );\n  }\n\n  /**\n   * @private\n   */\n  _updateDimensions () {\n    this._width = clampNumber(\n      getElementWidth( this._parentContainer ),\n      this._minWidth\n    );\n    this._height = this._minHeight;\n\n    if (this._svgContainer) {\n      setAttributes(this._svgContainer, {\n        width: this._width,\n        height: this._height,\n        viewBox: this.viewBox\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  _clearParentContainer () {\n    // clears the child content\n    this._parentContainer.innerHTML = '';\n  }\n\n  /**\n   * @private\n   */\n  _onResize (ev) {\n    this.emit( 'resize', ev );\n    this._updateDimensions();\n  }\n\n  /**\n   * @private\n   */\n  _attachEvents () {\n    this._attachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _detachEvents () {\n    this._detachResizeListener();\n  }\n\n  /**\n   * @private\n   */\n  _attachResizeListener () {\n    if (this._resizeListener) {\n      this._detachResizeListener();\n    }\n\n    this._resizeListener = this._onResize.bind( this );\n    window.addEventListener( 'resize', this._resizeListener );\n  }\n\n  /**\n   * @private\n   */\n  _detachResizeListener () {\n    if (!this._resizeListener) {\n      return;\n    }\n\n    window.removeEventListener( 'resize', this._resizeListener );\n    this._resizeListener = null;\n  }\n}\n","/**\n * @type {{x: string, line: string}}\n */\nexport const ChartTypes = {\n  x: 'x',\n  line: 'line'\n};\n","export const PointTypes = {\n  point: 'point',\n  group: 'group',\n};\n\nlet POINT_AUTOINCREMENT = 1;\n\nexport class Point {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _id = POINT_AUTOINCREMENT++;\n\n  /**\n   * @enum 'point' | 'group'\n   * @type {string}\n   * @private\n   */\n  _type = 'point';\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _x = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _y = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _svgY = 0;\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor (x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n  }\n\n  /**\n   * @param {string} pointType\n   */\n  setType (pointType = 'point') {\n    this._type = pointType;\n  }\n\n  /**\n   * @param {number} x\n   */\n  setX (x) {\n    this._x = x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  setY (y) {\n    this._y = y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  setXY (x, y) {\n    this.setX( x );\n    this.setY( y );\n  }\n\n  /**\n   * @param {number} x\n   */\n  addX (x) {\n    this._x += x;\n  }\n\n  /**\n   * @param {number} y\n   */\n  addY (y) {\n    this._y += y;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  addXY (x, y) {\n    this.addX( x );\n    this.addY( y );\n  }\n\n  /**\n   * @param {number} svgX\n   */\n  setSvgX (svgX) {\n    this._svgX = svgX;\n  }\n\n  /**\n   * @param {number} svgY\n   */\n  setSvgY (svgY) {\n    this._svgY = svgY;\n  }\n\n  /**\n   * @param {number} svgX\n   * @param {number} svgY\n   */\n  setSvgXY (svgX, svgY) {\n    this._svgX = svgX;\n    this._svgY = svgY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get id () {\n    return this._id;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get x () {\n    return this._x;\n  }\n\n  /**\n   * @returns {number}\n   */\n  get y () {\n    return this._y;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgX () {\n    return this._svgX;\n  }\n\n  /**\n   * @return {number}\n   */\n  get svgY () {\n    return this._svgY;\n  }\n\n  /**\n   * @returns {string}\n   */\n  get type () {\n    return this._type;\n  }\n}\n","import { Point, PointTypes } from './Point';\nimport { arrayAvg } from '../../utils/index';\n\nexport class PointGroup extends Point {\n\n  /**\n   * @type {Array<Point>}\n   * @private\n   */\n  _pointsGroup = [];\n\n  /**\n   * @type {arrayAvg}\n   * @private\n   */\n  _approximationFn = arrayAvg;\n\n  /**\n   * @param {Array<Point>} points\n   * @param {boolean?} autoCompute\n   */\n  constructor (points = [], autoCompute = true) {\n    super();\n    this.setType( PointTypes.group );\n    this.setPointsGroup( points, autoCompute );\n  }\n\n  /**\n   * @param {Array<Point>} points\n   * @param {boolean?} autoCompute\n   */\n  setPointsGroup (points, autoCompute = true) {\n    this._pointsGroup = points;\n\n    if (autoCompute) {\n      this.approximate();\n    }\n  }\n\n  /**\n   * @private\n   */\n  approximate () {\n    this.setX( this._approximateX() );\n    this.setY( this._approximateY() );\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  _approximateX () {\n    return this._approximationFn(\n      this._pointsGroup.map(p => p.x)\n    );\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  _approximateY () {\n    return this._approximationFn(\n      this._pointsGroup.map(p => p.y)\n    );\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { arrayMinMax, arraysEqual, ensureNumber } from '../../utils';\nimport { Point } from '../point/Point';\nimport { PointGroup } from '../point/PointGroup';\n\nexport class Series extends EventEmitter {\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _group = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _pathText = null;\n\n  /**\n   * @type {SVGPathElement}\n   * @private\n   */\n  _pathElement = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _parent = null;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _yAxis = [];\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _name = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _label = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _color = '#31a8dc';\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _visible = true;\n\n  /**\n   * @type {Array<Point>}\n   * @private\n   */\n  _points = [];\n\n  /**\n   * @type {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   * @private\n   */\n  _settings = {};\n\n  /**\n   * @type {*}\n   * @private\n   */\n  _seriesOptions = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _groupingPixels = 2;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartWidth = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _chartHeight = null;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRange = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportDistance = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPixelX = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _viewportPixelY = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportPixelUpdateNeeded = true;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRangeIndexes = [];\n\n  /**\n   * @type {Array<Point | PointGroup>}\n   * @private\n   */\n  _viewportPoints = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  _viewportPointsGroupingNeeded = true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentYScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localYScale = 1;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Element} parent\n   * @param {*} settings\n   */\n  constructor (renderer, parent, settings = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._parent = parent;\n    this._settings = settings;\n    this._parseSettings();\n\n    this.initialize();\n  }\n\n  /**\n   * Initializes series with options\n   */\n  initialize () {\n    this._createPoints();\n    this._updateGlobalExtremes();\n    this._addEvents();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n  }\n\n  /**\n   * Creates path\n   */\n  firstRender () {\n    if (this._pathElement) {\n      return;\n    }\n    // approximate viewport points for large data set\n    this.regroupViewportPoints();\n\n    // update svgX & svgY for each point\n    this.updateViewportPoints();\n  }\n\n  /**\n   * @param {Chart} chart\n   */\n  setChart (chart) {\n    this._chart = chart;\n  }\n\n  /**\n   * @param {string} pathText\n   */\n  setPathText (pathText) {\n    this._pathText = pathText;\n  }\n\n  /**\n   * @param {SVGPathElement} pathElement\n   */\n  setPathElement (pathElement) {\n    this._pathElement = pathElement;\n  }\n\n  /**\n   * Shows series on the chart\n   */\n  setVisible () {\n    this._visible = true;\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Hides series from the chart\n   */\n  setInvisible () {\n    this._visible = false;\n\n    this.emit( 'visibleChange', this._visible );\n  }\n\n  /**\n   * Toggles series\n   */\n  toggleVisible () {\n    this._visible\n      ? this.setInvisible()\n      : this.setVisible();\n  }\n\n  /**\n   * @param {Array<number>} range\n   * @param {Array<number>} rangeIndexes\n   */\n  setViewportRange (range, rangeIndexes) {\n    const oldRangeIndexes = this._viewportRangeIndexes;\n\n    this._viewportRange = range;\n    this._viewportRangeIndexes = rangeIndexes;\n    this._viewportDistance = this._viewportRange[ 1 ] - this._viewportRange[ 0 ];\n\n    if (!arraysEqual( rangeIndexes, oldRangeIndexes )) {\n      // mark as we need to re-compute approximation in next animation tick\n      this._viewportPixelUpdateNeeded = true;\n    }\n\n    // update minY and maxY local values\n    this._updateLocalExtremes();\n  }\n\n  /**\n   * Updates points array of viewport\n   */\n  updateViewportPoints () {\n    for (let i = 0; i < this._viewportPoints.length; ++i) {\n      const point = this._viewportPoints[ i ];\n      point.setSvgXY(\n        this._projectXToSvg( point.x ),\n        this._projectYToSvg( point.y ),\n      );\n    }\n  }\n\n  regroupViewportPoints () {\n    if (!this._viewportPointsGroupingNeeded) {\n      return;\n    }\n\n    const [ startIndex, endIndex ] = this._viewportRangeIndexes;\n\n    // if we have no enough points\n    // then we don't need to approximate\n    if (endIndex - startIndex < 100) {\n      // just slice points from the original array\n      // [ startIndex, endIndex ]\n      this._viewportPoints = this._points.slice( startIndex, endIndex + 1 );\n\n      // all work done here\n      return;\n    }\n\n    let viewportPoints = [];\n    let groupingLimitValue = this._groupingPixels * this._viewportPixelX;\n    let groupStartIndex = startIndex;\n\n    for (let i = startIndex + 1; i <= endIndex; ++i) {\n      const point = this._points[ i ];\n\n      const groupStartDifference = point.x - this._points[ groupStartIndex ].x;\n      if (groupStartDifference >= groupingLimitValue || i === endIndex) {\n        if (groupStartIndex !== i - 1) {\n          // we have 2 or more points to group\n          // [ startIndex, lastIndex ] all indexes inclusive\n          const group = this._points.slice( groupStartIndex, i );\n          const pointGroup = new PointGroup( group, true );\n          viewportPoints.push( pointGroup );\n        } else {\n          if (startIndex === i - 1) {\n            // add first point\n            viewportPoints.push( this._points[ startIndex ] );\n          }\n          viewportPoints.push( point );\n        }\n\n        groupStartIndex = i;\n      }\n    }\n\n    this._viewportPointsGroupingNeeded = false;\n    this._viewportPoints = viewportPoints;\n  }\n\n  /**\n   * @param {number} currentYScale\n   * @param {number} desiredYScale\n   */\n  setScale (currentYScale, desiredYScale) {\n    this._currentYScale = currentYScale;\n    this._localYScale = desiredYScale;\n  }\n\n  /**\n   * Updates pixel value for each axis\n   */\n  updateViewportPixel () {\n    this._viewportPixelX = this._viewportDistance / this._chartWidth;\n    this._viewportPixelY = this._chart.globalExtremeDifference / this._chartHeight;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get xAxis () {\n    return this._xAxis;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get yAxis () {\n    return this._yAxis;\n  }\n\n  /**\n   * @return {string}\n   */\n  get pathText () {\n    return this._pathText;\n  }\n\n  /**\n   * @return {SVGPathElement}\n   */\n  get pathElement () {\n    return this._pathElement;\n  }\n\n  /**\n   * @return {{xAxis: Array<number>, yAxis: Array<number>, label: string, type: string, name: string, color: string, options: *}}\n   */\n  get settings () {\n    return this._settings;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get isVisible () {\n    return this._visible;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMinY () {\n    return this._globalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMaxY () {\n    return this._globalMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  get viewportPixelUpdateNeeded () {\n    return this._viewportPixelUpdateNeeded;\n  }\n\n  /**\n   * @private\n   */\n  _parseSettings () {\n    const {\n      xAxis, yAxis,\n      label, type,\n      color, name,\n      width, height,\n      options = {}\n    } = this._settings;\n\n    this._xAxis = xAxis;\n    this._yAxis = yAxis;\n    this._label = label;\n    this._color = color;\n    this._name = name;\n\n    this._chartWidth = width;\n    this._chartHeight = height;\n\n    const groupingOptions = options.grouping;\n    if (groupingOptions) {\n      if (groupingOptions.pixels) {\n        this._groupingPixels = ensureNumber( groupingOptions.pixels );\n      }\n    }\n\n    this._seriesOptions = options;\n  }\n\n  /**\n   * @private\n   */\n  _createPoints () {\n    const xAxis = this._xAxis;\n    const yAxis = this._yAxis;\n\n    for (let i = 0; i < xAxis.length; ++i) {\n      this._points.push(\n        new Point( xAxis[ i ], yAxis[ i ] )\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateGlobalExtremes () {\n    const [ minValue, maxValue ] = arrayMinMax( this._yAxis );\n\n    this._globalMinY = Math.min( 0, minValue );\n    this._globalMaxY = maxValue;\n  }\n\n  /**\n   * @private\n   */\n  _updateLocalExtremes () {\n    const [ rangeStartIndex, rangeEndIndex ] = this._viewportRangeIndexes;\n\n    const [ minValue, maxValue ] = arrayMinMax(\n      this._yAxis, rangeStartIndex, rangeEndIndex\n    );\n\n    this._localMinY = Math.min( 0, minValue );\n    this._localMaxY = maxValue;\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   * @private\n   */\n  _projectXToSvg (x) {\n    return this._toRelativeX( x ) / this._viewportPixelX;\n  }\n\n  /**\n   * @param {number} y\n   * @return {number}\n   * @private\n   */\n  _projectYToSvg (y) {\n    return this._chartHeight\n      - (\n        y - this._chart.localMinY\n      ) / (\n        this._viewportPixelY * this._currentYScale\n      );\n  }\n\n  /**\n   * @private\n   */\n  _addEvents () {\n    this._renderer.on('resize', _ => {\n      this._onRendererResize();\n    });\n  }\n\n  /**\n   * @private\n   */\n  _onRendererResize () {\n    this._updateDimensions();\n  }\n\n  /**\n   * @private\n   */\n  _updateDimensions () {\n    this._chartWidth = this._renderer.width;\n\n    // update value-per-pixel and min-max distance\n    this.updateViewportPixel();\n  }\n\n  /**\n   * @param {number} x\n   * @return {number}\n   * @private\n   */\n  _toRelativeX (x) {\n    return x - this._viewportRange[ 0 ];\n  }\n}\n","import { EventEmitter } from '../misc/EventEmitter';\nimport { ChartTypes } from './ChartTypes';\nimport { Series } from '../series/Series';\nimport { binarySearchIndexes, isDate, TimeRanges } from '../../utils';\n\nexport class Chart extends EventEmitter {\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _height = 250; // chart height will be constant\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _xAxis = [];\n\n  /**\n   * @type {Array<Series>}\n   * @private\n   */\n  _series = [];\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _seriesGroup = null;\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRange = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  _viewportRangeIndexes = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _globalMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMinY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localMaxY = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _localYScale = 1;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _currentYScale = null;\n\n  /**\n   * @param {SvgRenderer} renderer\n   * @param {Object} options\n   */\n  constructor (renderer, options = {}) {\n    super();\n\n    this._renderer = renderer;\n    this._options = options;\n\n    this._initialize();\n  }\n\n  /**\n   * @param {number} deltaTime\n   */\n  update (deltaTime) {\n  }\n\n  /**\n   * Draws initial chart\n   */\n  firstRender () {\n    this._eachSeries(line => line.firstRender());\n  }\n\n  /**\n   * @param {number|Date} minX\n   * @param {number|Date} maxX\n   */\n  setViewportRange (minX, maxX) {\n    const xAxis = this._xAxis;\n\n    const globalMinX = xAxis[ 0 ];\n    const globalMaxX = xAxis[ xAxis.length - 1 ];\n\n    if (isDate( minX )) {\n      minX = minX.getTime();\n    }\n    if (isDate( maxX )) {\n      maxX = maxX.getTime();\n    }\n\n    const padding = ( maxX - minX ) * .05;\n\n    minX = Math.max( minX, globalMinX - padding );\n    maxX = Math.min( maxX, globalMaxX + padding );\n\n    this._viewportRange = [ minX, maxX ];\n\n    // recompute boundaries (indexes)\n    this._updateViewportIndexes();\n\n    this._eachSeries(line => {\n      // set X viewport interval for line\n      line.setViewportRange( this._viewportRange, this._viewportRangeIndexes );\n    });\n\n    // update global and local extremes\n    // update local scale\n    this._updateExtremes();\n\n    // update scales for each line\n    this._updateSeriesScale();\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRange () {\n    return this._viewportRange;\n  }\n\n  /**\n   * @return {Array<number>}\n   */\n  get viewportRangeIndexes () {\n    return this._viewportRangeIndexes;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalExtremeDifference () {\n    return this._globalMaxY - this._globalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localExtremeDifference () {\n    return this._localMaxY - this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMinY () {\n    return this._localMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get localMaxY () {\n    return this._localMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMinY () {\n    return this._globalMinY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get globalMaxY () {\n    return this._globalMaxY;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartWidth () {\n    return this._renderer.width;\n  }\n\n  /**\n   * @return {number}\n   */\n  get chartHeight () {\n    return this._height;\n  }\n\n  /**\n   * @private\n   */\n  _initialize () {\n    this._createSeriesGroup();\n    this._createSeries();\n    this._addEvents();\n    this._setInitialRange();\n  }\n\n  /**\n   * @private\n   */\n  _createSeriesGroup () {\n    this._seriesGroup = this._renderer.createGroup({\n      class: 'telechart-series-group',\n      transform: `translate(0, 70) scale(1 1)`\n    });\n  }\n\n  /**\n   * @private\n   */\n  _createSeries () {\n    const {\n      series: data,\n      seriesOptions: options = {}\n    } = this._options || {};\n\n    const {\n      columns,\n      types,\n      colors,\n      names\n    } = data;\n\n    const xAxisIndex = columns.findIndex(column => {\n      return types[ column[ 0 ] ] === ChartTypes.x;\n    });\n    const xAxis = this._xAxis = columns[ xAxisIndex ].slice( 1 );\n\n    let yAxes = columns.slice(); // copy an array to change later\n    yAxes.splice( xAxisIndex, 1 ); // remove x axis from the array\n\n    for (let i = 0; i < yAxes.length; ++i) {\n      const yAxis = yAxes[ i ];\n      const label = yAxis.shift();\n      const type = types[ label ];\n      const color = colors[ label ];\n      const name = names[ label ];\n\n      // prepare series settings\n      const settings = {\n        xAxis, yAxis, label, type,\n        color, name, options,\n        width: this.chartWidth,\n        height: this.chartHeight\n      };\n\n      // create instance\n      const series = new Series( this._renderer, this._seriesGroup, settings );\n\n      // provide context for each series\n      series.setChart( this );\n\n      this._series.push( series );\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateViewportIndexes () {\n    const [ rangeStart, rangeEnd ] = this._viewportRange;\n    const [ minLowerIndex, minUpperIndex ] = binarySearchIndexes( this._xAxis, rangeStart );\n    const [ maxLowerIndex, maxUpperIndex ] = binarySearchIndexes( this._xAxis, rangeEnd );\n\n    this._viewportRangeIndexes = [ minUpperIndex, maxLowerIndex ];\n  }\n\n  /**\n   * @private\n   */\n  _updateExtremes () {\n    let localMinY = 0;\n    let localMaxY = 0;\n    let globalMinY = 0;\n    let globalMaxY = 0;\n\n    this._eachSeries(line => {\n      if (!line.isVisible) {\n        // filter only visible series\n        return;\n      }\n\n      if (localMinY > line.localMinY) {\n        localMinY = line.localMinY;\n      }\n      if (localMaxY < line.localMaxY) {\n        localMaxY = line.localMaxY;\n      }\n\n      if (globalMinY > line.globalMinY) {\n        globalMinY = line.globalMinY;\n      }\n      if (globalMaxY < line.globalMaxY) {\n        globalMaxY = line.globalMaxY;\n      }\n    });\n\n    this._localMinY = localMinY;\n    this._localMaxY = localMaxY;\n\n    this._globalMinY = globalMinY;\n    this._globalMaxY = globalMaxY;\n\n    this._localYScale = this._computeYScale();\n\n    if (typeof this._currentYScale !== 'number') {\n      // set initial scale\n      this._currentYScale = this._localYScale;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateSeriesScale () {\n    this._eachSeries(line => {\n      line.setScale( this._currentYScale, this._localYScale );\n      line.updateViewportPixel();\n    });\n  }\n\n  /**\n   * @private\n   */\n  _addEvents () {\n    this._renderer.on('resize', _ => {\n      this._onRendererResize();\n    });\n\n    this._eachSeries(line => {\n      line.on('visibleChange', _ => {\n        this._onSeriesVisibleChange( line );\n      });\n    });\n  }\n\n  /**\n   * @private\n   */\n  _setInitialRange () {\n    const globalMinX = this._xAxis[ 0 ];\n    const globalMaxX = this._xAxis[ this._xAxis.length - 1 ];\n    const difference = globalMaxX - globalMinX;\n    const initialViewport = Math.floor( difference );\n    const viewportPadding = Math.floor( initialViewport * .05 );\n\n    // set initial range\n    this.setViewportRange( globalMaxX - initialViewport - viewportPadding, globalMaxX + viewportPadding );\n  }\n\n  /**\n   * @private\n   */\n  _onRendererResize () {\n  }\n\n  /**\n   * @param {Series} series\n   * @private\n   */\n  _onSeriesVisibleChange (series) {\n    // find new extremes and scale\n    this._updateExtremes();\n\n    // setup new scale for each line\n    this._updateSeriesScale();\n  }\n\n  /**\n   * @return {number}\n   * @private\n   */\n  _computeYScale () {\n    const globalHeight = this.globalExtremeDifference;\n    const localHeight = this.localExtremeDifference;\n\n    // prevent dividing by zero\n    if (!globalHeight) {\n      return 1;\n    }\n\n    return localHeight / globalHeight;\n  }\n\n  /**\n   * @param {Function} fn\n   * @private\n   */\n  _eachSeries (fn = () => {}) {\n    for (let i = 0; i < this._series.length; ++i) {\n      fn( this._series[ i ] );\n    }\n  }\n}\n","export class Clock {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  _lastUpdateMs = 0;\n\n  constructor () {\n    this._lastUpdateMs = this.now;\n  }\n\n  /**\n   * @return {number}\n   */\n  getDelta () {\n    const now = this.now;\n    const delta = now - this._lastUpdateMs;\n    this._lastUpdateMs = now;\n\n    return delta;\n  }\n\n  /**\n   * @return {number}\n   */\n  get now () {\n    return (performance || Date).now();\n  }\n}\n","import './style/telechart.scss';\n\nimport { AnimationSource, AnimationSourceEvents } from './core/animation/AnimationSource';\nimport { SvgRenderer } from \"./core/SvgRenderer\";\nimport { Chart } from './core/chart/Chart';\nimport { Clock } from './core/misc/Clock';\n\nimport {\n  addClass,\n  interpolateThemeClass,\n  removeClass,\n  resolveElement,\n  ChartThemes,\n  setAttributesNS,\n  cssText, createElement, ROOT_CLASS_NAME\n} from \"./utils\";\n\nexport class Telechart {\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  _options = null;\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  _rootElement = null;\n\n  /**\n   * @type {SvgRenderer}\n   * @private\n   */\n  _renderer = null;\n\n  /**\n   * @type {Chart}\n   * @private\n   */\n  _chart = null;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _themeName = ChartThemes.default;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  _title = '';\n\n  /**\n   * @type {SVGTextElement}\n   * @private\n   */\n  _titleElement = null;\n\n  /**\n   * @type {Clock}\n   * @private\n   */\n  _clock = null;\n\n  /**\n   * @type {AnimationSource}\n   * @private\n   */\n  _animationSource = null;\n\n  /**\n   * @static\n   * @param {Element | string} mountTo Element or selector\n   * @param {Object} options\n   */\n  static create (mountTo, options = {}) {\n    const chart = new Telechart();\n\n    chart.setOptions( options );\n    chart.mount( resolveElement( mountTo ) );\n    chart.initialize();\n\n    chart.firstRender();\n\n    return chart;\n  }\n\n  /**\n   * @param {Object} options\n   */\n  setOptions (options = {}) {\n    this._options = options;\n  }\n\n  /**\n   * @param {Element} parent\n   */\n  mount (parent) {\n    const root = createElement('div', {\n      attrs: {\n        class: ROOT_CLASS_NAME\n      }\n    });\n\n    parent.appendChild( root );\n\n    this._rootElement = root;\n    this._renderer = new SvgRenderer( root );\n  }\n\n  /**\n   * Initialize the chart\n   */\n  initialize () {\n    this.setTheme( this._options.theme || ChartThemes.default );\n    this.setTitle( this._options.title );\n\n    // create components\n    this._createChart();\n\n    // create animation loop\n    this._clock = new Clock();\n    this._animationSource = new AnimationSource( 60, 1 ); // fps, timeScale\n    this._animationSource.on(AnimationSourceEvents.UPDATE, deltaTime => {\n      this.update( deltaTime );\n    });\n\n    requestAnimationFrame(_ => {\n      this.animate();\n    });\n  }\n\n  /**\n   * Draws first frame\n   */\n  firstRender () {\n    this._chart.firstRender();\n  }\n\n  /**\n   * Animation loop\n   */\n  animate () {\n    const deltaTime = this._clock.getDelta();\n    this._animationSource.update( deltaTime );\n\n    requestAnimationFrame(_ => this.animate());\n  }\n\n  /**\n   * Update loop\n   */\n  update (deltaTime) {\n    this._chart.update( deltaTime );\n  }\n\n  /**\n   * @param {string} themeName\n   */\n  setTheme (themeName) {\n    const rootElement = this._rootElement;\n\n    removeClass(\n      rootElement,\n      Object.keys( ChartThemes )\n        .map( interpolateThemeClass )\n    );\n\n    addClass(\n      rootElement,\n      interpolateThemeClass( themeName )\n    );\n\n    this._themeName = themeName;\n  }\n\n  /**\n   * @param {string} title\n   */\n  setTitle (title) {\n    this._title = title;\n\n    !this._titleElement\n      ? this._createTitle( title )\n      : this._updateTitle( title );\n  }\n\n  /**\n   * Destroys the chart instance\n   */\n  destroy () {\n    this._renderer && this._renderer.destroy();\n    this._rootElement = null;\n    this._renderer = null;\n  }\n\n  /**\n   * @return {string}\n   */\n  get themeName () {\n    return this._themeName;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _createTitle (title = this._options.title) {\n    if (!title) {\n      return;\n    }\n\n    const text = this._renderer.createText(title, {\n      class: 'telechart-title',\n      x: 16,\n      y: 36,\n      textAnchor: 'start',\n      style: cssText({\n        opacity: 0\n      })\n    });\n\n    setTimeout(_ => {\n      setAttributesNS(text, {\n        style: cssText({\n          opacity: 1\n        })\n      });\n    }, 200);\n\n    this._titleElement = text;\n  }\n\n  /**\n   * @param {string} title\n   * @private\n   */\n  _updateTitle (title) {\n    if (!this._titleElement) {\n      return;\n    }\n    const tspan = this._titleElement.querySelector( 'tspan' );\n    tspan.innerHTML = title;\n  }\n\n  /**\n   * @private\n   */\n  _createChart () {\n    this._chart = new Chart(\n      this._renderer,\n      this._options\n    );\n  }\n}\n","export * from './Telechart';\n","import sourceData from '../samples/chart_data.json';\nimport { Telechart } from '../src';\nimport {\n  addClass, animationTimeout,\n  ChartThemes, ChartThemesColors,\n  createElement,\n  cssText,\n  parseQueryString,\n  removeClass,\n  setAttributes\n} from '../src/utils';\n\nconst query = parseQueryString( location.search );\nlet currentThemeName = query && query.theme || 'default';\n\nconst charts = [];\n\nconst from = 0;\nconst count = 5;\n\n// initialize charts using requestAnimationFrame\n// for better user experience\nsourceData\n  .slice(from, from + count)\n  .map((chartData, index) => {\n    return animationTimeout( 20 * index, [ chartData, index ] );\n  })\n  .map(animation => {\n    animation.then(([ chartData, index ]) => createChart( chartData, index ));\n    return animation;\n  });\n\nupdatePageTheme();\n\nlet buttonContent = `\n  <span class=\"text-switcher\">\n    <span>Switch to </span>\n    <span class=\"text-switcher__switcher\">\n      <span>Night</span>\n      <span>Day</span>\n    </span>\n    <span> Mode</span>\n  </span>\n`;\n\nconst themeButton = createElement('button', {\n  attrs: {\n    class: 'demo-theme-button',\n    style: cssText({\n      opacity: 0\n    })\n  }\n}, buttonContent);\n\nwindow.addEventListener('load', _ => {\n  document.body.appendChild( themeButton );\n\n  themeButton.addEventListener('click', ev => {\n    updateChartsTheme();\n    updatePageTheme();\n  });\n\n  setTimeout(_ => {\n    setAttributes(themeButton, {\n      style: cssText({\n        opacity: 1\n      })\n    });\n  }, 100);\n});\n\nfunction updateChartsTheme () {\n  const isDefaultTheme = currentThemeName === ChartThemes.default;\n  const newTheme = isDefaultTheme\n    ? ChartThemes.dark\n    : ChartThemes.default;\n  currentThemeName = newTheme;\n\n  charts.forEach(chart => {\n    chart.setTheme( newTheme );\n  });\n}\n\nfunction updatePageTheme () {\n  removeClass( document.body, [ 'default-theme', 'dark-theme' ] );\n  addClass( document.body, `${currentThemeName}-theme` );\n\n  setTimeout(_ => {\n    updatePageThemeColor();\n  }, 300);\n}\n\nfunction updatePageThemeColor () {\n  const themeColor = ChartThemesColors[ currentThemeName ];\n\n  let metaTheme = document.querySelector( '[name=\"theme-color\"]' );\n\n  if (!metaTheme) {\n    metaTheme = createElement('meta', {\n      attrs: {\n        name: 'theme-color',\n        content: themeColor\n      }\n    });\n    document.head.appendChild( metaTheme );\n  } else {\n    metaTheme.setAttribute( 'content', themeColor );\n  }\n}\n\nfunction createChart (chartData, index) {\n  const container = document.querySelector( `#telechart-${index + 1}` );\n\n  const start = performance.now();\n  const chart = Telechart.create(container, {\n    title: 'Followers',\n    series: {\n      columns: chartData.columns,\n      names: chartData.names,\n      types: chartData.types,\n      colors: chartData.colors,\n    },\n    seriesOptions: {\n      grouping: {\n        pixels: 2\n      }\n    }\n  });\n\n  console.log( `#${index}`, performance.now() - start );\n\n  // set initial theme\n  chart.setTheme( currentThemeName );\n\n  charts.push( chart );\n}\n"],"sourceRoot":""}